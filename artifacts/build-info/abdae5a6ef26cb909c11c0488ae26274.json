{"id":"abdae5a6ef26cb909c11c0488ae26274","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface AutomationCompatibleInterface {\n  /**\n   * @notice method that is simulated by the keepers to see if any work actually\n   * needs to be performed. This method does does not actually need to be\n   * executable, and since it is only ever simulated it can consume lots of gas.\n   * @dev To ensure that it is never called, you may want to add the\n   * cannotExecute modifier from KeeperBase to your implementation of this\n   * method.\n   * @param checkData specified in the upkeep registration so it is always the\n   * same for a registered upkeep. This can easily be broken down into specific\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\n   * same contract and easily differentiated by the contract.\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\n   * performUpkeep or not.\n   * @return performData bytes that the keeper should call performUpkeep with, if\n   * upkeep is needed. If you would like to encode data to decode later, try\n   * `abi.encode`.\n   */\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\n\n  /**\n   * @notice method that is actually executed by the keepers, via the registry.\n   * The data returned by the checkUpkeep simulation will be passed into\n   * this method to actually be executed.\n   * @dev The input to this method should not be trusted, and the caller of the\n   * method should not even be restricted to any single registry. Anyone should\n   * be able call it, and the input should be validated, there is no guarantee\n   * that the data passed in is the performData returned from checkUpkeep. This\n   * could happen due to malicious keepers, racing keepers, or simply a state\n   * change while the performUpkeep transaction is waiting for confirmation.\n   * Always validate the data passed in.\n   * @param performData is the data which was passed back from the checkData\n   * simulation. If it is encoded, it can easily be decoded into other types by\n   * calling `abi.decode`. This data should not be trusted, and should be\n   * validated against the contract's current state.\n   */\n  function performUpkeep(bytes calldata performData) external;\n}\n"},"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface VRFCoordinatorV2Interface {\n  /**\n   * @notice Get configuration relevant for making requests\n   * @return minimumRequestConfirmations global min for request confirmations\n   * @return maxGasLimit global max for request gas limit\n   * @return s_provingKeyHashes list of registered key hashes\n   */\n  function getRequestConfig() external view returns (uint16, uint32, bytes32[] memory);\n\n  /**\n   * @notice Request a set of random words.\n   * @param keyHash - Corresponds to a particular oracle job which uses\n   * that key for generating the VRF proof. Different keyHash's have different gas price\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\n   * @param subId  - The ID of the VRF subscription. Must be funded\n   * with the minimum subscription balance required for the selected keyHash.\n   * @param minimumRequestConfirmations - How many blocks you'd like the\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n   * for why you may want to request more. The acceptable range is\n   * [minimumRequestBlockConfirmations, 200].\n   * @param callbackGasLimit - How much gas you'd like to receive in your\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n   * may be slightly less than this amount because of gas used calling the function\n   * (argument decoding etc.), so you may need to request slightly more than you expect\n   * to have inside fulfillRandomWords. The acceptable range is\n   * [0, maxGasLimit]\n   * @param numWords - The number of uint256 random values you'd like to receive\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\n   * @return requestId - A unique identifier of the request. Can be used to match\n   * a request to a response in fulfillRandomWords.\n   */\n  function requestRandomWords(\n    bytes32 keyHash,\n    uint64 subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords\n  ) external returns (uint256 requestId);\n\n  /**\n   * @notice Create a VRF subscription.\n   * @return subId - A unique subscription id.\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n   * @dev Note to fund the subscription, use transferAndCall. For example\n   * @dev  LINKTOKEN.transferAndCall(\n   * @dev    address(COORDINATOR),\n   * @dev    amount,\n   * @dev    abi.encode(subId));\n   */\n  function createSubscription() external returns (uint64 subId);\n\n  /**\n   * @notice Get a VRF subscription.\n   * @param subId - ID of the subscription\n   * @return balance - LINK balance of the subscription in juels.\n   * @return reqCount - number of requests for this subscription, determines fee tier.\n   * @return owner - owner of the subscription.\n   * @return consumers - list of consumer address which are able to use this subscription.\n   */\n  function getSubscription(\n    uint64 subId\n  ) external view returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers);\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @param newOwner - proposed new owner of the subscription\n   */\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @dev will revert if original owner of subId has\n   * not requested that msg.sender become the new owner.\n   */\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\n\n  /**\n   * @notice Add a consumer to a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - New consumer which can use the subscription\n   */\n  function addConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Remove a consumer from a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - Consumer to remove from the subscription\n   */\n  function removeConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Cancel a subscription\n   * @param subId - ID of the subscription\n   * @param to - Where to send the remaining LINK to\n   */\n  function cancelSubscription(uint64 subId, address to) external;\n\n  /*\n   * @notice Check to see if there exists a request commitment consumers\n   * for all consumers and keyhashes for a given sub.\n   * @param subId - ID of the subscription\n   * @return true if there exists at least one unfulfilled request for the subscription, false\n   * otherwise.\n   */\n  function pendingRequestExists(uint64 subId) external view returns (bool);\n}\n"},"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\n * @dev 1. The fulfillment came from the VRFCoordinator\n * @dev 2. The consumer contract implements fulfillRandomWords.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\n * @dev initialize VRFConsumerBase's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumer {\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash). Create subscription, fund it\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n * @dev subscription management functions).\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n * @dev callbackGasLimit, numWords),\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\n *\n * @dev Once the VRFCoordinator has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomWords method.\n *\n * @dev The randomness argument to fulfillRandomWords is a set of random words\n * @dev generated from your requestId and the blockHash of the request.\n *\n * @dev If your contract could have concurrent requests open, you can use the\n * @dev requestId returned from requestRandomWords to track which response is associated\n * @dev with which randomness request.\n * @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ.\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request. It is for this reason that\n * @dev that you can signal to an oracle you'd like them to wait longer before\n * @dev responding to the request (however this is not enforced in the contract\n * @dev and so remains effective only in the case of unmodified oracle software).\n */\nabstract contract VRFConsumerBaseV2 {\n  error OnlyCoordinatorCanFulfill(address have, address want);\n  // solhint-disable-next-line chainlink-solidity/prefix-immutable-variables-with-i\n  address private immutable vrfCoordinator;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   */\n  constructor(address _vrfCoordinator) {\n    vrfCoordinator = _vrfCoordinator;\n  }\n\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomWords the VRF output expanded to the requested number of words\n   */\n  // solhint-disable-next-line chainlink-solidity/prefix-internal-functions-with-underscore\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\n    if (msg.sender != vrfCoordinator) {\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\n    }\n    fulfillRandomWords(requestId, randomWords);\n  }\n}\n"},"contracts/Raffel.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\";\nimport \"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol\";\nimport  \"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\";\n\nerror Raffel_NotEnoughEthSent();\nerror Raffel_TransferFailed();\nerror Raffel_NotOpen();\nerror Raffel_UpkeepNotNeeded(\n    uint256 currentBalance,\n    uint256 numPlayers,\n    uint256 raffelState\n);\n\ncontract Raffel is VRFConsumerBaseV2{\n// State variables\n    uint256 private immutable i_entryFee;\n    address payable[] private s_players;\n    VRFCoordinatorV2Interface private immutable i_vrfCoordinator;\n    bytes32 private immutable i_gasLane;\n    uint64 private immutable i_subscriptionId;\n    uint16 private constant requestConfirmations = 3;\n    uint32 private immutable i_callbackGasLimit = 100000;\n    uint32 private constant numWords = 1;\n\n// Lottery variables\n    address private s_recentWinner;\n    RaffelState private s_raffelState;\n    uint private s_lastTimeStamp;\n    uint private immutable i_interval;\n\n// Types\n    enum RaffelState {\n        OPEN,\n        CALCULATING\n    }\n\n// Events\n    event RaffelEntered(address indexed player);\n    event RequestedRaffelWinner(uint indexed requestId);\n    event RaffelWinnerPicked(address indexed winner);\n\n    constructor(\n        uint256 entryFee, \n        address vrfCoordinator,\n        bytes32 gasLane,\n        uint64 subscriptionId,\n        uint32 callbackGasLimit,\n        uint interval\n        ) \n        \n        VRFConsumerBaseV2(vrfCoordinator) {\n        i_entryFee = entryFee;\n        i_vrfCoordinator = VRFCoordinatorV2Interface(vrfCoordinator);\n        i_gasLane = gasLane;\n        i_subscriptionId = subscriptionId;\n        i_callbackGasLimit = callbackGasLimit;\n        s_raffelState = RaffelState.OPEN;\n        s_lastTimeStamp = block.timestamp;\n        i_interval = interval;\n        \n    }\n    function enterRaffel() public payable{\n        if(msg.value < i_entryFee) {\n            revert Raffel_NotOpen();\n        }\n        if(s_raffelState != RaffelState.OPEN) {\n            revert(\"Raffel is not open\");\n        }\n        s_players.push(payable(msg.sender));\n        emit RaffelEntered(msg.sender);\n    }\n\n    function chaecUpkeepLogic() internal view returns (bool upkeepNeeded) {\n        bool isOpen = (RaffelState.OPEN == s_raffelState);\n        bool timePassed = (block.timestamp - s_lastTimeStamp) > i_interval;\n        bool hasPlayers = (s_players.length > 0);\n        bool hasBalance = (address(this).balance > 0);\n        upkeepNeeded = (isOpen && timePassed && hasPlayers && hasBalance);\n    }\n\n    function checkUpkeep(\n        bytes calldata /* checkData */\n    )\n        external\n        \n        view\n        \n        returns (bool upkeepNeeded, bytes memory /* performData */)\n    {\n      upkeepNeeded = chaecUpkeepLogic();\n    }\n\n    function performUpKeep(bytes calldata) external     {\n        \n        if(!chaecUpkeepLogic()) {\n            revert Raffel_UpkeepNotNeeded(address(this).balance, s_players.length,uint256(s_raffelState));\n        }\n        s_raffelState = RaffelState.CALCULATING;\n       uint requestId=i_vrfCoordinator.requestRandomWords(\n            i_gasLane,\n            i_subscriptionId,\n            requestConfirmations,\n            i_callbackGasLimit,\n            numWords\n        );\n    emit RequestedRaffelWinner(requestId);\n    }\n\n    function fulfillRandomWords(uint256 requestId,uint256[] memory randomWords) internal override {\n        \n        uint indexodWinner = randomWords[0] % s_players.length;\n        address payable recentWinner = s_players[indexodWinner];\n        s_recentWinner=recentWinner;\n        s_raffelState = RaffelState.OPEN;\n        s_players = new address payable[](0); // Reset the players array for the next raffle\n        s_lastTimeStamp = block.timestamp; // Reset the last timestamp for the next raffle\n        (bool success, ) = recentWinner.call{value: address(this).balance}(\"\");\n        require(success, \"Transfer failed\");\n        if(!success) {\n            revert Raffel_TransferFailed();\n        }\n\n        emit RaffelWinnerPicked(recentWinner);\n    }\n\n    function getEntryFee() external view returns (uint256) {\n        return i_entryFee;\n    }\n\n    function getPlayer(uint256 index) external view returns (address payable) {\n        return s_players[index];\n    }\n\n    function gertRecentWinner() public view returns (address){\n        return s_recentWinner;\n    }\n\n    function getRaffelState() public view returns (RaffelState) {\n        return s_raffelState;\n    }   \n\n    function getNumWords() public pure returns (uint32) {\n        return numWords;\n    }\n\n    function getRequestConfirmations() public pure returns (uint16) {\n        return requestConfirmations;\n    }\n\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"6321","formattedMessage":"Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n  --> contracts/Raffel.sol:91:37:\n   |\n91 |         returns (bool upkeepNeeded, bytes memory /* performData */)\n   |                                     ^^^^^^^^^^^^\n\n","message":"Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.","severity":"warning","sourceLocation":{"end":2854,"file":"contracts/Raffel.sol","start":2842},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/Raffel.sol:112:33:\n    |\n112 |     function fulfillRandomWords(uint256 requestId,uint256[] memory randomWords) internal override {\n    |                                 ^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":3504,"file":"contracts/Raffel.sol","start":3487},"type":"Warning"}],"sources":{"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol","exportedSymbols":{"AutomationCompatibleInterface":[18]},"id":19,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"AutomationCompatibleInterface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":18,"linearizedBaseContracts":[18],"name":"AutomationCompatibleInterface","nameLocation":"120:29:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"154:985:0","text":" @notice method that is simulated by the keepers to see if any work actually\n needs to be performed. This method does does not actually need to be\n executable, and since it is only ever simulated it can consume lots of gas.\n @dev To ensure that it is never called, you may want to add the\n cannotExecute modifier from KeeperBase to your implementation of this\n method.\n @param checkData specified in the upkeep registration so it is always the\n same for a registered upkeep. This can easily be broken down into specific\n arguments using `abi.decode`, so multiple upkeeps can be registered on the\n same contract and easily differentiated by the contract.\n @return upkeepNeeded boolean to indicate whether the keeper should call\n performUpkeep or not.\n @return performData bytes that the keeper should call performUpkeep with, if\n upkeep is needed. If you would like to encode data to decode later, try\n `abi.encode`."},"functionSelector":"6e04ff0d","id":11,"implemented":false,"kind":"function","modifiers":[],"name":"checkUpkeep","nameLocation":"1151:11:0","nodeType":"FunctionDefinition","parameters":{"id":5,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"mutability":"mutable","name":"checkData","nameLocation":"1178:9:0","nodeType":"VariableDeclaration","scope":11,"src":"1163:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3,"name":"bytes","nodeType":"ElementaryTypeName","src":"1163:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1162:26:0"},"returnParameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"1212:12:0","nodeType":"VariableDeclaration","scope":11,"src":"1207:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6,"name":"bool","nodeType":"ElementaryTypeName","src":"1207:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9,"mutability":"mutable","name":"performData","nameLocation":"1239:11:0","nodeType":"VariableDeclaration","scope":11,"src":"1226:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8,"name":"bytes","nodeType":"ElementaryTypeName","src":"1226:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1206:45:0"},"scope":18,"src":"1142:110:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":12,"nodeType":"StructuredDocumentation","src":"1256:1003:0","text":" @notice method that is actually executed by the keepers, via the registry.\n The data returned by the checkUpkeep simulation will be passed into\n this method to actually be executed.\n @dev The input to this method should not be trusted, and the caller of the\n method should not even be restricted to any single registry. Anyone should\n be able call it, and the input should be validated, there is no guarantee\n that the data passed in is the performData returned from checkUpkeep. This\n could happen due to malicious keepers, racing keepers, or simply a state\n change while the performUpkeep transaction is waiting for confirmation.\n Always validate the data passed in.\n @param performData is the data which was passed back from the checkData\n simulation. If it is encoded, it can easily be decoded into other types by\n calling `abi.decode`. This data should not be trusted, and should be\n validated against the contract's current state."},"functionSelector":"4585e33b","id":17,"implemented":false,"kind":"function","modifiers":[],"name":"performUpkeep","nameLocation":"2271:13:0","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"performData","nameLocation":"2300:11:0","nodeType":"VariableDeclaration","scope":17,"src":"2285:26:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13,"name":"bytes","nodeType":"ElementaryTypeName","src":"2285:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2284:28:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"2321:0:0"},"scope":18,"src":"2262:60:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":19,"src":"110:2214:0","usedErrors":[],"usedEvents":[]}],"src":"32:2293:0"},"id":0},"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","exportedSymbols":{"VRFConsumerBaseV2":[76]},"id":77,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":20,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:1"},{"abstract":true,"baseContracts":[],"canonicalName":"VRFConsumerBaseV2","contractDependencies":[],"contractKind":"contract","documentation":{"id":21,"nodeType":"StructuredDocumentation","src":"57:5275:1","text":"****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness. It ensures 2 things:\n @dev 1. The fulfillment came from the VRFCoordinator\n @dev 2. The consumer contract implements fulfillRandomWords.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBase, and can\n @dev initialize VRFConsumerBase's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumer {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n @dev       VRFConsumerBase(_vrfCoordinator) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash). Create subscription, fund it\n @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n @dev subscription management functions).\n @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n @dev callbackGasLimit, numWords),\n @dev see (VRFCoordinatorInterface for a description of the arguments).\n @dev Once the VRFCoordinator has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomWords method.\n @dev The randomness argument to fulfillRandomWords is a set of random words\n @dev generated from your requestId and the blockHash of the request.\n @dev If your contract could have concurrent requests open, you can use the\n @dev requestId returned from requestRandomWords to track which response is associated\n @dev with which randomness request.\n @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ.\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request. It is for this reason that\n @dev that you can signal to an oracle you'd like them to wait longer before\n @dev responding to the request (however this is not enforced in the contract\n @dev and so remains effective only in the case of unmodified oracle software)."},"fullyImplemented":false,"id":76,"linearizedBaseContracts":[76],"name":"VRFConsumerBaseV2","nameLocation":"5351:17:1","nodeType":"ContractDefinition","nodes":[{"errorSelector":"1cf993f4","id":27,"name":"OnlyCoordinatorCanFulfill","nameLocation":"5379:25:1","nodeType":"ErrorDefinition","parameters":{"id":26,"nodeType":"ParameterList","parameters":[{"constant":false,"id":23,"mutability":"mutable","name":"have","nameLocation":"5413:4:1","nodeType":"VariableDeclaration","scope":27,"src":"5405:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":22,"name":"address","nodeType":"ElementaryTypeName","src":"5405:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":25,"mutability":"mutable","name":"want","nameLocation":"5427:4:1","nodeType":"VariableDeclaration","scope":27,"src":"5419:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":24,"name":"address","nodeType":"ElementaryTypeName","src":"5419:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5404:28:1"},"src":"5373:60:1"},{"constant":false,"id":29,"mutability":"immutable","name":"vrfCoordinator","nameLocation":"5546:14:1","nodeType":"VariableDeclaration","scope":76,"src":"5520:40:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28,"name":"address","nodeType":"ElementaryTypeName","src":"5520:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":39,"nodeType":"Block","src":"5677:43:1","statements":[{"expression":{"id":37,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":35,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"5683:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":36,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"5700:15:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5683:32:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":38,"nodeType":"ExpressionStatement","src":"5683:32:1"}]},"documentation":{"id":30,"nodeType":"StructuredDocumentation","src":"5565:72:1","text":" @param _vrfCoordinator address of VRFCoordinator contract"},"id":40,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"5660:15:1","nodeType":"VariableDeclaration","scope":40,"src":"5652:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"5652:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5651:25:1"},"returnParameters":{"id":34,"nodeType":"ParameterList","parameters":[],"src":"5677:0:1"},"scope":76,"src":"5640:80:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"5724:686:1","text":" @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomWords the VRF output expanded to the requested number of words"},"id":49,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"6514:18:1","nodeType":"FunctionDefinition","parameters":{"id":47,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"requestId","nameLocation":"6541:9:1","nodeType":"VariableDeclaration","scope":49,"src":"6533:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42,"name":"uint256","nodeType":"ElementaryTypeName","src":"6533:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":46,"mutability":"mutable","name":"randomWords","nameLocation":"6569:11:1","nodeType":"VariableDeclaration","scope":49,"src":"6552:28:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":44,"name":"uint256","nodeType":"ElementaryTypeName","src":"6552:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":45,"nodeType":"ArrayTypeName","src":"6552:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6532:49:1"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[],"src":"6598:0:1"},"scope":76,"src":"6505:94:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":74,"nodeType":"Block","src":"6883:167:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":60,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":57,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6893:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6897:6:1","memberName":"sender","nodeType":"MemberAccess","src":"6893:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":59,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"6907:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6893:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":68,"nodeType":"IfStatement","src":"6889:109:1","trueBody":{"id":67,"nodeType":"Block","src":"6923:75:1","statements":[{"errorCall":{"arguments":[{"expression":{"id":62,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6964:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":63,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6968:6:1","memberName":"sender","nodeType":"MemberAccess","src":"6964:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":64,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"6976:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":61,"name":"OnlyCoordinatorCanFulfill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"6938:25:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$","typeString":"function (address,address) pure returns (error)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6938:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":66,"nodeType":"RevertStatement","src":"6931:60:1"}]}},{"expression":{"arguments":[{"id":70,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"7022:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":71,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"7033:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":69,"name":"fulfillRandomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"7003:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7003:42:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":73,"nodeType":"ExpressionStatement","src":"7003:42:1"}]},"functionSelector":"1fe543e3","id":75,"implemented":true,"kind":"function","modifiers":[],"name":"rawFulfillRandomWords","nameLocation":"6803:21:1","nodeType":"FunctionDefinition","parameters":{"id":55,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51,"mutability":"mutable","name":"requestId","nameLocation":"6833:9:1","nodeType":"VariableDeclaration","scope":75,"src":"6825:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":50,"name":"uint256","nodeType":"ElementaryTypeName","src":"6825:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":54,"mutability":"mutable","name":"randomWords","nameLocation":"6861:11:1","nodeType":"VariableDeclaration","scope":75,"src":"6844:28:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":52,"name":"uint256","nodeType":"ElementaryTypeName","src":"6844:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":53,"nodeType":"ArrayTypeName","src":"6844:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6824:49:1"},"returnParameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"6883:0:1"},"scope":76,"src":"6794:256:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":77,"src":"5333:1719:1","usedErrors":[27],"usedEvents":[]}],"src":"32:7021:1"},"id":1},"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol","exportedSymbols":{"VRFCoordinatorV2Interface":[172]},"id":173,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":78,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"VRFCoordinatorV2Interface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":172,"linearizedBaseContracts":[172],"name":"VRFCoordinatorV2Interface","nameLocation":"120:25:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":79,"nodeType":"StructuredDocumentation","src":"150:267:2","text":" @notice Get configuration relevant for making requests\n @return minimumRequestConfirmations global min for request confirmations\n @return maxGasLimit global max for request gas limit\n @return s_provingKeyHashes list of registered key hashes"},"functionSelector":"00012291","id":89,"implemented":false,"kind":"function","modifiers":[],"name":"getRequestConfig","nameLocation":"429:16:2","nodeType":"FunctionDefinition","parameters":{"id":80,"nodeType":"ParameterList","parameters":[],"src":"445:2:2"},"returnParameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":89,"src":"471:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":81,"name":"uint16","nodeType":"ElementaryTypeName","src":"471:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":84,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":89,"src":"479:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":83,"name":"uint32","nodeType":"ElementaryTypeName","src":"479:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":87,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":89,"src":"487:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":85,"name":"bytes32","nodeType":"ElementaryTypeName","src":"487:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":86,"nodeType":"ArrayTypeName","src":"487:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"470:34:2"},"scope":172,"src":"420:85:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"509:1511:2","text":" @notice Request a set of random words.\n @param keyHash - Corresponds to a particular oracle job which uses\n that key for generating the VRF proof. Different keyHash's have different gas price\n ceilings, so you can select a specific one to bound your maximum per request cost.\n @param subId  - The ID of the VRF subscription. Must be funded\n with the minimum subscription balance required for the selected keyHash.\n @param minimumRequestConfirmations - How many blocks you'd like the\n oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n for why you may want to request more. The acceptable range is\n [minimumRequestBlockConfirmations, 200].\n @param callbackGasLimit - How much gas you'd like to receive in your\n fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n may be slightly less than this amount because of gas used calling the function\n (argument decoding etc.), so you may need to request slightly more than you expect\n to have inside fulfillRandomWords. The acceptable range is\n [0, maxGasLimit]\n @param numWords - The number of uint256 random values you'd like to receive\n in your fulfillRandomWords callback. Note these numbers are expanded in a\n secure way by the VRFCoordinator from a single random value supplied by the oracle.\n @return requestId - A unique identifier of the request. Can be used to match\n a request to a response in fulfillRandomWords."},"functionSelector":"5d3b1d30","id":105,"implemented":false,"kind":"function","modifiers":[],"name":"requestRandomWords","nameLocation":"2032:18:2","nodeType":"FunctionDefinition","parameters":{"id":101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92,"mutability":"mutable","name":"keyHash","nameLocation":"2064:7:2","nodeType":"VariableDeclaration","scope":105,"src":"2056:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":91,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2056:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":94,"mutability":"mutable","name":"subId","nameLocation":"2084:5:2","nodeType":"VariableDeclaration","scope":105,"src":"2077:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":93,"name":"uint64","nodeType":"ElementaryTypeName","src":"2077:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":96,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"2102:27:2","nodeType":"VariableDeclaration","scope":105,"src":"2095:34:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":95,"name":"uint16","nodeType":"ElementaryTypeName","src":"2095:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":98,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"2142:16:2","nodeType":"VariableDeclaration","scope":105,"src":"2135:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":97,"name":"uint32","nodeType":"ElementaryTypeName","src":"2135:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":100,"mutability":"mutable","name":"numWords","nameLocation":"2171:8:2","nodeType":"VariableDeclaration","scope":105,"src":"2164:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":99,"name":"uint32","nodeType":"ElementaryTypeName","src":"2164:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2050:133:2"},"returnParameters":{"id":104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103,"mutability":"mutable","name":"requestId","nameLocation":"2210:9:2","nodeType":"VariableDeclaration","scope":105,"src":"2202:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102,"name":"uint256","nodeType":"ElementaryTypeName","src":"2202:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2201:19:2"},"scope":172,"src":"2023:198:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2225:384:2","text":" @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));"},"functionSelector":"a21a23e4","id":111,"implemented":false,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"2621:18:2","nodeType":"FunctionDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[],"src":"2639:2:2"},"returnParameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"mutability":"mutable","name":"subId","nameLocation":"2667:5:2","nodeType":"VariableDeclaration","scope":111,"src":"2660:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":108,"name":"uint64","nodeType":"ElementaryTypeName","src":"2660:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2659:14:2"},"scope":172,"src":"2612:62:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":112,"nodeType":"StructuredDocumentation","src":"2678:381:2","text":" @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return reqCount - number of requests for this subscription, determines fee tier.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."},"functionSelector":"a47c7696","id":126,"implemented":false,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"3071:15:2","nodeType":"FunctionDefinition","parameters":{"id":115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":114,"mutability":"mutable","name":"subId","nameLocation":"3099:5:2","nodeType":"VariableDeclaration","scope":126,"src":"3092:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":113,"name":"uint64","nodeType":"ElementaryTypeName","src":"3092:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3086:22:2"},"returnParameters":{"id":125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"balance","nameLocation":"3139:7:2","nodeType":"VariableDeclaration","scope":126,"src":"3132:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":116,"name":"uint96","nodeType":"ElementaryTypeName","src":"3132:6:2","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":119,"mutability":"mutable","name":"reqCount","nameLocation":"3155:8:2","nodeType":"VariableDeclaration","scope":126,"src":"3148:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":118,"name":"uint64","nodeType":"ElementaryTypeName","src":"3148:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":121,"mutability":"mutable","name":"owner","nameLocation":"3173:5:2","nodeType":"VariableDeclaration","scope":126,"src":"3165:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":120,"name":"address","nodeType":"ElementaryTypeName","src":"3165:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":124,"mutability":"mutable","name":"consumers","nameLocation":"3197:9:2","nodeType":"VariableDeclaration","scope":126,"src":"3180:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":122,"name":"address","nodeType":"ElementaryTypeName","src":"3180:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":123,"nodeType":"ArrayTypeName","src":"3180:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3131:76:2"},"scope":172,"src":"3062:146:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"3212:164:2","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"},"functionSelector":"04c357cb","id":134,"implemented":false,"kind":"function","modifiers":[],"name":"requestSubscriptionOwnerTransfer","nameLocation":"3388:32:2","nodeType":"FunctionDefinition","parameters":{"id":132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"subId","nameLocation":"3428:5:2","nodeType":"VariableDeclaration","scope":134,"src":"3421:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":128,"name":"uint64","nodeType":"ElementaryTypeName","src":"3421:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":131,"mutability":"mutable","name":"newOwner","nameLocation":"3443:8:2","nodeType":"VariableDeclaration","scope":134,"src":"3435:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":130,"name":"address","nodeType":"ElementaryTypeName","src":"3435:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3420:32:2"},"returnParameters":{"id":133,"nodeType":"ParameterList","parameters":[],"src":"3461:0:2"},"scope":172,"src":"3379:83:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":135,"nodeType":"StructuredDocumentation","src":"3466:212:2","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."},"functionSelector":"82359740","id":140,"implemented":false,"kind":"function","modifiers":[],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"3690:31:2","nodeType":"FunctionDefinition","parameters":{"id":138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":137,"mutability":"mutable","name":"subId","nameLocation":"3729:5:2","nodeType":"VariableDeclaration","scope":140,"src":"3722:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":136,"name":"uint64","nodeType":"ElementaryTypeName","src":"3722:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3721:14:2"},"returnParameters":{"id":139,"nodeType":"ParameterList","parameters":[],"src":"3744:0:2"},"scope":172,"src":"3681:64:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":141,"nodeType":"StructuredDocumentation","src":"3749:170:2","text":" @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"},"functionSelector":"7341c10c","id":148,"implemented":false,"kind":"function","modifiers":[],"name":"addConsumer","nameLocation":"3931:11:2","nodeType":"FunctionDefinition","parameters":{"id":146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":143,"mutability":"mutable","name":"subId","nameLocation":"3950:5:2","nodeType":"VariableDeclaration","scope":148,"src":"3943:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":142,"name":"uint64","nodeType":"ElementaryTypeName","src":"3943:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":145,"mutability":"mutable","name":"consumer","nameLocation":"3965:8:2","nodeType":"VariableDeclaration","scope":148,"src":"3957:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":144,"name":"address","nodeType":"ElementaryTypeName","src":"3957:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3942:32:2"},"returnParameters":{"id":147,"nodeType":"ParameterList","parameters":[],"src":"3983:0:2"},"scope":172,"src":"3922:62:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":149,"nodeType":"StructuredDocumentation","src":"3988:172:2","text":" @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"},"functionSelector":"9f87fad7","id":156,"implemented":false,"kind":"function","modifiers":[],"name":"removeConsumer","nameLocation":"4172:14:2","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":151,"mutability":"mutable","name":"subId","nameLocation":"4194:5:2","nodeType":"VariableDeclaration","scope":156,"src":"4187:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":150,"name":"uint64","nodeType":"ElementaryTypeName","src":"4187:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":153,"mutability":"mutable","name":"consumer","nameLocation":"4209:8:2","nodeType":"VariableDeclaration","scope":156,"src":"4201:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"4201:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4186:32:2"},"returnParameters":{"id":155,"nodeType":"ParameterList","parameters":[],"src":"4227:0:2"},"scope":172,"src":"4163:65:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":157,"nodeType":"StructuredDocumentation","src":"4232:140:2","text":" @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"},"functionSelector":"d7ae1d30","id":164,"implemented":false,"kind":"function","modifiers":[],"name":"cancelSubscription","nameLocation":"4384:18:2","nodeType":"FunctionDefinition","parameters":{"id":162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":159,"mutability":"mutable","name":"subId","nameLocation":"4410:5:2","nodeType":"VariableDeclaration","scope":164,"src":"4403:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":158,"name":"uint64","nodeType":"ElementaryTypeName","src":"4403:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":161,"mutability":"mutable","name":"to","nameLocation":"4425:2:2","nodeType":"VariableDeclaration","scope":164,"src":"4417:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"4417:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4402:26:2"},"returnParameters":{"id":163,"nodeType":"ParameterList","parameters":[],"src":"4437:0:2"},"scope":172,"src":"4375:63:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e82ad7d4","id":171,"implemented":false,"kind":"function","modifiers":[],"name":"pendingRequestExists","nameLocation":"4743:20:2","nodeType":"FunctionDefinition","parameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"subId","nameLocation":"4771:5:2","nodeType":"VariableDeclaration","scope":171,"src":"4764:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":165,"name":"uint64","nodeType":"ElementaryTypeName","src":"4764:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4763:14:2"},"returnParameters":{"id":170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":171,"src":"4801:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":168,"name":"bool","nodeType":"ElementaryTypeName","src":"4801:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4800:6:2"},"scope":172,"src":"4734:73:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":173,"src":"110:4699:2","usedErrors":[],"usedEvents":[]}],"src":"32:4778:2"},"id":2},"contracts/Raffel.sol":{"ast":{"absolutePath":"contracts/Raffel.sol","exportedSymbols":{"AutomationCompatibleInterface":[18],"Raffel":[575],"Raffel_NotEnoughEthSent":[179],"Raffel_NotOpen":[183],"Raffel_TransferFailed":[181],"Raffel_UpkeepNotNeeded":[191],"VRFConsumerBaseV2":[76],"VRFCoordinatorV2Interface":[172]},"id":576,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":174,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:3"},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","file":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","id":175,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":576,"sourceUnit":77,"src":"58:65:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol","file":"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol","id":176,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":576,"sourceUnit":173,"src":"124:84:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol","file":"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol","id":177,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":576,"sourceUnit":19,"src":"209:96:3","symbolAliases":[],"unitAlias":""},{"errorSelector":"04de2f86","id":179,"name":"Raffel_NotEnoughEthSent","nameLocation":"313:23:3","nodeType":"ErrorDefinition","parameters":{"id":178,"nodeType":"ParameterList","parameters":[],"src":"336:2:3"},"src":"307:32:3"},{"errorSelector":"6b56c6a3","id":181,"name":"Raffel_TransferFailed","nameLocation":"346:21:3","nodeType":"ErrorDefinition","parameters":{"id":180,"nodeType":"ParameterList","parameters":[],"src":"367:2:3"},"src":"340:30:3"},{"errorSelector":"38c2c67e","id":183,"name":"Raffel_NotOpen","nameLocation":"377:14:3","nodeType":"ErrorDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[],"src":"391:2:3"},"src":"371:23:3"},{"errorSelector":"eee093da","id":191,"name":"Raffel_UpkeepNotNeeded","nameLocation":"401:22:3","nodeType":"ErrorDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"mutability":"mutable","name":"currentBalance","nameLocation":"437:14:3","nodeType":"VariableDeclaration","scope":191,"src":"429:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":184,"name":"uint256","nodeType":"ElementaryTypeName","src":"429:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"numPlayers","nameLocation":"465:10:3","nodeType":"VariableDeclaration","scope":191,"src":"457:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"457:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":189,"mutability":"mutable","name":"raffelState","nameLocation":"489:11:3","nodeType":"VariableDeclaration","scope":191,"src":"481:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":188,"name":"uint256","nodeType":"ElementaryTypeName","src":"481:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"423:79:3"},"src":"395:108:3"},{"abstract":false,"baseContracts":[{"baseName":{"id":192,"name":"VRFConsumerBaseV2","nameLocations":["524:17:3"],"nodeType":"IdentifierPath","referencedDeclaration":76,"src":"524:17:3"},"id":193,"nodeType":"InheritanceSpecifier","src":"524:17:3"}],"canonicalName":"Raffel","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":575,"linearizedBaseContracts":[575,76],"name":"Raffel","nameLocation":"514:6:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":195,"mutability":"immutable","name":"i_entryFee","nameLocation":"592:10:3","nodeType":"VariableDeclaration","scope":575,"src":"566:36:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":194,"name":"uint256","nodeType":"ElementaryTypeName","src":"566:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":198,"mutability":"mutable","name":"s_players","nameLocation":"634:9:3","nodeType":"VariableDeclaration","scope":575,"src":"608:35:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[]"},"typeName":{"baseType":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"608:15:3","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":197,"nodeType":"ArrayTypeName","src":"608:17:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}},"visibility":"private"},{"constant":false,"id":201,"mutability":"immutable","name":"i_vrfCoordinator","nameLocation":"693:16:3","nodeType":"VariableDeclaration","scope":575,"src":"649:60:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$172","typeString":"contract VRFCoordinatorV2Interface"},"typeName":{"id":200,"nodeType":"UserDefinedTypeName","pathNode":{"id":199,"name":"VRFCoordinatorV2Interface","nameLocations":["649:25:3"],"nodeType":"IdentifierPath","referencedDeclaration":172,"src":"649:25:3"},"referencedDeclaration":172,"src":"649:25:3","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$172","typeString":"contract VRFCoordinatorV2Interface"}},"visibility":"private"},{"constant":false,"id":203,"mutability":"immutable","name":"i_gasLane","nameLocation":"741:9:3","nodeType":"VariableDeclaration","scope":575,"src":"715:35:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":202,"name":"bytes32","nodeType":"ElementaryTypeName","src":"715:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":205,"mutability":"immutable","name":"i_subscriptionId","nameLocation":"781:16:3","nodeType":"VariableDeclaration","scope":575,"src":"756:41:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":204,"name":"uint64","nodeType":"ElementaryTypeName","src":"756:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"private"},{"constant":true,"id":208,"mutability":"constant","name":"requestConfirmations","nameLocation":"827:20:3","nodeType":"VariableDeclaration","scope":575,"src":"803:48:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":206,"name":"uint16","nodeType":"ElementaryTypeName","src":"803:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"33","id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"850:1:3","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"private"},{"constant":false,"id":211,"mutability":"immutable","name":"i_callbackGasLimit","nameLocation":"882:18:3","nodeType":"VariableDeclaration","scope":575,"src":"857:52:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":209,"name":"uint32","nodeType":"ElementaryTypeName","src":"857:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"313030303030","id":210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"903:6:3","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100000"},"visibility":"private"},{"constant":true,"id":214,"mutability":"constant","name":"numWords","nameLocation":"939:8:3","nodeType":"VariableDeclaration","scope":575,"src":"915:36:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":212,"name":"uint32","nodeType":"ElementaryTypeName","src":"915:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"31","id":213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":false,"id":216,"mutability":"mutable","name":"s_recentWinner","nameLocation":"995:14:3","nodeType":"VariableDeclaration","scope":575,"src":"979:30:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":215,"name":"address","nodeType":"ElementaryTypeName","src":"979:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":219,"mutability":"mutable","name":"s_raffelState","nameLocation":"1035:13:3","nodeType":"VariableDeclaration","scope":575,"src":"1015:33:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RaffelState_$226","typeString":"enum Raffel.RaffelState"},"typeName":{"id":218,"nodeType":"UserDefinedTypeName","pathNode":{"id":217,"name":"RaffelState","nameLocations":["1015:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":226,"src":"1015:11:3"},"referencedDeclaration":226,"src":"1015:11:3","typeDescriptions":{"typeIdentifier":"t_enum$_RaffelState_$226","typeString":"enum Raffel.RaffelState"}},"visibility":"private"},{"constant":false,"id":221,"mutability":"mutable","name":"s_lastTimeStamp","nameLocation":"1067:15:3","nodeType":"VariableDeclaration","scope":575,"src":"1054:28:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":220,"name":"uint","nodeType":"ElementaryTypeName","src":"1054:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":223,"mutability":"immutable","name":"i_interval","nameLocation":"1111:10:3","nodeType":"VariableDeclaration","scope":575,"src":"1088:33:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint","nodeType":"ElementaryTypeName","src":"1088:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"canonicalName":"Raffel.RaffelState","id":226,"members":[{"id":224,"name":"OPEN","nameLocation":"1164:4:3","nodeType":"EnumValue","src":"1164:4:3"},{"id":225,"name":"CALCULATING","nameLocation":"1178:11:3","nodeType":"EnumValue","src":"1178:11:3"}],"name":"RaffelState","nameLocation":"1142:11:3","nodeType":"EnumDefinition","src":"1137:58:3"},{"anonymous":false,"eventSelector":"8ed6a7aff9a00785197dec230a172a32e2fdea5473a74f7d0477be4505554ef8","id":230,"name":"RaffelEntered","nameLocation":"1217:13:3","nodeType":"EventDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":228,"indexed":true,"mutability":"mutable","name":"player","nameLocation":"1247:6:3","nodeType":"VariableDeclaration","scope":230,"src":"1231:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":227,"name":"address","nodeType":"ElementaryTypeName","src":"1231:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1230:24:3"},"src":"1211:44:3"},{"anonymous":false,"eventSelector":"9cd72631871dff14bbc84976a39c2bca5d943f61f72884a8f331a889778f2c31","id":234,"name":"RequestedRaffelWinner","nameLocation":"1266:21:3","nodeType":"EventDefinition","parameters":{"id":233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":232,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"1301:9:3","nodeType":"VariableDeclaration","scope":234,"src":"1288:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":231,"name":"uint","nodeType":"ElementaryTypeName","src":"1288:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1287:24:3"},"src":"1260:52:3"},{"anonymous":false,"eventSelector":"7d5e0acef27db2fe13c94bbdb66d614a8840fb82c920a1b9aadb5d6acf3e7692","id":238,"name":"RaffelWinnerPicked","nameLocation":"1323:18:3","nodeType":"EventDefinition","parameters":{"id":237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":236,"indexed":true,"mutability":"mutable","name":"winner","nameLocation":"1358:6:3","nodeType":"VariableDeclaration","scope":238,"src":"1342:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":235,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1341:24:3"},"src":"1317:49:3"},{"body":{"id":292,"nodeType":"Block","src":"1617:352:3","statements":[{"expression":{"id":258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":256,"name":"i_entryFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"1627:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":257,"name":"entryFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"1640:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1627:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":259,"nodeType":"ExpressionStatement","src":"1627:21:3"},{"expression":{"id":264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":260,"name":"i_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"1658:16:3","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$172","typeString":"contract VRFCoordinatorV2Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":262,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"1703:14:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":261,"name":"VRFCoordinatorV2Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"1677:25:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFCoordinatorV2Interface_$172_$","typeString":"type(contract VRFCoordinatorV2Interface)"}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1677:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$172","typeString":"contract VRFCoordinatorV2Interface"}},"src":"1658:60:3","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$172","typeString":"contract VRFCoordinatorV2Interface"}},"id":265,"nodeType":"ExpressionStatement","src":"1658:60:3"},{"expression":{"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":266,"name":"i_gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"1728:9:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":267,"name":"gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"1740:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1728:19:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":269,"nodeType":"ExpressionStatement","src":"1728:19:3"},{"expression":{"id":272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":270,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"1757:16:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":271,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"1776:14:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"1757:33:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":273,"nodeType":"ExpressionStatement","src":"1757:33:3"},{"expression":{"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":274,"name":"i_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"1800:18:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":275,"name":"callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"1821:16:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"1800:37:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":277,"nodeType":"ExpressionStatement","src":"1800:37:3"},{"expression":{"id":281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":278,"name":"s_raffelState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"1847:13:3","typeDescriptions":{"typeIdentifier":"t_enum$_RaffelState_$226","typeString":"enum Raffel.RaffelState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":279,"name":"RaffelState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"1863:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffelState_$226_$","typeString":"type(enum Raffel.RaffelState)"}},"id":280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1875:4:3","memberName":"OPEN","nodeType":"MemberAccess","referencedDeclaration":224,"src":"1863:16:3","typeDescriptions":{"typeIdentifier":"t_enum$_RaffelState_$226","typeString":"enum Raffel.RaffelState"}},"src":"1847:32:3","typeDescriptions":{"typeIdentifier":"t_enum$_RaffelState_$226","typeString":"enum Raffel.RaffelState"}},"id":282,"nodeType":"ExpressionStatement","src":"1847:32:3"},{"expression":{"id":286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":283,"name":"s_lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"1889:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":284,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1907:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1913:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"1907:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1889:33:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":287,"nodeType":"ExpressionStatement","src":"1889:33:3"},{"expression":{"id":290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":288,"name":"i_interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"1932:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":289,"name":"interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":250,"src":"1945:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1932:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":291,"nodeType":"ExpressionStatement","src":"1932:21:3"}]},"id":293,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":253,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"1601:14:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":254,"kind":"baseConstructorSpecifier","modifierName":{"id":252,"name":"VRFConsumerBaseV2","nameLocations":["1583:17:3"],"nodeType":"IdentifierPath","referencedDeclaration":76,"src":"1583:17:3"},"nodeType":"ModifierInvocation","src":"1583:33:3"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"entryFee","nameLocation":"1401:8:3","nodeType":"VariableDeclaration","scope":293,"src":"1393:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":239,"name":"uint256","nodeType":"ElementaryTypeName","src":"1393:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":242,"mutability":"mutable","name":"vrfCoordinator","nameLocation":"1428:14:3","nodeType":"VariableDeclaration","scope":293,"src":"1420:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":241,"name":"address","nodeType":"ElementaryTypeName","src":"1420:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":244,"mutability":"mutable","name":"gasLane","nameLocation":"1460:7:3","nodeType":"VariableDeclaration","scope":293,"src":"1452:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":243,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1452:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":246,"mutability":"mutable","name":"subscriptionId","nameLocation":"1484:14:3","nodeType":"VariableDeclaration","scope":293,"src":"1477:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":245,"name":"uint64","nodeType":"ElementaryTypeName","src":"1477:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":248,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"1515:16:3","nodeType":"VariableDeclaration","scope":293,"src":"1508:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":247,"name":"uint32","nodeType":"ElementaryTypeName","src":"1508:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":250,"mutability":"mutable","name":"interval","nameLocation":"1546:8:3","nodeType":"VariableDeclaration","scope":293,"src":"1541:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":249,"name":"uint","nodeType":"ElementaryTypeName","src":"1541:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1383:181:3"},"returnParameters":{"id":255,"nodeType":"ParameterList","parameters":[],"src":"1617:0:3"},"scope":575,"src":"1372:597:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":330,"nodeType":"Block","src":"2011:276:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":296,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2024:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2028:5:3","memberName":"value","nodeType":"MemberAccess","src":"2024:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":298,"name":"i_entryFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"2036:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2024:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":304,"nodeType":"IfStatement","src":"2021:75:3","trueBody":{"id":303,"nodeType":"Block","src":"2048:48:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":300,"name":"Raffel_NotOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"2069:14:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2069:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":302,"nodeType":"RevertStatement","src":"2062:23:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_RaffelState_$226","typeString":"enum Raffel.RaffelState"},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":305,"name":"s_raffelState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"2108:13:3","typeDescriptions":{"typeIdentifier":"t_enum$_RaffelState_$226","typeString":"enum Raffel.RaffelState"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":306,"name":"RaffelState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"2125:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffelState_$226_$","typeString":"type(enum Raffel.RaffelState)"}},"id":307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2137:4:3","memberName":"OPEN","nodeType":"MemberAccess","referencedDeclaration":224,"src":"2125:16:3","typeDescriptions":{"typeIdentifier":"t_enum$_RaffelState_$226","typeString":"enum Raffel.RaffelState"}},"src":"2108:33:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":314,"nodeType":"IfStatement","src":"2105:91:3","trueBody":{"id":313,"nodeType":"Block","src":"2143:53:3","statements":[{"expression":{"arguments":[{"hexValue":"52616666656c206973206e6f74206f70656e","id":310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2164:20:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_1c0f13643c7a49cb913e5f88b455a6e8d1710e21557a0739c837b716380e00f8","typeString":"literal_string \"Raffel is not open\""},"value":"Raffel is not open"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1c0f13643c7a49cb913e5f88b455a6e8d1710e21557a0739c837b716380e00f8","typeString":"literal_string \"Raffel is not open\""}],"id":309,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"2157:6:3","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2157:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":312,"nodeType":"ExpressionStatement","src":"2157:28:3"}]}},{"expression":{"arguments":[{"arguments":[{"expression":{"id":320,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2228:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2232:6:3","memberName":"sender","nodeType":"MemberAccess","src":"2228:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2220:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":318,"name":"address","nodeType":"ElementaryTypeName","src":"2220:8:3","stateMutability":"payable","typeDescriptions":{}}},"id":322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2220:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"expression":{"id":315,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"2205:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2215:4:3","memberName":"push","nodeType":"MemberAccess","src":"2205:14:3","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_payable_$dyn_storage_ptr_$_t_address_payable_$returns$__$attached_to$_t_array$_t_address_payable_$dyn_storage_ptr_$","typeString":"function (address payable[] storage pointer,address payable)"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2205:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":324,"nodeType":"ExpressionStatement","src":"2205:35:3"},{"eventCall":{"arguments":[{"expression":{"id":326,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2269:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2273:6:3","memberName":"sender","nodeType":"MemberAccess","src":"2269:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":325,"name":"RaffelEntered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"2255:13:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2255:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":329,"nodeType":"EmitStatement","src":"2250:30:3"}]},"functionSelector":"0ff19fd7","id":331,"implemented":true,"kind":"function","modifiers":[],"name":"enterRaffel","nameLocation":"1983:11:3","nodeType":"FunctionDefinition","parameters":{"id":294,"nodeType":"ParameterList","parameters":[],"src":"1994:2:3"},"returnParameters":{"id":295,"nodeType":"ParameterList","parameters":[],"src":"2011:0:3"},"scope":575,"src":"1974:313:3","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":384,"nodeType":"Block","src":"2363:322:3","statements":[{"assignments":[337],"declarations":[{"constant":false,"id":337,"mutability":"mutable","name":"isOpen","nameLocation":"2378:6:3","nodeType":"VariableDeclaration","scope":384,"src":"2373:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":336,"name":"bool","nodeType":"ElementaryTypeName","src":"2373:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":343,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_enum$_RaffelState_$226","typeString":"enum Raffel.RaffelState"},"id":341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":338,"name":"RaffelState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"2388:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffelState_$226_$","typeString":"type(enum Raffel.RaffelState)"}},"id":339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2400:4:3","memberName":"OPEN","nodeType":"MemberAccess","referencedDeclaration":224,"src":"2388:16:3","typeDescriptions":{"typeIdentifier":"t_enum$_RaffelState_$226","typeString":"enum Raffel.RaffelState"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":340,"name":"s_raffelState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"2408:13:3","typeDescriptions":{"typeIdentifier":"t_enum$_RaffelState_$226","typeString":"enum Raffel.RaffelState"}},"src":"2388:33:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":342,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2387:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2373:49:3"},{"assignments":[345],"declarations":[{"constant":false,"id":345,"mutability":"mutable","name":"timePassed","nameLocation":"2437:10:3","nodeType":"VariableDeclaration","scope":384,"src":"2432:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":344,"name":"bool","nodeType":"ElementaryTypeName","src":"2432:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":353,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":346,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2451:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2457:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"2451:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":348,"name":"s_lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"2469:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2451:33:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":350,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2450:35:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":351,"name":"i_interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"2488:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2450:48:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2432:66:3"},{"assignments":[355],"declarations":[{"constant":false,"id":355,"mutability":"mutable","name":"hasPlayers","nameLocation":"2513:10:3","nodeType":"VariableDeclaration","scope":384,"src":"2508:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":354,"name":"bool","nodeType":"ElementaryTypeName","src":"2508:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":361,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":356,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"2527:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2537:6:3","memberName":"length","nodeType":"MemberAccess","src":"2527:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2546:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2527:20:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":360,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2526:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2508:40:3"},{"assignments":[363],"declarations":[{"constant":false,"id":363,"mutability":"mutable","name":"hasBalance","nameLocation":"2563:10:3","nodeType":"VariableDeclaration","scope":384,"src":"2558:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":362,"name":"bool","nodeType":"ElementaryTypeName","src":"2558:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":372,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":366,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2585:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_Raffel_$575","typeString":"contract Raffel"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Raffel_$575","typeString":"contract Raffel"}],"id":365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2577:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":364,"name":"address","nodeType":"ElementaryTypeName","src":"2577:7:3","typeDescriptions":{}}},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2577:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2591:7:3","memberName":"balance","nodeType":"MemberAccess","src":"2577:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2601:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2577:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":371,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2576:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2558:45:3"},{"expression":{"id":382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":373,"name":"upkeepNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"2613:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":374,"name":"isOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"2629:6:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":375,"name":"timePassed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"2639:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2629:20:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":377,"name":"hasPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":355,"src":"2653:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2629:34:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":379,"name":"hasBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"2667:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2629:48:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":381,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2628:50:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2613:65:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":383,"nodeType":"ExpressionStatement","src":"2613:65:3"}]},"id":385,"implemented":true,"kind":"function","modifiers":[],"name":"chaecUpkeepLogic","nameLocation":"2302:16:3","nodeType":"FunctionDefinition","parameters":{"id":332,"nodeType":"ParameterList","parameters":[],"src":"2318:2:3"},"returnParameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":334,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"2349:12:3","nodeType":"VariableDeclaration","scope":385,"src":"2344:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":333,"name":"bool","nodeType":"ElementaryTypeName","src":"2344:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2343:19:3"},"scope":575,"src":"2293:392:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":399,"nodeType":"Block","src":"2878:48:3","statements":[{"expression":{"id":397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":394,"name":"upkeepNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"2886:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":395,"name":"chaecUpkeepLogic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"2901:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2901:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2886:33:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":398,"nodeType":"ExpressionStatement","src":"2886:33:3"}]},"functionSelector":"6e04ff0d","id":400,"implemented":true,"kind":"function","modifiers":[],"name":"checkUpkeep","nameLocation":"2700:11:3","nodeType":"FunctionDefinition","parameters":{"id":388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":400,"src":"2721:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":386,"name":"bytes","nodeType":"ElementaryTypeName","src":"2721:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2711:46:3"},"returnParameters":{"id":393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"2828:12:3","nodeType":"VariableDeclaration","scope":400,"src":"2823:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":389,"name":"bool","nodeType":"ElementaryTypeName","src":"2823:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":400,"src":"2842:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":391,"name":"bytes","nodeType":"ElementaryTypeName","src":"2842:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2822:51:3"},"scope":575,"src":"2691:235:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":444,"nodeType":"Block","src":"2984:469:3","statements":[{"condition":{"id":407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3006:19:3","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":405,"name":"chaecUpkeepLogic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"3007:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3007:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":423,"nodeType":"IfStatement","src":"3003:142:3","trueBody":{"id":422,"nodeType":"Block","src":"3027:118:3","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":411,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3079:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_Raffel_$575","typeString":"contract Raffel"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Raffel_$575","typeString":"contract Raffel"}],"id":410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3071:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":409,"name":"address","nodeType":"ElementaryTypeName","src":"3071:7:3","typeDescriptions":{}}},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3071:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3085:7:3","memberName":"balance","nodeType":"MemberAccess","src":"3071:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":414,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"3094:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3104:6:3","memberName":"length","nodeType":"MemberAccess","src":"3094:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":418,"name":"s_raffelState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"3119:13:3","typeDescriptions":{"typeIdentifier":"t_enum$_RaffelState_$226","typeString":"enum Raffel.RaffelState"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RaffelState_$226","typeString":"enum Raffel.RaffelState"}],"id":417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3111:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":416,"name":"uint256","nodeType":"ElementaryTypeName","src":"3111:7:3","typeDescriptions":{}}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3111:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":408,"name":"Raffel_UpkeepNotNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"3048:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256,uint256) pure returns (error)"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3048:86:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":421,"nodeType":"RevertStatement","src":"3041:93:3"}]}},{"expression":{"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":424,"name":"s_raffelState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"3154:13:3","typeDescriptions":{"typeIdentifier":"t_enum$_RaffelState_$226","typeString":"enum Raffel.RaffelState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":425,"name":"RaffelState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"3170:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffelState_$226_$","typeString":"type(enum Raffel.RaffelState)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3182:11:3","memberName":"CALCULATING","nodeType":"MemberAccess","referencedDeclaration":225,"src":"3170:23:3","typeDescriptions":{"typeIdentifier":"t_enum$_RaffelState_$226","typeString":"enum Raffel.RaffelState"}},"src":"3154:39:3","typeDescriptions":{"typeIdentifier":"t_enum$_RaffelState_$226","typeString":"enum Raffel.RaffelState"}},"id":428,"nodeType":"ExpressionStatement","src":"3154:39:3"},{"assignments":[430],"declarations":[{"constant":false,"id":430,"mutability":"mutable","name":"requestId","nameLocation":"3207:9:3","nodeType":"VariableDeclaration","scope":444,"src":"3202:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":429,"name":"uint","nodeType":"ElementaryTypeName","src":"3202:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":439,"initialValue":{"arguments":[{"id":433,"name":"i_gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"3266:9:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":434,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"3289:16:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":435,"name":"requestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"3319:20:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":436,"name":"i_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"3353:18:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":437,"name":"numWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"3385:8:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":431,"name":"i_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"3217:16:3","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$172","typeString":"contract VRFCoordinatorV2Interface"}},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3234:18:3","memberName":"requestRandomWords","nodeType":"MemberAccess","referencedDeclaration":105,"src":"3217:35:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$returns$_t_uint256_$","typeString":"function (bytes32,uint64,uint16,uint32,uint32) external returns (uint256)"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3217:186:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3202:201:3"},{"eventCall":{"arguments":[{"id":441,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"3436:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":440,"name":"RequestedRaffelWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"3414:21:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3414:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":443,"nodeType":"EmitStatement","src":"3409:37:3"}]},"functionSelector":"6c7c8f17","id":445,"implemented":true,"kind":"function","modifiers":[],"name":"performUpKeep","nameLocation":"2941:13:3","nodeType":"FunctionDefinition","parameters":{"id":403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":445,"src":"2955:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":401,"name":"bytes","nodeType":"ElementaryTypeName","src":"2955:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2954:16:3"},"returnParameters":{"id":404,"nodeType":"ParameterList","parameters":[],"src":"2984:0:3"},"scope":575,"src":"2932:521:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[49],"body":{"id":520,"nodeType":"Block","src":"3553:658:3","statements":[{"assignments":[455],"declarations":[{"constant":false,"id":455,"mutability":"mutable","name":"indexodWinner","nameLocation":"3577:13:3","nodeType":"VariableDeclaration","scope":520,"src":"3572:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":454,"name":"uint","nodeType":"ElementaryTypeName","src":"3572:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":462,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":456,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"3593:11:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":458,"indexExpression":{"hexValue":"30","id":457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3605:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3593:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"expression":{"id":459,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"3610:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3620:6:3","memberName":"length","nodeType":"MemberAccess","src":"3610:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3593:33:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3572:54:3"},{"assignments":[464],"declarations":[{"constant":false,"id":464,"mutability":"mutable","name":"recentWinner","nameLocation":"3652:12:3","nodeType":"VariableDeclaration","scope":520,"src":"3636:28:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":463,"name":"address","nodeType":"ElementaryTypeName","src":"3636:15:3","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"id":468,"initialValue":{"baseExpression":{"id":465,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"3667:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":467,"indexExpression":{"id":466,"name":"indexodWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"3677:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3667:24:3","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"VariableDeclarationStatement","src":"3636:55:3"},{"expression":{"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":469,"name":"s_recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"3701:14:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":470,"name":"recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"3716:12:3","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"3701:27:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":472,"nodeType":"ExpressionStatement","src":"3701:27:3"},{"expression":{"id":476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":473,"name":"s_raffelState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"3738:13:3","typeDescriptions":{"typeIdentifier":"t_enum$_RaffelState_$226","typeString":"enum Raffel.RaffelState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":474,"name":"RaffelState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"3754:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffelState_$226_$","typeString":"type(enum Raffel.RaffelState)"}},"id":475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3766:4:3","memberName":"OPEN","nodeType":"MemberAccess","referencedDeclaration":224,"src":"3754:16:3","typeDescriptions":{"typeIdentifier":"t_enum$_RaffelState_$226","typeString":"enum Raffel.RaffelState"}},"src":"3738:32:3","typeDescriptions":{"typeIdentifier":"t_enum$_RaffelState_$226","typeString":"enum Raffel.RaffelState"}},"id":477,"nodeType":"ExpressionStatement","src":"3738:32:3"},{"expression":{"id":484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":478,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"3780:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3814:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3792:21:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_payable_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address payable[] memory)"},"typeName":{"baseType":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"3796:15:3","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":480,"nodeType":"ArrayTypeName","src":"3796:17:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}}},"id":483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3792:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_memory_ptr","typeString":"address payable[] memory"}},"src":"3780:36:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":485,"nodeType":"ExpressionStatement","src":"3780:36:3"},{"expression":{"id":489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":486,"name":"s_lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"3873:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":487,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3891:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3897:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"3891:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3873:33:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":490,"nodeType":"ExpressionStatement","src":"3873:33:3"},{"assignments":[492,null],"declarations":[{"constant":false,"id":492,"mutability":"mutable","name":"success","nameLocation":"3970:7:3","nodeType":"VariableDeclaration","scope":520,"src":"3965:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":491,"name":"bool","nodeType":"ElementaryTypeName","src":"3965:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":503,"initialValue":{"arguments":[{"hexValue":"","id":501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4031:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":493,"name":"recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"3983:12:3","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3996:4:3","memberName":"call","nodeType":"MemberAccess","src":"3983:17:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"arguments":[{"id":497,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4016:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_Raffel_$575","typeString":"contract Raffel"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Raffel_$575","typeString":"contract Raffel"}],"id":496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4008:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":495,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:3","typeDescriptions":{}}},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4008:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4022:7:3","memberName":"balance","nodeType":"MemberAccess","src":"4008:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3983:47:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3983:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3964:70:3"},{"expression":{"arguments":[{"id":505,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"4052:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206661696c6564","id":506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4061:17:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":504,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4044:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4044:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":508,"nodeType":"ExpressionStatement","src":"4044:35:3"},{"condition":{"id":510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4092:8:3","subExpression":{"id":509,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"4093:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":515,"nodeType":"IfStatement","src":"4089:68:3","trueBody":{"id":514,"nodeType":"Block","src":"4102:55:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":511,"name":"Raffel_TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"4123:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4123:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":513,"nodeType":"RevertStatement","src":"4116:30:3"}]}},{"eventCall":{"arguments":[{"id":517,"name":"recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"4191:12:3","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":516,"name":"RaffelWinnerPicked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"4172:18:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4172:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":519,"nodeType":"EmitStatement","src":"4167:37:3"}]},"id":521,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"3468:18:3","nodeType":"FunctionDefinition","overrides":{"id":452,"nodeType":"OverrideSpecifier","overrides":[],"src":"3544:8:3"},"parameters":{"id":451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":447,"mutability":"mutable","name":"requestId","nameLocation":"3495:9:3","nodeType":"VariableDeclaration","scope":521,"src":"3487:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":446,"name":"uint256","nodeType":"ElementaryTypeName","src":"3487:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":450,"mutability":"mutable","name":"randomWords","nameLocation":"3522:11:3","nodeType":"VariableDeclaration","scope":521,"src":"3505:28:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":448,"name":"uint256","nodeType":"ElementaryTypeName","src":"3505:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":449,"nodeType":"ArrayTypeName","src":"3505:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3486:48:3"},"returnParameters":{"id":453,"nodeType":"ParameterList","parameters":[],"src":"3553:0:3"},"scope":575,"src":"3459:752:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":528,"nodeType":"Block","src":"4272:34:3","statements":[{"expression":{"id":526,"name":"i_entryFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"4289:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":525,"id":527,"nodeType":"Return","src":"4282:17:3"}]},"functionSelector":"e586a4f0","id":529,"implemented":true,"kind":"function","modifiers":[],"name":"getEntryFee","nameLocation":"4226:11:3","nodeType":"FunctionDefinition","parameters":{"id":522,"nodeType":"ParameterList","parameters":[],"src":"4237:2:3"},"returnParameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":529,"src":"4263:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":523,"name":"uint256","nodeType":"ElementaryTypeName","src":"4263:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4262:9:3"},"scope":575,"src":"4217:89:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":540,"nodeType":"Block","src":"4386:40:3","statements":[{"expression":{"baseExpression":{"id":536,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"4403:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":538,"indexExpression":{"id":537,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"4413:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4403:16:3","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"functionReturnParameters":535,"id":539,"nodeType":"Return","src":"4396:23:3"}]},"functionSelector":"e55ae4e8","id":541,"implemented":true,"kind":"function","modifiers":[],"name":"getPlayer","nameLocation":"4321:9:3","nodeType":"FunctionDefinition","parameters":{"id":532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":531,"mutability":"mutable","name":"index","nameLocation":"4339:5:3","nodeType":"VariableDeclaration","scope":541,"src":"4331:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":530,"name":"uint256","nodeType":"ElementaryTypeName","src":"4331:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4330:15:3"},"returnParameters":{"id":535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":541,"src":"4369:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":533,"name":"address","nodeType":"ElementaryTypeName","src":"4369:15:3","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"4368:17:3"},"scope":575,"src":"4312:114:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":548,"nodeType":"Block","src":"4489:38:3","statements":[{"expression":{"id":546,"name":"s_recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"4506:14:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":545,"id":547,"nodeType":"Return","src":"4499:21:3"}]},"functionSelector":"0b6831e5","id":549,"implemented":true,"kind":"function","modifiers":[],"name":"gertRecentWinner","nameLocation":"4441:16:3","nodeType":"FunctionDefinition","parameters":{"id":542,"nodeType":"ParameterList","parameters":[],"src":"4457:2:3"},"returnParameters":{"id":545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":549,"src":"4481:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":543,"name":"address","nodeType":"ElementaryTypeName","src":"4481:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4480:9:3"},"scope":575,"src":"4432:95:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":557,"nodeType":"Block","src":"4593:37:3","statements":[{"expression":{"id":555,"name":"s_raffelState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"4610:13:3","typeDescriptions":{"typeIdentifier":"t_enum$_RaffelState_$226","typeString":"enum Raffel.RaffelState"}},"functionReturnParameters":554,"id":556,"nodeType":"Return","src":"4603:20:3"}]},"functionSelector":"8a78da41","id":558,"implemented":true,"kind":"function","modifiers":[],"name":"getRaffelState","nameLocation":"4542:14:3","nodeType":"FunctionDefinition","parameters":{"id":550,"nodeType":"ParameterList","parameters":[],"src":"4556:2:3"},"returnParameters":{"id":554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":558,"src":"4580:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RaffelState_$226","typeString":"enum Raffel.RaffelState"},"typeName":{"id":552,"nodeType":"UserDefinedTypeName","pathNode":{"id":551,"name":"RaffelState","nameLocations":["4580:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":226,"src":"4580:11:3"},"referencedDeclaration":226,"src":"4580:11:3","typeDescriptions":{"typeIdentifier":"t_enum$_RaffelState_$226","typeString":"enum Raffel.RaffelState"}},"visibility":"internal"}],"src":"4579:13:3"},"scope":575,"src":"4533:97:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":565,"nodeType":"Block","src":"4691:32:3","statements":[{"expression":{"id":563,"name":"numWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"4708:8:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":562,"id":564,"nodeType":"Return","src":"4701:15:3"}]},"functionSelector":"53a2c19a","id":566,"implemented":true,"kind":"function","modifiers":[],"name":"getNumWords","nameLocation":"4648:11:3","nodeType":"FunctionDefinition","parameters":{"id":559,"nodeType":"ParameterList","parameters":[],"src":"4659:2:3"},"returnParameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":566,"src":"4683:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":560,"name":"uint32","nodeType":"ElementaryTypeName","src":"4683:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4682:8:3"},"scope":575,"src":"4639:84:3","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":573,"nodeType":"Block","src":"4793:44:3","statements":[{"expression":{"id":571,"name":"requestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"4810:20:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":570,"id":572,"nodeType":"Return","src":"4803:27:3"}]},"functionSelector":"5f1b0fd8","id":574,"implemented":true,"kind":"function","modifiers":[],"name":"getRequestConfirmations","nameLocation":"4738:23:3","nodeType":"FunctionDefinition","parameters":{"id":567,"nodeType":"ParameterList","parameters":[],"src":"4761:2:3"},"returnParameters":{"id":570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":574,"src":"4785:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":568,"name":"uint16","nodeType":"ElementaryTypeName","src":"4785:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"4784:8:3"},"scope":575,"src":"4729:108:3","stateMutability":"pure","virtual":false,"visibility":"public"}],"scope":576,"src":"505:4335:3","usedErrors":[27,181,183,191],"usedEvents":[230,234,238]}],"src":"32:4808:3"},"id":3}},"contracts":{"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol":{"AutomationCompatibleInterface":{"abi":[{"inputs":[{"internalType":"bytes","name":"checkData","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"performData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"performData","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"checkUpkeep(bytes)":{"details":"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.","params":{"checkData":"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract."},"returns":{"performData":"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.","upkeepNeeded":"boolean to indicate whether the keeper should call performUpkeep or not."}},"performUpkeep(bytes)":{"details":"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.","params":{"performData":"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"checkUpkeep(bytes)":"6e04ff0d","performUpkeep(bytes)":"4585e33b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":\"AutomationCompatibleInterface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"checkUpkeep(bytes)":{"notice":"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas."},"performUpkeep(bytes)":{"notice":"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."}},"version":1}}},"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol":{"VRFConsumerBaseV2":{"abi":[{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).","kind":"dev","methods":{"constructor":{"params":{"_vrfCoordinator":"address of VRFCoordinator contract"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"rawFulfillRandomWords(uint256,uint256[])":"1fe543e3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":\"VRFConsumerBaseV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  // solhint-disable-next-line chainlink-solidity/prefix-immutable-variables-with-i\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  // solhint-disable-next-line chainlink-solidity/prefix-internal-functions-with-underscore\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x5a502a5ce16796565815b295bb2d18a0d26d6f23621f733918c971047c6091d7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************","version":1}}},"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol":{"VRFCoordinatorV2Interface":{"abi":[{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getRequestConfig","outputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"numWords","type":"uint32"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"details":"will revert if original owner of subId has not requested that msg.sender become the new owner.","params":{"subId":"- ID of the subscription"}},"addConsumer(uint64,address)":{"params":{"consumer":"- New consumer which can use the subscription","subId":"- ID of the subscription"}},"cancelSubscription(uint64,address)":{"params":{"subId":"- ID of the subscription","to":"- Where to send the remaining LINK to"}},"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));","returns":{"subId":"- A unique subscription id."}},"getRequestConfig()":{"returns":{"_0":"minimumRequestConfirmations global min for request confirmations","_1":"maxGasLimit global max for request gas limit","_2":"s_provingKeyHashes list of registered key hashes"}},"getSubscription(uint64)":{"params":{"subId":"- ID of the subscription"},"returns":{"balance":"- LINK balance of the subscription in juels.","consumers":"- list of consumer address which are able to use this subscription.","owner":"- owner of the subscription.","reqCount":"- number of requests for this subscription, determines fee tier."}},"removeConsumer(uint64,address)":{"params":{"consumer":"- Consumer to remove from the subscription","subId":"- ID of the subscription"}},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"params":{"callbackGasLimit":"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]","keyHash":"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.","minimumRequestConfirmations":"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].","numWords":"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.","subId":"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash."},"returns":{"requestId":"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords."}},"requestSubscriptionOwnerTransfer(uint64,address)":{"params":{"newOwner":"- proposed new owner of the subscription","subId":"- ID of the subscription"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptSubscriptionOwnerTransfer(uint64)":"82359740","addConsumer(uint64,address)":"7341c10c","cancelSubscription(uint64,address)":"d7ae1d30","createSubscription()":"a21a23e4","getRequestConfig()":"00012291","getSubscription(uint64)":"a47c7696","pendingRequestExists(uint64)":"e82ad7d4","removeConsumer(uint64,address)":"9f87fad7","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"5d3b1d30","requestSubscriptionOwnerTransfer(uint64,address)":"04c357cb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint64,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}},\"getSubscription(uint64)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- number of requests for this subscription, determines fee tier.\"}},\"removeConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"params\":{\"callbackGasLimit\":\"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]\",\"keyHash\":\"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.\",\"minimumRequestConfirmations\":\"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].\",\"numWords\":\"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.\",\"subId\":\"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash.\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"notice\":\"Request subscription owner transfer.\"},\"addConsumer(uint64,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint64,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"},\"getSubscription(uint64)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint64,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol\":\"VRFCoordinatorV2Interface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig() external view returns (uint16, uint32, bytes32[] memory);\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint64 subId\\n  ) external view returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint64 subId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x619d9d975540d65ef8d6332a67cbd0dda5b0f95b120b8da56695ed50c2f9fc30\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"notice":"Request subscription owner transfer."},"addConsumer(uint64,address)":{"notice":"Add a consumer to a VRF subscription."},"cancelSubscription(uint64,address)":{"notice":"Cancel a subscription"},"createSubscription()":{"notice":"Create a VRF subscription."},"getRequestConfig()":{"notice":"Get configuration relevant for making requests"},"getSubscription(uint64)":{"notice":"Get a VRF subscription."},"removeConsumer(uint64,address)":{"notice":"Remove a consumer from a VRF subscription."},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"notice":"Request a set of random words."},"requestSubscriptionOwnerTransfer(uint64,address)":{"notice":"Request subscription owner transfer."}},"version":1}}},"contracts/Raffel.sol":{"Raffel":{"abi":[{"inputs":[{"internalType":"uint256","name":"entryFee","type":"uint256"},{"internalType":"address","name":"vrfCoordinator","type":"address"},{"internalType":"bytes32","name":"gasLane","type":"bytes32"},{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint256","name":"interval","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[],"name":"Raffel_NotOpen","type":"error"},{"inputs":[],"name":"Raffel_TransferFailed","type":"error"},{"inputs":[{"internalType":"uint256","name":"currentBalance","type":"uint256"},{"internalType":"uint256","name":"numPlayers","type":"uint256"},{"internalType":"uint256","name":"raffelState","type":"uint256"}],"name":"Raffel_UpkeepNotNeeded","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"player","type":"address"}],"name":"RaffelEntered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"winner","type":"address"}],"name":"RaffelWinnerPicked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"}],"name":"RequestedRaffelWinner","type":"event"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"enterRaffel","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"gertRecentWinner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getEntryFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNumWords","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getPlayer","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRaffelState","outputs":[{"internalType":"enum Raffel.RaffelState","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRequestConfirmations","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"performUpKeep","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_293":{"entryPoint":null,"id":293,"parameterSlots":6,"returnSlots":0},"@_40":{"entryPoint":null,"id":40,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":448,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":502,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":354,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32_fromMemory":{"entryPoint":626,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64_fromMemory":{"entryPoint":566,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_addresst_bytes32t_uint64t_uint32t_uint256_fromMemory":{"entryPoint":647,"id":null,"parameterSlots":2,"returnSlots":6},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":407,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":469,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":375,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":321,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":587,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":523,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x21":{"entryPoint":788,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":316,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":425,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":479,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":331,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":603,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":543,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:3636:4","nodeType":"YulBlock","src":"0:3636:4","statements":[{"body":{"nativeSrc":"47:35:4","nodeType":"YulBlock","src":"47:35:4","statements":[{"nativeSrc":"57:19:4","nodeType":"YulAssignment","src":"57:19:4","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:4","nodeType":"YulLiteral","src":"73:2:4","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:4","nodeType":"YulIdentifier","src":"67:5:4"},"nativeSrc":"67:9:4","nodeType":"YulFunctionCall","src":"67:9:4"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:4","nodeType":"YulIdentifier","src":"57:6:4"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:4","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:4","nodeType":"YulTypedName","src":"40:6:4","type":""}],"src":"7:75:4"},{"body":{"nativeSrc":"177:28:4","nodeType":"YulBlock","src":"177:28:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:4","nodeType":"YulLiteral","src":"194:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:4","nodeType":"YulLiteral","src":"197:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:4","nodeType":"YulIdentifier","src":"187:6:4"},"nativeSrc":"187:12:4","nodeType":"YulFunctionCall","src":"187:12:4"},"nativeSrc":"187:12:4","nodeType":"YulExpressionStatement","src":"187:12:4"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:4","nodeType":"YulFunctionDefinition","src":"88:117:4"},{"body":{"nativeSrc":"300:28:4","nodeType":"YulBlock","src":"300:28:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:4","nodeType":"YulLiteral","src":"317:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:4","nodeType":"YulLiteral","src":"320:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:4","nodeType":"YulIdentifier","src":"310:6:4"},"nativeSrc":"310:12:4","nodeType":"YulFunctionCall","src":"310:12:4"},"nativeSrc":"310:12:4","nodeType":"YulExpressionStatement","src":"310:12:4"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:4","nodeType":"YulFunctionDefinition","src":"211:117:4"},{"body":{"nativeSrc":"379:32:4","nodeType":"YulBlock","src":"379:32:4","statements":[{"nativeSrc":"389:16:4","nodeType":"YulAssignment","src":"389:16:4","value":{"name":"value","nativeSrc":"400:5:4","nodeType":"YulIdentifier","src":"400:5:4"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:4","nodeType":"YulIdentifier","src":"389:7:4"}]}]},"name":"cleanup_t_uint256","nativeSrc":"334:77:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:4","nodeType":"YulTypedName","src":"361:5:4","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:4","nodeType":"YulTypedName","src":"371:7:4","type":""}],"src":"334:77:4"},{"body":{"nativeSrc":"460:79:4","nodeType":"YulBlock","src":"460:79:4","statements":[{"body":{"nativeSrc":"517:16:4","nodeType":"YulBlock","src":"517:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"526:1:4","nodeType":"YulLiteral","src":"526:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"529:1:4","nodeType":"YulLiteral","src":"529:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"519:6:4","nodeType":"YulIdentifier","src":"519:6:4"},"nativeSrc":"519:12:4","nodeType":"YulFunctionCall","src":"519:12:4"},"nativeSrc":"519:12:4","nodeType":"YulExpressionStatement","src":"519:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"483:5:4","nodeType":"YulIdentifier","src":"483:5:4"},{"arguments":[{"name":"value","nativeSrc":"508:5:4","nodeType":"YulIdentifier","src":"508:5:4"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"490:17:4","nodeType":"YulIdentifier","src":"490:17:4"},"nativeSrc":"490:24:4","nodeType":"YulFunctionCall","src":"490:24:4"}],"functionName":{"name":"eq","nativeSrc":"480:2:4","nodeType":"YulIdentifier","src":"480:2:4"},"nativeSrc":"480:35:4","nodeType":"YulFunctionCall","src":"480:35:4"}],"functionName":{"name":"iszero","nativeSrc":"473:6:4","nodeType":"YulIdentifier","src":"473:6:4"},"nativeSrc":"473:43:4","nodeType":"YulFunctionCall","src":"473:43:4"},"nativeSrc":"470:63:4","nodeType":"YulIf","src":"470:63:4"}]},"name":"validator_revert_t_uint256","nativeSrc":"417:122:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"453:5:4","nodeType":"YulTypedName","src":"453:5:4","type":""}],"src":"417:122:4"},{"body":{"nativeSrc":"608:80:4","nodeType":"YulBlock","src":"608:80:4","statements":[{"nativeSrc":"618:22:4","nodeType":"YulAssignment","src":"618:22:4","value":{"arguments":[{"name":"offset","nativeSrc":"633:6:4","nodeType":"YulIdentifier","src":"633:6:4"}],"functionName":{"name":"mload","nativeSrc":"627:5:4","nodeType":"YulIdentifier","src":"627:5:4"},"nativeSrc":"627:13:4","nodeType":"YulFunctionCall","src":"627:13:4"},"variableNames":[{"name":"value","nativeSrc":"618:5:4","nodeType":"YulIdentifier","src":"618:5:4"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"676:5:4","nodeType":"YulIdentifier","src":"676:5:4"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"649:26:4","nodeType":"YulIdentifier","src":"649:26:4"},"nativeSrc":"649:33:4","nodeType":"YulFunctionCall","src":"649:33:4"},"nativeSrc":"649:33:4","nodeType":"YulExpressionStatement","src":"649:33:4"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"545:143:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"586:6:4","nodeType":"YulTypedName","src":"586:6:4","type":""},{"name":"end","nativeSrc":"594:3:4","nodeType":"YulTypedName","src":"594:3:4","type":""}],"returnVariables":[{"name":"value","nativeSrc":"602:5:4","nodeType":"YulTypedName","src":"602:5:4","type":""}],"src":"545:143:4"},{"body":{"nativeSrc":"739:81:4","nodeType":"YulBlock","src":"739:81:4","statements":[{"nativeSrc":"749:65:4","nodeType":"YulAssignment","src":"749:65:4","value":{"arguments":[{"name":"value","nativeSrc":"764:5:4","nodeType":"YulIdentifier","src":"764:5:4"},{"kind":"number","nativeSrc":"771:42:4","nodeType":"YulLiteral","src":"771:42:4","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"760:3:4","nodeType":"YulIdentifier","src":"760:3:4"},"nativeSrc":"760:54:4","nodeType":"YulFunctionCall","src":"760:54:4"},"variableNames":[{"name":"cleaned","nativeSrc":"749:7:4","nodeType":"YulIdentifier","src":"749:7:4"}]}]},"name":"cleanup_t_uint160","nativeSrc":"694:126:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"721:5:4","nodeType":"YulTypedName","src":"721:5:4","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"731:7:4","nodeType":"YulTypedName","src":"731:7:4","type":""}],"src":"694:126:4"},{"body":{"nativeSrc":"871:51:4","nodeType":"YulBlock","src":"871:51:4","statements":[{"nativeSrc":"881:35:4","nodeType":"YulAssignment","src":"881:35:4","value":{"arguments":[{"name":"value","nativeSrc":"910:5:4","nodeType":"YulIdentifier","src":"910:5:4"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"892:17:4","nodeType":"YulIdentifier","src":"892:17:4"},"nativeSrc":"892:24:4","nodeType":"YulFunctionCall","src":"892:24:4"},"variableNames":[{"name":"cleaned","nativeSrc":"881:7:4","nodeType":"YulIdentifier","src":"881:7:4"}]}]},"name":"cleanup_t_address","nativeSrc":"826:96:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"853:5:4","nodeType":"YulTypedName","src":"853:5:4","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"863:7:4","nodeType":"YulTypedName","src":"863:7:4","type":""}],"src":"826:96:4"},{"body":{"nativeSrc":"971:79:4","nodeType":"YulBlock","src":"971:79:4","statements":[{"body":{"nativeSrc":"1028:16:4","nodeType":"YulBlock","src":"1028:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1037:1:4","nodeType":"YulLiteral","src":"1037:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"1040:1:4","nodeType":"YulLiteral","src":"1040:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1030:6:4","nodeType":"YulIdentifier","src":"1030:6:4"},"nativeSrc":"1030:12:4","nodeType":"YulFunctionCall","src":"1030:12:4"},"nativeSrc":"1030:12:4","nodeType":"YulExpressionStatement","src":"1030:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"994:5:4","nodeType":"YulIdentifier","src":"994:5:4"},{"arguments":[{"name":"value","nativeSrc":"1019:5:4","nodeType":"YulIdentifier","src":"1019:5:4"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1001:17:4","nodeType":"YulIdentifier","src":"1001:17:4"},"nativeSrc":"1001:24:4","nodeType":"YulFunctionCall","src":"1001:24:4"}],"functionName":{"name":"eq","nativeSrc":"991:2:4","nodeType":"YulIdentifier","src":"991:2:4"},"nativeSrc":"991:35:4","nodeType":"YulFunctionCall","src":"991:35:4"}],"functionName":{"name":"iszero","nativeSrc":"984:6:4","nodeType":"YulIdentifier","src":"984:6:4"},"nativeSrc":"984:43:4","nodeType":"YulFunctionCall","src":"984:43:4"},"nativeSrc":"981:63:4","nodeType":"YulIf","src":"981:63:4"}]},"name":"validator_revert_t_address","nativeSrc":"928:122:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"964:5:4","nodeType":"YulTypedName","src":"964:5:4","type":""}],"src":"928:122:4"},{"body":{"nativeSrc":"1119:80:4","nodeType":"YulBlock","src":"1119:80:4","statements":[{"nativeSrc":"1129:22:4","nodeType":"YulAssignment","src":"1129:22:4","value":{"arguments":[{"name":"offset","nativeSrc":"1144:6:4","nodeType":"YulIdentifier","src":"1144:6:4"}],"functionName":{"name":"mload","nativeSrc":"1138:5:4","nodeType":"YulIdentifier","src":"1138:5:4"},"nativeSrc":"1138:13:4","nodeType":"YulFunctionCall","src":"1138:13:4"},"variableNames":[{"name":"value","nativeSrc":"1129:5:4","nodeType":"YulIdentifier","src":"1129:5:4"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1187:5:4","nodeType":"YulIdentifier","src":"1187:5:4"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"1160:26:4","nodeType":"YulIdentifier","src":"1160:26:4"},"nativeSrc":"1160:33:4","nodeType":"YulFunctionCall","src":"1160:33:4"},"nativeSrc":"1160:33:4","nodeType":"YulExpressionStatement","src":"1160:33:4"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"1056:143:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1097:6:4","nodeType":"YulTypedName","src":"1097:6:4","type":""},{"name":"end","nativeSrc":"1105:3:4","nodeType":"YulTypedName","src":"1105:3:4","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1113:5:4","nodeType":"YulTypedName","src":"1113:5:4","type":""}],"src":"1056:143:4"},{"body":{"nativeSrc":"1250:32:4","nodeType":"YulBlock","src":"1250:32:4","statements":[{"nativeSrc":"1260:16:4","nodeType":"YulAssignment","src":"1260:16:4","value":{"name":"value","nativeSrc":"1271:5:4","nodeType":"YulIdentifier","src":"1271:5:4"},"variableNames":[{"name":"cleaned","nativeSrc":"1260:7:4","nodeType":"YulIdentifier","src":"1260:7:4"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"1205:77:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1232:5:4","nodeType":"YulTypedName","src":"1232:5:4","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1242:7:4","nodeType":"YulTypedName","src":"1242:7:4","type":""}],"src":"1205:77:4"},{"body":{"nativeSrc":"1331:79:4","nodeType":"YulBlock","src":"1331:79:4","statements":[{"body":{"nativeSrc":"1388:16:4","nodeType":"YulBlock","src":"1388:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1397:1:4","nodeType":"YulLiteral","src":"1397:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"1400:1:4","nodeType":"YulLiteral","src":"1400:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1390:6:4","nodeType":"YulIdentifier","src":"1390:6:4"},"nativeSrc":"1390:12:4","nodeType":"YulFunctionCall","src":"1390:12:4"},"nativeSrc":"1390:12:4","nodeType":"YulExpressionStatement","src":"1390:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1354:5:4","nodeType":"YulIdentifier","src":"1354:5:4"},{"arguments":[{"name":"value","nativeSrc":"1379:5:4","nodeType":"YulIdentifier","src":"1379:5:4"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"1361:17:4","nodeType":"YulIdentifier","src":"1361:17:4"},"nativeSrc":"1361:24:4","nodeType":"YulFunctionCall","src":"1361:24:4"}],"functionName":{"name":"eq","nativeSrc":"1351:2:4","nodeType":"YulIdentifier","src":"1351:2:4"},"nativeSrc":"1351:35:4","nodeType":"YulFunctionCall","src":"1351:35:4"}],"functionName":{"name":"iszero","nativeSrc":"1344:6:4","nodeType":"YulIdentifier","src":"1344:6:4"},"nativeSrc":"1344:43:4","nodeType":"YulFunctionCall","src":"1344:43:4"},"nativeSrc":"1341:63:4","nodeType":"YulIf","src":"1341:63:4"}]},"name":"validator_revert_t_bytes32","nativeSrc":"1288:122:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1324:5:4","nodeType":"YulTypedName","src":"1324:5:4","type":""}],"src":"1288:122:4"},{"body":{"nativeSrc":"1479:80:4","nodeType":"YulBlock","src":"1479:80:4","statements":[{"nativeSrc":"1489:22:4","nodeType":"YulAssignment","src":"1489:22:4","value":{"arguments":[{"name":"offset","nativeSrc":"1504:6:4","nodeType":"YulIdentifier","src":"1504:6:4"}],"functionName":{"name":"mload","nativeSrc":"1498:5:4","nodeType":"YulIdentifier","src":"1498:5:4"},"nativeSrc":"1498:13:4","nodeType":"YulFunctionCall","src":"1498:13:4"},"variableNames":[{"name":"value","nativeSrc":"1489:5:4","nodeType":"YulIdentifier","src":"1489:5:4"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1547:5:4","nodeType":"YulIdentifier","src":"1547:5:4"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"1520:26:4","nodeType":"YulIdentifier","src":"1520:26:4"},"nativeSrc":"1520:33:4","nodeType":"YulFunctionCall","src":"1520:33:4"},"nativeSrc":"1520:33:4","nodeType":"YulExpressionStatement","src":"1520:33:4"}]},"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"1416:143:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1457:6:4","nodeType":"YulTypedName","src":"1457:6:4","type":""},{"name":"end","nativeSrc":"1465:3:4","nodeType":"YulTypedName","src":"1465:3:4","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1473:5:4","nodeType":"YulTypedName","src":"1473:5:4","type":""}],"src":"1416:143:4"},{"body":{"nativeSrc":"1609:57:4","nodeType":"YulBlock","src":"1609:57:4","statements":[{"nativeSrc":"1619:41:4","nodeType":"YulAssignment","src":"1619:41:4","value":{"arguments":[{"name":"value","nativeSrc":"1634:5:4","nodeType":"YulIdentifier","src":"1634:5:4"},{"kind":"number","nativeSrc":"1641:18:4","nodeType":"YulLiteral","src":"1641:18:4","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1630:3:4","nodeType":"YulIdentifier","src":"1630:3:4"},"nativeSrc":"1630:30:4","nodeType":"YulFunctionCall","src":"1630:30:4"},"variableNames":[{"name":"cleaned","nativeSrc":"1619:7:4","nodeType":"YulIdentifier","src":"1619:7:4"}]}]},"name":"cleanup_t_uint64","nativeSrc":"1565:101:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1591:5:4","nodeType":"YulTypedName","src":"1591:5:4","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1601:7:4","nodeType":"YulTypedName","src":"1601:7:4","type":""}],"src":"1565:101:4"},{"body":{"nativeSrc":"1714:78:4","nodeType":"YulBlock","src":"1714:78:4","statements":[{"body":{"nativeSrc":"1770:16:4","nodeType":"YulBlock","src":"1770:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1779:1:4","nodeType":"YulLiteral","src":"1779:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"1782:1:4","nodeType":"YulLiteral","src":"1782:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1772:6:4","nodeType":"YulIdentifier","src":"1772:6:4"},"nativeSrc":"1772:12:4","nodeType":"YulFunctionCall","src":"1772:12:4"},"nativeSrc":"1772:12:4","nodeType":"YulExpressionStatement","src":"1772:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1737:5:4","nodeType":"YulIdentifier","src":"1737:5:4"},{"arguments":[{"name":"value","nativeSrc":"1761:5:4","nodeType":"YulIdentifier","src":"1761:5:4"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"1744:16:4","nodeType":"YulIdentifier","src":"1744:16:4"},"nativeSrc":"1744:23:4","nodeType":"YulFunctionCall","src":"1744:23:4"}],"functionName":{"name":"eq","nativeSrc":"1734:2:4","nodeType":"YulIdentifier","src":"1734:2:4"},"nativeSrc":"1734:34:4","nodeType":"YulFunctionCall","src":"1734:34:4"}],"functionName":{"name":"iszero","nativeSrc":"1727:6:4","nodeType":"YulIdentifier","src":"1727:6:4"},"nativeSrc":"1727:42:4","nodeType":"YulFunctionCall","src":"1727:42:4"},"nativeSrc":"1724:62:4","nodeType":"YulIf","src":"1724:62:4"}]},"name":"validator_revert_t_uint64","nativeSrc":"1672:120:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1707:5:4","nodeType":"YulTypedName","src":"1707:5:4","type":""}],"src":"1672:120:4"},{"body":{"nativeSrc":"1860:79:4","nodeType":"YulBlock","src":"1860:79:4","statements":[{"nativeSrc":"1870:22:4","nodeType":"YulAssignment","src":"1870:22:4","value":{"arguments":[{"name":"offset","nativeSrc":"1885:6:4","nodeType":"YulIdentifier","src":"1885:6:4"}],"functionName":{"name":"mload","nativeSrc":"1879:5:4","nodeType":"YulIdentifier","src":"1879:5:4"},"nativeSrc":"1879:13:4","nodeType":"YulFunctionCall","src":"1879:13:4"},"variableNames":[{"name":"value","nativeSrc":"1870:5:4","nodeType":"YulIdentifier","src":"1870:5:4"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1927:5:4","nodeType":"YulIdentifier","src":"1927:5:4"}],"functionName":{"name":"validator_revert_t_uint64","nativeSrc":"1901:25:4","nodeType":"YulIdentifier","src":"1901:25:4"},"nativeSrc":"1901:32:4","nodeType":"YulFunctionCall","src":"1901:32:4"},"nativeSrc":"1901:32:4","nodeType":"YulExpressionStatement","src":"1901:32:4"}]},"name":"abi_decode_t_uint64_fromMemory","nativeSrc":"1798:141:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1838:6:4","nodeType":"YulTypedName","src":"1838:6:4","type":""},{"name":"end","nativeSrc":"1846:3:4","nodeType":"YulTypedName","src":"1846:3:4","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1854:5:4","nodeType":"YulTypedName","src":"1854:5:4","type":""}],"src":"1798:141:4"},{"body":{"nativeSrc":"1989:49:4","nodeType":"YulBlock","src":"1989:49:4","statements":[{"nativeSrc":"1999:33:4","nodeType":"YulAssignment","src":"1999:33:4","value":{"arguments":[{"name":"value","nativeSrc":"2014:5:4","nodeType":"YulIdentifier","src":"2014:5:4"},{"kind":"number","nativeSrc":"2021:10:4","nodeType":"YulLiteral","src":"2021:10:4","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nativeSrc":"2010:3:4","nodeType":"YulIdentifier","src":"2010:3:4"},"nativeSrc":"2010:22:4","nodeType":"YulFunctionCall","src":"2010:22:4"},"variableNames":[{"name":"cleaned","nativeSrc":"1999:7:4","nodeType":"YulIdentifier","src":"1999:7:4"}]}]},"name":"cleanup_t_uint32","nativeSrc":"1945:93:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1971:5:4","nodeType":"YulTypedName","src":"1971:5:4","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1981:7:4","nodeType":"YulTypedName","src":"1981:7:4","type":""}],"src":"1945:93:4"},{"body":{"nativeSrc":"2086:78:4","nodeType":"YulBlock","src":"2086:78:4","statements":[{"body":{"nativeSrc":"2142:16:4","nodeType":"YulBlock","src":"2142:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2151:1:4","nodeType":"YulLiteral","src":"2151:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"2154:1:4","nodeType":"YulLiteral","src":"2154:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2144:6:4","nodeType":"YulIdentifier","src":"2144:6:4"},"nativeSrc":"2144:12:4","nodeType":"YulFunctionCall","src":"2144:12:4"},"nativeSrc":"2144:12:4","nodeType":"YulExpressionStatement","src":"2144:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2109:5:4","nodeType":"YulIdentifier","src":"2109:5:4"},{"arguments":[{"name":"value","nativeSrc":"2133:5:4","nodeType":"YulIdentifier","src":"2133:5:4"}],"functionName":{"name":"cleanup_t_uint32","nativeSrc":"2116:16:4","nodeType":"YulIdentifier","src":"2116:16:4"},"nativeSrc":"2116:23:4","nodeType":"YulFunctionCall","src":"2116:23:4"}],"functionName":{"name":"eq","nativeSrc":"2106:2:4","nodeType":"YulIdentifier","src":"2106:2:4"},"nativeSrc":"2106:34:4","nodeType":"YulFunctionCall","src":"2106:34:4"}],"functionName":{"name":"iszero","nativeSrc":"2099:6:4","nodeType":"YulIdentifier","src":"2099:6:4"},"nativeSrc":"2099:42:4","nodeType":"YulFunctionCall","src":"2099:42:4"},"nativeSrc":"2096:62:4","nodeType":"YulIf","src":"2096:62:4"}]},"name":"validator_revert_t_uint32","nativeSrc":"2044:120:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2079:5:4","nodeType":"YulTypedName","src":"2079:5:4","type":""}],"src":"2044:120:4"},{"body":{"nativeSrc":"2232:79:4","nodeType":"YulBlock","src":"2232:79:4","statements":[{"nativeSrc":"2242:22:4","nodeType":"YulAssignment","src":"2242:22:4","value":{"arguments":[{"name":"offset","nativeSrc":"2257:6:4","nodeType":"YulIdentifier","src":"2257:6:4"}],"functionName":{"name":"mload","nativeSrc":"2251:5:4","nodeType":"YulIdentifier","src":"2251:5:4"},"nativeSrc":"2251:13:4","nodeType":"YulFunctionCall","src":"2251:13:4"},"variableNames":[{"name":"value","nativeSrc":"2242:5:4","nodeType":"YulIdentifier","src":"2242:5:4"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2299:5:4","nodeType":"YulIdentifier","src":"2299:5:4"}],"functionName":{"name":"validator_revert_t_uint32","nativeSrc":"2273:25:4","nodeType":"YulIdentifier","src":"2273:25:4"},"nativeSrc":"2273:32:4","nodeType":"YulFunctionCall","src":"2273:32:4"},"nativeSrc":"2273:32:4","nodeType":"YulExpressionStatement","src":"2273:32:4"}]},"name":"abi_decode_t_uint32_fromMemory","nativeSrc":"2170:141:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2210:6:4","nodeType":"YulTypedName","src":"2210:6:4","type":""},{"name":"end","nativeSrc":"2218:3:4","nodeType":"YulTypedName","src":"2218:3:4","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2226:5:4","nodeType":"YulTypedName","src":"2226:5:4","type":""}],"src":"2170:141:4"},{"body":{"nativeSrc":"2477:970:4","nodeType":"YulBlock","src":"2477:970:4","statements":[{"body":{"nativeSrc":"2524:83:4","nodeType":"YulBlock","src":"2524:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2526:77:4","nodeType":"YulIdentifier","src":"2526:77:4"},"nativeSrc":"2526:79:4","nodeType":"YulFunctionCall","src":"2526:79:4"},"nativeSrc":"2526:79:4","nodeType":"YulExpressionStatement","src":"2526:79:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2498:7:4","nodeType":"YulIdentifier","src":"2498:7:4"},{"name":"headStart","nativeSrc":"2507:9:4","nodeType":"YulIdentifier","src":"2507:9:4"}],"functionName":{"name":"sub","nativeSrc":"2494:3:4","nodeType":"YulIdentifier","src":"2494:3:4"},"nativeSrc":"2494:23:4","nodeType":"YulFunctionCall","src":"2494:23:4"},{"kind":"number","nativeSrc":"2519:3:4","nodeType":"YulLiteral","src":"2519:3:4","type":"","value":"192"}],"functionName":{"name":"slt","nativeSrc":"2490:3:4","nodeType":"YulIdentifier","src":"2490:3:4"},"nativeSrc":"2490:33:4","nodeType":"YulFunctionCall","src":"2490:33:4"},"nativeSrc":"2487:120:4","nodeType":"YulIf","src":"2487:120:4"},{"nativeSrc":"2617:128:4","nodeType":"YulBlock","src":"2617:128:4","statements":[{"nativeSrc":"2632:15:4","nodeType":"YulVariableDeclaration","src":"2632:15:4","value":{"kind":"number","nativeSrc":"2646:1:4","nodeType":"YulLiteral","src":"2646:1:4","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2636:6:4","nodeType":"YulTypedName","src":"2636:6:4","type":""}]},{"nativeSrc":"2661:74:4","nodeType":"YulAssignment","src":"2661:74:4","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2707:9:4","nodeType":"YulIdentifier","src":"2707:9:4"},{"name":"offset","nativeSrc":"2718:6:4","nodeType":"YulIdentifier","src":"2718:6:4"}],"functionName":{"name":"add","nativeSrc":"2703:3:4","nodeType":"YulIdentifier","src":"2703:3:4"},"nativeSrc":"2703:22:4","nodeType":"YulFunctionCall","src":"2703:22:4"},{"name":"dataEnd","nativeSrc":"2727:7:4","nodeType":"YulIdentifier","src":"2727:7:4"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"2671:31:4","nodeType":"YulIdentifier","src":"2671:31:4"},"nativeSrc":"2671:64:4","nodeType":"YulFunctionCall","src":"2671:64:4"},"variableNames":[{"name":"value0","nativeSrc":"2661:6:4","nodeType":"YulIdentifier","src":"2661:6:4"}]}]},{"nativeSrc":"2755:129:4","nodeType":"YulBlock","src":"2755:129:4","statements":[{"nativeSrc":"2770:16:4","nodeType":"YulVariableDeclaration","src":"2770:16:4","value":{"kind":"number","nativeSrc":"2784:2:4","nodeType":"YulLiteral","src":"2784:2:4","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2774:6:4","nodeType":"YulTypedName","src":"2774:6:4","type":""}]},{"nativeSrc":"2800:74:4","nodeType":"YulAssignment","src":"2800:74:4","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2846:9:4","nodeType":"YulIdentifier","src":"2846:9:4"},{"name":"offset","nativeSrc":"2857:6:4","nodeType":"YulIdentifier","src":"2857:6:4"}],"functionName":{"name":"add","nativeSrc":"2842:3:4","nodeType":"YulIdentifier","src":"2842:3:4"},"nativeSrc":"2842:22:4","nodeType":"YulFunctionCall","src":"2842:22:4"},{"name":"dataEnd","nativeSrc":"2866:7:4","nodeType":"YulIdentifier","src":"2866:7:4"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"2810:31:4","nodeType":"YulIdentifier","src":"2810:31:4"},"nativeSrc":"2810:64:4","nodeType":"YulFunctionCall","src":"2810:64:4"},"variableNames":[{"name":"value1","nativeSrc":"2800:6:4","nodeType":"YulIdentifier","src":"2800:6:4"}]}]},{"nativeSrc":"2894:129:4","nodeType":"YulBlock","src":"2894:129:4","statements":[{"nativeSrc":"2909:16:4","nodeType":"YulVariableDeclaration","src":"2909:16:4","value":{"kind":"number","nativeSrc":"2923:2:4","nodeType":"YulLiteral","src":"2923:2:4","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"2913:6:4","nodeType":"YulTypedName","src":"2913:6:4","type":""}]},{"nativeSrc":"2939:74:4","nodeType":"YulAssignment","src":"2939:74:4","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2985:9:4","nodeType":"YulIdentifier","src":"2985:9:4"},{"name":"offset","nativeSrc":"2996:6:4","nodeType":"YulIdentifier","src":"2996:6:4"}],"functionName":{"name":"add","nativeSrc":"2981:3:4","nodeType":"YulIdentifier","src":"2981:3:4"},"nativeSrc":"2981:22:4","nodeType":"YulFunctionCall","src":"2981:22:4"},{"name":"dataEnd","nativeSrc":"3005:7:4","nodeType":"YulIdentifier","src":"3005:7:4"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"2949:31:4","nodeType":"YulIdentifier","src":"2949:31:4"},"nativeSrc":"2949:64:4","nodeType":"YulFunctionCall","src":"2949:64:4"},"variableNames":[{"name":"value2","nativeSrc":"2939:6:4","nodeType":"YulIdentifier","src":"2939:6:4"}]}]},{"nativeSrc":"3033:128:4","nodeType":"YulBlock","src":"3033:128:4","statements":[{"nativeSrc":"3048:16:4","nodeType":"YulVariableDeclaration","src":"3048:16:4","value":{"kind":"number","nativeSrc":"3062:2:4","nodeType":"YulLiteral","src":"3062:2:4","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"3052:6:4","nodeType":"YulTypedName","src":"3052:6:4","type":""}]},{"nativeSrc":"3078:73:4","nodeType":"YulAssignment","src":"3078:73:4","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3123:9:4","nodeType":"YulIdentifier","src":"3123:9:4"},{"name":"offset","nativeSrc":"3134:6:4","nodeType":"YulIdentifier","src":"3134:6:4"}],"functionName":{"name":"add","nativeSrc":"3119:3:4","nodeType":"YulIdentifier","src":"3119:3:4"},"nativeSrc":"3119:22:4","nodeType":"YulFunctionCall","src":"3119:22:4"},{"name":"dataEnd","nativeSrc":"3143:7:4","nodeType":"YulIdentifier","src":"3143:7:4"}],"functionName":{"name":"abi_decode_t_uint64_fromMemory","nativeSrc":"3088:30:4","nodeType":"YulIdentifier","src":"3088:30:4"},"nativeSrc":"3088:63:4","nodeType":"YulFunctionCall","src":"3088:63:4"},"variableNames":[{"name":"value3","nativeSrc":"3078:6:4","nodeType":"YulIdentifier","src":"3078:6:4"}]}]},{"nativeSrc":"3171:129:4","nodeType":"YulBlock","src":"3171:129:4","statements":[{"nativeSrc":"3186:17:4","nodeType":"YulVariableDeclaration","src":"3186:17:4","value":{"kind":"number","nativeSrc":"3200:3:4","nodeType":"YulLiteral","src":"3200:3:4","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"3190:6:4","nodeType":"YulTypedName","src":"3190:6:4","type":""}]},{"nativeSrc":"3217:73:4","nodeType":"YulAssignment","src":"3217:73:4","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3262:9:4","nodeType":"YulIdentifier","src":"3262:9:4"},{"name":"offset","nativeSrc":"3273:6:4","nodeType":"YulIdentifier","src":"3273:6:4"}],"functionName":{"name":"add","nativeSrc":"3258:3:4","nodeType":"YulIdentifier","src":"3258:3:4"},"nativeSrc":"3258:22:4","nodeType":"YulFunctionCall","src":"3258:22:4"},{"name":"dataEnd","nativeSrc":"3282:7:4","nodeType":"YulIdentifier","src":"3282:7:4"}],"functionName":{"name":"abi_decode_t_uint32_fromMemory","nativeSrc":"3227:30:4","nodeType":"YulIdentifier","src":"3227:30:4"},"nativeSrc":"3227:63:4","nodeType":"YulFunctionCall","src":"3227:63:4"},"variableNames":[{"name":"value4","nativeSrc":"3217:6:4","nodeType":"YulIdentifier","src":"3217:6:4"}]}]},{"nativeSrc":"3310:130:4","nodeType":"YulBlock","src":"3310:130:4","statements":[{"nativeSrc":"3325:17:4","nodeType":"YulVariableDeclaration","src":"3325:17:4","value":{"kind":"number","nativeSrc":"3339:3:4","nodeType":"YulLiteral","src":"3339:3:4","type":"","value":"160"},"variables":[{"name":"offset","nativeSrc":"3329:6:4","nodeType":"YulTypedName","src":"3329:6:4","type":""}]},{"nativeSrc":"3356:74:4","nodeType":"YulAssignment","src":"3356:74:4","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3402:9:4","nodeType":"YulIdentifier","src":"3402:9:4"},{"name":"offset","nativeSrc":"3413:6:4","nodeType":"YulIdentifier","src":"3413:6:4"}],"functionName":{"name":"add","nativeSrc":"3398:3:4","nodeType":"YulIdentifier","src":"3398:3:4"},"nativeSrc":"3398:22:4","nodeType":"YulFunctionCall","src":"3398:22:4"},{"name":"dataEnd","nativeSrc":"3422:7:4","nodeType":"YulIdentifier","src":"3422:7:4"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"3366:31:4","nodeType":"YulIdentifier","src":"3366:31:4"},"nativeSrc":"3366:64:4","nodeType":"YulFunctionCall","src":"3366:64:4"},"variableNames":[{"name":"value5","nativeSrc":"3356:6:4","nodeType":"YulIdentifier","src":"3356:6:4"}]}]}]},"name":"abi_decode_tuple_t_uint256t_addresst_bytes32t_uint64t_uint32t_uint256_fromMemory","nativeSrc":"2317:1130:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2407:9:4","nodeType":"YulTypedName","src":"2407:9:4","type":""},{"name":"dataEnd","nativeSrc":"2418:7:4","nodeType":"YulTypedName","src":"2418:7:4","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2430:6:4","nodeType":"YulTypedName","src":"2430:6:4","type":""},{"name":"value1","nativeSrc":"2438:6:4","nodeType":"YulTypedName","src":"2438:6:4","type":""},{"name":"value2","nativeSrc":"2446:6:4","nodeType":"YulTypedName","src":"2446:6:4","type":""},{"name":"value3","nativeSrc":"2454:6:4","nodeType":"YulTypedName","src":"2454:6:4","type":""},{"name":"value4","nativeSrc":"2462:6:4","nodeType":"YulTypedName","src":"2462:6:4","type":""},{"name":"value5","nativeSrc":"2470:6:4","nodeType":"YulTypedName","src":"2470:6:4","type":""}],"src":"2317:1130:4"},{"body":{"nativeSrc":"3481:152:4","nodeType":"YulBlock","src":"3481:152:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3498:1:4","nodeType":"YulLiteral","src":"3498:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"3501:77:4","nodeType":"YulLiteral","src":"3501:77:4","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"3491:6:4","nodeType":"YulIdentifier","src":"3491:6:4"},"nativeSrc":"3491:88:4","nodeType":"YulFunctionCall","src":"3491:88:4"},"nativeSrc":"3491:88:4","nodeType":"YulExpressionStatement","src":"3491:88:4"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3595:1:4","nodeType":"YulLiteral","src":"3595:1:4","type":"","value":"4"},{"kind":"number","nativeSrc":"3598:4:4","nodeType":"YulLiteral","src":"3598:4:4","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"3588:6:4","nodeType":"YulIdentifier","src":"3588:6:4"},"nativeSrc":"3588:15:4","nodeType":"YulFunctionCall","src":"3588:15:4"},"nativeSrc":"3588:15:4","nodeType":"YulExpressionStatement","src":"3588:15:4"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3619:1:4","nodeType":"YulLiteral","src":"3619:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"3622:4:4","nodeType":"YulLiteral","src":"3622:4:4","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3612:6:4","nodeType":"YulIdentifier","src":"3612:6:4"},"nativeSrc":"3612:15:4","nodeType":"YulFunctionCall","src":"3612:15:4"},"nativeSrc":"3612:15:4","nodeType":"YulExpressionStatement","src":"3612:15:4"}]},"name":"panic_error_0x21","nativeSrc":"3453:180:4","nodeType":"YulFunctionDefinition","src":"3453:180:4"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_bytes32t_uint64t_uint32t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n","id":4,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"610160604052620186a063ffffffff166101209063ffffffff1681525034801561002857600080fd5b50604051611783380380611783833981810160405281019061004a9190610287565b848073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050508560a081815250508473ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250508360e081815250508267ffffffffffffffff166101008167ffffffffffffffff16815250508163ffffffff166101208163ffffffff16815250506000600160146101000a81548160ff0219169083600181111561011c5761011b610314565b5b021790555042600281905550806101408181525050505050505050610343565b600080fd5b6000819050919050565b61015481610141565b811461015f57600080fd5b50565b6000815190506101718161014b565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101a282610177565b9050919050565b6101b281610197565b81146101bd57600080fd5b50565b6000815190506101cf816101a9565b92915050565b6000819050919050565b6101e8816101d5565b81146101f357600080fd5b50565b600081519050610205816101df565b92915050565b600067ffffffffffffffff82169050919050565b6102288161020b565b811461023357600080fd5b50565b6000815190506102458161021f565b92915050565b600063ffffffff82169050919050565b6102648161024b565b811461026f57600080fd5b50565b6000815190506102818161025b565b92915050565b60008060008060008060c087890312156102a4576102a361013c565b5b60006102b289828a01610162565b96505060206102c389828a016101c0565b95505060406102d489828a016101f6565b94505060606102e589828a01610236565b93505060806102f689828a01610272565b92505060a061030789828a01610162565b9150509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60805160a05160c05160e0516101005161012051610140516113d86103ab60003960006109dd015260006105d9015260006105b6015260006105950152600061055901526000818161027001526107080152600081816103e8015261043c01526113d86000f3fe6080604052600436106100915760003560e01c80636c7c8f17116100595780636c7c8f171461014a5780636e04ff0d146101735780638a78da41146101b1578063e55ae4e8146101dc578063e586a4f01461021957610091565b80630b6831e5146100965780630ff19fd7146100c15780631fe543e3146100cb57806353a2c19a146100f45780635f1b0fd81461011f575b600080fd5b3480156100a257600080fd5b506100ab610244565b6040516100b89190610b2d565b60405180910390f35b6100c961026e565b005b3480156100d757600080fd5b506100f260048036038101906100ed9190610ceb565b6103e6565b005b34801561010057600080fd5b506101096104a6565b6040516101169190610d66565b60405180910390f35b34801561012b57600080fd5b506101346104af565b6040516101419190610d9e565b60405180910390f35b34801561015657600080fd5b50610171600480360381019061016c9190610e14565b6104b8565b005b34801561017f57600080fd5b5061019a60048036038101906101959190610e14565b610691565b6040516101a8929190610efb565b60405180910390f35b3480156101bd57600080fd5b506101c66106a6565b6040516101d39190610fa2565b60405180910390f35b3480156101e857600080fd5b5061020360048036038101906101fe9190610fbd565b6106bd565b604051610210919061100b565b60405180910390f35b34801561022557600080fd5b5061022e610704565b60405161023b9190611035565b60405180910390f35b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f00000000000000000000000000000000000000000000000000000000000000003410156102c8576040517f38c2c67e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018111156102dc576102db610f2b565b5b600160149054906101000a900460ff1660018111156102fe576102fd610f2b565b5b1461033e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610335906110ad565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f8ed6a7aff9a00785197dec230a172a32e2fdea5473a74f7d0477be4505554ef860405160405180910390a2565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461049857337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f400000000000000000000000000000000000000000000000000000000815260040161048f9291906110cd565b60405180910390fd5b6104a2828261072c565b5050565b60006001905090565b60006003905090565b6104c061099d565b61052b5747600080549050600160149054906101000a900460ff1660018111156104ed576104ec610f2b565b5b6040517feee093da000000000000000000000000000000000000000000000000000000008152600401610522939291906110f6565b60405180910390fd5b60018060146101000a81548160ff021916908360018111156105505761054f610f2b565b5b021790555060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635d3b1d307f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060037f000000000000000000000000000000000000000000000000000000000000000060016040518663ffffffff1660e01b815260040161061a959493929190611169565b6020604051808303816000875af1158015610639573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065d91906111d1565b9050807f9cd72631871dff14bbc84976a39c2bca5d943f61f72884a8f331a889778f2c3160405160405180910390a2505050565b6000606061069d61099d565b91509250929050565b6000600160149054906101000a900460ff16905090565b60008082815481106106d2576106d16111fe565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000808054905082600081518110610747576107466111fe565b5b6020026020010151610759919061125c565b905060008082815481106107705761076f6111fe565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160146101000a81548160ff0219169083600181111561080457610803610f2b565b5b0217905550600067ffffffffffffffff81111561082457610823610ba8565b5b6040519080825280602002602001820160405280156108525781602001602082028036833780820191505090505b5060009080519060200190610868929190610a45565b504260028190555060008173ffffffffffffffffffffffffffffffffffffffff1647604051610896906112be565b60006040518083038185875af1925050503d80600081146108d3576040519150601f19603f3d011682016040523d82523d6000602084013e6108d8565b606091505b505090508061091c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109139061131f565b60405180910390fd5b80610953576040517f6b56c6a300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167f7d5e0acef27db2fe13c94bbdb66d614a8840fb82c920a1b9aadb5d6acf3e769260405160405180910390a25050505050565b600080600160149054906101000a900460ff1660018111156109c2576109c1610f2b565b5b600060018111156109d6576109d5610f2b565b5b14905060007f000000000000000000000000000000000000000000000000000000000000000060025442610a0a919061136e565b11905060008060008054905011905060008047119050838015610a2a5750825b8015610a335750815b8015610a3c5750805b94505050505090565b828054828255906000526020600020908101928215610abe579160200282015b82811115610abd5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a65565b5b509050610acb9190610acf565b5090565b5b80821115610ae8576000816000905550600101610ad0565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b1782610aec565b9050919050565b610b2781610b0c565b82525050565b6000602082019050610b426000830184610b1e565b92915050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610b6f81610b5c565b8114610b7a57600080fd5b50565b600081359050610b8c81610b66565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610be082610b97565b810181811067ffffffffffffffff82111715610bff57610bfe610ba8565b5b80604052505050565b6000610c12610b48565b9050610c1e8282610bd7565b919050565b600067ffffffffffffffff821115610c3e57610c3d610ba8565b5b602082029050602081019050919050565b600080fd5b6000610c67610c6284610c23565b610c08565b90508083825260208201905060208402830185811115610c8a57610c89610c4f565b5b835b81811015610cb35780610c9f8882610b7d565b845260208401935050602081019050610c8c565b5050509392505050565b600082601f830112610cd257610cd1610b92565b5b8135610ce2848260208601610c54565b91505092915050565b60008060408385031215610d0257610d01610b52565b5b6000610d1085828601610b7d565b925050602083013567ffffffffffffffff811115610d3157610d30610b57565b5b610d3d85828601610cbd565b9150509250929050565b600063ffffffff82169050919050565b610d6081610d47565b82525050565b6000602082019050610d7b6000830184610d57565b92915050565b600061ffff82169050919050565b610d9881610d81565b82525050565b6000602082019050610db36000830184610d8f565b92915050565b600080fd5b60008083601f840112610dd457610dd3610b92565b5b8235905067ffffffffffffffff811115610df157610df0610db9565b5b602083019150836001820283011115610e0d57610e0c610c4f565b5b9250929050565b60008060208385031215610e2b57610e2a610b52565b5b600083013567ffffffffffffffff811115610e4957610e48610b57565b5b610e5585828601610dbe565b92509250509250929050565b60008115159050919050565b610e7681610e61565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610eb6578082015181840152602081019050610e9b565b60008484015250505050565b6000610ecd82610e7c565b610ed78185610e87565b9350610ee7818560208601610e98565b610ef081610b97565b840191505092915050565b6000604082019050610f106000830185610e6d565b8181036020830152610f228184610ec2565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110610f6b57610f6a610f2b565b5b50565b6000819050610f7c82610f5a565b919050565b6000610f8c82610f6e565b9050919050565b610f9c81610f81565b82525050565b6000602082019050610fb76000830184610f93565b92915050565b600060208284031215610fd357610fd2610b52565b5b6000610fe184828501610b7d565b91505092915050565b6000610ff582610aec565b9050919050565b61100581610fea565b82525050565b60006020820190506110206000830184610ffc565b92915050565b61102f81610b5c565b82525050565b600060208201905061104a6000830184611026565b92915050565b600082825260208201905092915050565b7f52616666656c206973206e6f74206f70656e0000000000000000000000000000600082015250565b6000611097601283611050565b91506110a282611061565b602082019050919050565b600060208201905081810360008301526110c68161108a565b9050919050565b60006040820190506110e26000830185610b1e565b6110ef6020830184610b1e565b9392505050565b600060608201905061110b6000830186611026565b6111186020830185611026565b6111256040830184611026565b949350505050565b6000819050919050565b6111408161112d565b82525050565b600067ffffffffffffffff82169050919050565b61116381611146565b82525050565b600060a08201905061117e6000830188611137565b61118b602083018761115a565b6111986040830186610d8f565b6111a56060830185610d57565b6111b26080830184610d57565b9695505050505050565b6000815190506111cb81610b66565b92915050565b6000602082840312156111e7576111e6610b52565b5b60006111f5848285016111bc565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061126782610b5c565b915061127283610b5c565b9250826112825761128161122d565b5b828206905092915050565b600081905092915050565b50565b60006112a860008361128d565b91506112b382611298565b600082019050919050565b60006112c98261129b565b9150819050919050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000611309600f83611050565b9150611314826112d3565b602082019050919050565b60006020820190508181036000830152611338816112fc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061137982610b5c565b915061138483610b5c565b925082820390508181111561139c5761139b61133f565b5b9291505056fea2646970667358221220e307202e97ac23f4a98c11370ff4a290bfd0e4fbc2911369a9f37653d005064f64736f6c634300081c0033","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE PUSH3 0x186A0 PUSH4 0xFFFFFFFF AND PUSH2 0x120 SWAP1 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1783 CODESIZE SUB DUP1 PUSH2 0x1783 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x4A SWAP2 SWAP1 PUSH2 0x287 JUMP JUMPDEST DUP5 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP DUP6 PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x100 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 PUSH4 0xFFFFFFFF AND PUSH2 0x120 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x11C JUMPI PUSH2 0x11B PUSH2 0x314 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP1 PUSH2 0x140 DUP2 DUP2 MSTORE POP POP POP POP POP POP POP POP PUSH2 0x343 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x154 DUP2 PUSH2 0x141 JUMP JUMPDEST DUP2 EQ PUSH2 0x15F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x171 DUP2 PUSH2 0x14B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A2 DUP3 PUSH2 0x177 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B2 DUP2 PUSH2 0x197 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1CF DUP2 PUSH2 0x1A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E8 DUP2 PUSH2 0x1D5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x205 DUP2 PUSH2 0x1DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x228 DUP2 PUSH2 0x20B JUMP JUMPDEST DUP2 EQ PUSH2 0x233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x245 DUP2 PUSH2 0x21F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x264 DUP2 PUSH2 0x24B JUMP JUMPDEST DUP2 EQ PUSH2 0x26F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x281 DUP2 PUSH2 0x25B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2A4 JUMPI PUSH2 0x2A3 PUSH2 0x13C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B2 DUP10 DUP3 DUP11 ADD PUSH2 0x162 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x2C3 DUP10 DUP3 DUP11 ADD PUSH2 0x1C0 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x2D4 DUP10 DUP3 DUP11 ADD PUSH2 0x1F6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x2E5 DUP10 DUP3 DUP11 ADD PUSH2 0x236 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x2F6 DUP10 DUP3 DUP11 ADD PUSH2 0x272 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x307 DUP10 DUP3 DUP11 ADD PUSH2 0x162 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x13D8 PUSH2 0x3AB PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x9DD ADD MSTORE PUSH1 0x0 PUSH2 0x5D9 ADD MSTORE PUSH1 0x0 PUSH2 0x5B6 ADD MSTORE PUSH1 0x0 PUSH2 0x595 ADD MSTORE PUSH1 0x0 PUSH2 0x559 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x270 ADD MSTORE PUSH2 0x708 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x3E8 ADD MSTORE PUSH2 0x43C ADD MSTORE PUSH2 0x13D8 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C7C8F17 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x6C7C8F17 EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x8A78DA41 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0xE55AE4E8 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0xE586A4F0 EQ PUSH2 0x219 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0xB6831E5 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0xFF19FD7 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0x53A2C19A EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x5F1B0FD8 EQ PUSH2 0x11F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH2 0x26E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xED SWAP2 SWAP1 PUSH2 0xCEB JUMP JUMPDEST PUSH2 0x3E6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x100 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH2 0x4A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xD66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x134 PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xD9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0xE14 JUMP JUMPDEST PUSH2 0x4B8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x195 SWAP2 SWAP1 PUSH2 0xE14 JUMP JUMPDEST PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP3 SWAP2 SWAP1 PUSH2 0xEFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH2 0x6A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0xFA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x203 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0xFBD JUMP JUMPDEST PUSH2 0x6BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x100B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22E PUSH2 0x704 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x1035 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x38C2C67E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2DC JUMPI PUSH2 0x2DB PUSH2 0xF2B JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2FE JUMPI PUSH2 0x2FD PUSH2 0xF2B JUMP JUMPDEST JUMPDEST EQ PUSH2 0x33E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x335 SWAP1 PUSH2 0x10AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8ED6A7AFF9A00785197DEC230A172A32E2FDEA5473A74F7D0477BE4505554EF8 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x498 JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48F SWAP3 SWAP2 SWAP1 PUSH2 0x10CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4A2 DUP3 DUP3 PUSH2 0x72C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4C0 PUSH2 0x99D JUMP JUMPDEST PUSH2 0x52B JUMPI SELFBALANCE PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x4ED JUMPI PUSH2 0x4EC PUSH2 0xF2B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xEEE093DA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x522 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x550 JUMPI PUSH2 0x54F PUSH2 0xF2B JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61A SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1169 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x639 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x65D SWAP2 SWAP1 PUSH2 0x11D1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH32 0x9CD72631871DFF14BBC84976A39C2BCA5D943F61F72884A8F331A889778F2C31 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x69D PUSH2 0x99D JUMP JUMPDEST SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x6D2 JUMPI PUSH2 0x6D1 PUSH2 0x11FE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x747 JUMPI PUSH2 0x746 PUSH2 0x11FE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x759 SWAP2 SWAP1 PUSH2 0x125C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x770 JUMPI PUSH2 0x76F PUSH2 0x11FE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x804 JUMPI PUSH2 0x803 PUSH2 0xF2B JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x824 JUMPI PUSH2 0x823 PUSH2 0xBA8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x852 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x868 SWAP3 SWAP2 SWAP1 PUSH2 0xA45 JUMP JUMPDEST POP TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0x896 SWAP1 PUSH2 0x12BE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x8D3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x91C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x913 SWAP1 PUSH2 0x131F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x953 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6B56C6A300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7D5E0ACEF27DB2FE13C94BBDB66D614A8840FB82C920A1B9AADB5D6ACF3E7692 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x9C2 JUMPI PUSH2 0x9C1 PUSH2 0xF2B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x9D6 JUMPI PUSH2 0x9D5 PUSH2 0xF2B JUMP JUMPDEST JUMPDEST EQ SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0xA0A SWAP2 SWAP1 PUSH2 0x136E JUMP JUMPDEST GT SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 POP GT SWAP1 POP PUSH1 0x0 DUP1 SELFBALANCE GT SWAP1 POP DUP4 DUP1 ISZERO PUSH2 0xA2A JUMPI POP DUP3 JUMPDEST DUP1 ISZERO PUSH2 0xA33 JUMPI POP DUP2 JUMPDEST DUP1 ISZERO PUSH2 0xA3C JUMPI POP DUP1 JUMPDEST SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xABE JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xABD JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xA65 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xACB SWAP2 SWAP1 PUSH2 0xACF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xAE8 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xAD0 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB17 DUP3 PUSH2 0xAEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB27 DUP2 PUSH2 0xB0C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB42 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB1E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6F DUP2 PUSH2 0xB5C JUMP JUMPDEST DUP2 EQ PUSH2 0xB7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8C DUP2 PUSH2 0xB66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xBE0 DUP3 PUSH2 0xB97 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xBFF JUMPI PUSH2 0xBFE PUSH2 0xBA8 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC12 PUSH2 0xB48 JUMP JUMPDEST SWAP1 POP PUSH2 0xC1E DUP3 DUP3 PUSH2 0xBD7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC3E JUMPI PUSH2 0xC3D PUSH2 0xBA8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC67 PUSH2 0xC62 DUP5 PUSH2 0xC23 JUMP JUMPDEST PUSH2 0xC08 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xC8A JUMPI PUSH2 0xC89 PUSH2 0xC4F JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCB3 JUMPI DUP1 PUSH2 0xC9F DUP9 DUP3 PUSH2 0xB7D JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC8C JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xCD2 JUMPI PUSH2 0xCD1 PUSH2 0xB92 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xCE2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xC54 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD02 JUMPI PUSH2 0xD01 PUSH2 0xB52 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD10 DUP6 DUP3 DUP7 ADD PUSH2 0xB7D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD31 JUMPI PUSH2 0xD30 PUSH2 0xB57 JUMP JUMPDEST JUMPDEST PUSH2 0xD3D DUP6 DUP3 DUP7 ADD PUSH2 0xCBD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD60 DUP2 PUSH2 0xD47 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD7B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD57 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD98 DUP2 PUSH2 0xD81 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDB3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xDD4 JUMPI PUSH2 0xDD3 PUSH2 0xB92 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDF1 JUMPI PUSH2 0xDF0 PUSH2 0xDB9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xE0D JUMPI PUSH2 0xE0C PUSH2 0xC4F JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE2B JUMPI PUSH2 0xE2A PUSH2 0xB52 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE49 JUMPI PUSH2 0xE48 PUSH2 0xB57 JUMP JUMPDEST JUMPDEST PUSH2 0xE55 DUP6 DUP3 DUP7 ADD PUSH2 0xDBE JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE76 DUP2 PUSH2 0xE61 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xE9B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xECD DUP3 PUSH2 0xE7C JUMP JUMPDEST PUSH2 0xED7 DUP2 DUP6 PUSH2 0xE87 JUMP JUMPDEST SWAP4 POP PUSH2 0xEE7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xE98 JUMP JUMPDEST PUSH2 0xEF0 DUP2 PUSH2 0xB97 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF10 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xE6D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xF22 DUP2 DUP5 PUSH2 0xEC2 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0xF6B JUMPI PUSH2 0xF6A PUSH2 0xF2B JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0xF7C DUP3 PUSH2 0xF5A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF8C DUP3 PUSH2 0xF6E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9C DUP2 PUSH2 0xF81 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFB7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF93 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFD3 JUMPI PUSH2 0xFD2 PUSH2 0xB52 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFE1 DUP5 DUP3 DUP6 ADD PUSH2 0xB7D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFF5 DUP3 PUSH2 0xAEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1005 DUP2 PUSH2 0xFEA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1020 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x102F DUP2 PUSH2 0xB5C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x104A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1026 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x52616666656C206973206E6F74206F70656E0000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1097 PUSH1 0x12 DUP4 PUSH2 0x1050 JUMP JUMPDEST SWAP2 POP PUSH2 0x10A2 DUP3 PUSH2 0x1061 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10C6 DUP2 PUSH2 0x108A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x10E2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xB1E JUMP JUMPDEST PUSH2 0x10EF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB1E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x110B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1026 JUMP JUMPDEST PUSH2 0x1118 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1026 JUMP JUMPDEST PUSH2 0x1125 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1026 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1140 DUP2 PUSH2 0x112D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1163 DUP2 PUSH2 0x1146 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x117E PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1137 JUMP JUMPDEST PUSH2 0x118B PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x115A JUMP JUMPDEST PUSH2 0x1198 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xD8F JUMP JUMPDEST PUSH2 0x11A5 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xD57 JUMP JUMPDEST PUSH2 0x11B2 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xD57 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x11CB DUP2 PUSH2 0xB66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11E7 JUMPI PUSH2 0x11E6 PUSH2 0xB52 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11F5 DUP5 DUP3 DUP6 ADD PUSH2 0x11BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1267 DUP3 PUSH2 0xB5C JUMP JUMPDEST SWAP2 POP PUSH2 0x1272 DUP4 PUSH2 0xB5C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1282 JUMPI PUSH2 0x1281 PUSH2 0x122D JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A8 PUSH1 0x0 DUP4 PUSH2 0x128D JUMP JUMPDEST SWAP2 POP PUSH2 0x12B3 DUP3 PUSH2 0x1298 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C9 DUP3 PUSH2 0x129B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1309 PUSH1 0xF DUP4 PUSH2 0x1050 JUMP JUMPDEST SWAP2 POP PUSH2 0x1314 DUP3 PUSH2 0x12D3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1338 DUP2 PUSH2 0x12FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1379 DUP3 PUSH2 0xB5C JUMP JUMPDEST SWAP2 POP PUSH2 0x1384 DUP4 PUSH2 0xB5C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x139C JUMPI PUSH2 0x139B PUSH2 0x133F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 SMOD KECCAK256 0x2E SWAP8 0xAC 0x23 DELEGATECALL 0xA9 DUP13 GT CALLDATACOPY 0xF DELEGATECALL LOG2 SWAP1 0xBF 0xD0 0xE4 0xFB 0xC2 SWAP2 SGT PUSH10 0xA9F37653D005064F6473 PUSH16 0x6C634300081C00330000000000000000 ","sourceMap":"505:4335:3:-:0;;;903:6;857:52;;;;;;;;;1372:597;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1601:14;5700:15:1;5683:32;;;;;;;;;;5640:80;1640:8:3::1;1627:21;;;;::::0;::::1;1703:14;1658:60;;;;;;;;::::0;::::1;1740:7;1728:19;;;;::::0;::::1;1776:14;1757:33;;;;;;;;::::0;::::1;1821:16;1800:37;;;;;;;;::::0;::::1;1863:16;1847:13;;:32;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1907:15;1889;:33;;;;1945:8;1932:21;;;;::::0;::::1;1372:597:::0;;;;;;505:4335;;88:117:4;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:126::-;731:7;771:42;764:5;760:54;749:65;;694:126;;;:::o;826:96::-;863:7;892:24;910:5;892:24;:::i;:::-;881:35;;826:96;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:77::-;1242:7;1271:5;1260:16;;1205:77;;;:::o;1288:122::-;1361:24;1379:5;1361:24;:::i;:::-;1354:5;1351:35;1341:63;;1400:1;1397;1390:12;1341:63;1288:122;:::o;1416:143::-;1473:5;1504:6;1498:13;1489:22;;1520:33;1547:5;1520:33;:::i;:::-;1416:143;;;;:::o;1565:101::-;1601:7;1641:18;1634:5;1630:30;1619:41;;1565:101;;;:::o;1672:120::-;1744:23;1761:5;1744:23;:::i;:::-;1737:5;1734:34;1724:62;;1782:1;1779;1772:12;1724:62;1672:120;:::o;1798:141::-;1854:5;1885:6;1879:13;1870:22;;1901:32;1927:5;1901:32;:::i;:::-;1798:141;;;;:::o;1945:93::-;1981:7;2021:10;2014:5;2010:22;1999:33;;1945:93;;;:::o;2044:120::-;2116:23;2133:5;2116:23;:::i;:::-;2109:5;2106:34;2096:62;;2154:1;2151;2144:12;2096:62;2044:120;:::o;2170:141::-;2226:5;2257:6;2251:13;2242:22;;2273:32;2299:5;2273:32;:::i;:::-;2170:141;;;;:::o;2317:1130::-;2430:6;2438;2446;2454;2462;2470;2519:3;2507:9;2498:7;2494:23;2490:33;2487:120;;;2526:79;;:::i;:::-;2487:120;2646:1;2671:64;2727:7;2718:6;2707:9;2703:22;2671:64;:::i;:::-;2661:74;;2617:128;2784:2;2810:64;2866:7;2857:6;2846:9;2842:22;2810:64;:::i;:::-;2800:74;;2755:129;2923:2;2949:64;3005:7;2996:6;2985:9;2981:22;2949:64;:::i;:::-;2939:74;;2894:129;3062:2;3088:63;3143:7;3134:6;3123:9;3119:22;3088:63;:::i;:::-;3078:73;;3033:128;3200:3;3227:63;3282:7;3273:6;3262:9;3258:22;3227:63;:::i;:::-;3217:73;;3171:129;3339:3;3366:64;3422:7;3413:6;3402:9;3398:22;3366:64;:::i;:::-;3356:74;;3310:130;2317:1130;;;;;;;;:::o;3453:180::-;3501:77;3498:1;3491:88;3598:4;3595:1;3588:15;3622:4;3619:1;3612:15;505:4335:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@chaecUpkeepLogic_385":{"entryPoint":2461,"id":385,"parameterSlots":0,"returnSlots":1},"@checkUpkeep_400":{"entryPoint":1681,"id":400,"parameterSlots":2,"returnSlots":2},"@enterRaffel_331":{"entryPoint":622,"id":331,"parameterSlots":0,"returnSlots":0},"@fulfillRandomWords_521":{"entryPoint":1836,"id":521,"parameterSlots":2,"returnSlots":0},"@gertRecentWinner_549":{"entryPoint":580,"id":549,"parameterSlots":0,"returnSlots":1},"@getEntryFee_529":{"entryPoint":1796,"id":529,"parameterSlots":0,"returnSlots":1},"@getNumWords_566":{"entryPoint":1190,"id":566,"parameterSlots":0,"returnSlots":1},"@getPlayer_541":{"entryPoint":1725,"id":541,"parameterSlots":1,"returnSlots":1},"@getRaffelState_558":{"entryPoint":1702,"id":558,"parameterSlots":0,"returnSlots":1},"@getRequestConfirmations_574":{"entryPoint":1199,"id":574,"parameterSlots":0,"returnSlots":1},"@performUpKeep_445":{"entryPoint":1208,"id":445,"parameterSlots":2,"returnSlots":0},"@rawFulfillRandomWords_75":{"entryPoint":998,"id":75,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":3156,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":3261,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":3518,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_uint256":{"entryPoint":2941,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":4540,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_calldata_ptr":{"entryPoint":3604,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":4029,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":4561,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":3307,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_payable_to_t_address_payable_fromStack":{"entryPoint":4092,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2846,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3693,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":4407,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":3778,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_enum$_RaffelState_$226_to_t_uint8_fromStack":{"entryPoint":3987,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_1c0f13643c7a49cb913e5f88b455a6e8d1710e21557a0739c837b716380e00f8_to_t_string_memory_ptr_fromStack":{"entryPoint":4234,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack":{"entryPoint":4860,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4763,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint16_to_t_uint16_fromStack":{"entryPoint":3471,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":4134,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":3415,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":4442,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":4798,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2861,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed":{"entryPoint":4107,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":4301,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":3835,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed":{"entryPoint":4457,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_enum$_RaffelState_$226__to_t_uint8__fromStack_reversed":{"entryPoint":4002,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1c0f13643c7a49cb913e5f88b455a6e8d1710e21557a0739c837b716380e00f8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4269,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4895,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed":{"entryPoint":3486,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":4149,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":4342,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":3430,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":3080,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":2888,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":3107,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":3708,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":3719,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4749,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":4176,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":4974,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2828,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":4074,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3681,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":4397,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_RaffelState_$226":{"entryPoint":3950,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":3457,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2796,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2908,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":3399,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":4422,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_enum$_RaffelState_$226_to_t_uint8":{"entryPoint":3969,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":3736,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":3031,"id":null,"parameterSlots":2,"returnSlots":0},"mod_t_uint256":{"entryPoint":4700,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":4927,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":4653,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":3883,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":4606,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2984,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":3513,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":2962,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":3151,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":2903,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2898,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2967,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_1c0f13643c7a49cb913e5f88b455a6e8d1710e21557a0739c837b716380e00f8":{"entryPoint":4193,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51":{"entryPoint":4819,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":4760,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_t_enum$_RaffelState_$226":{"entryPoint":3930,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2918,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:16739:4","nodeType":"YulBlock","src":"0:16739:4","statements":[{"body":{"nativeSrc":"52:81:4","nodeType":"YulBlock","src":"52:81:4","statements":[{"nativeSrc":"62:65:4","nodeType":"YulAssignment","src":"62:65:4","value":{"arguments":[{"name":"value","nativeSrc":"77:5:4","nodeType":"YulIdentifier","src":"77:5:4"},{"kind":"number","nativeSrc":"84:42:4","nodeType":"YulLiteral","src":"84:42:4","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"73:3:4","nodeType":"YulIdentifier","src":"73:3:4"},"nativeSrc":"73:54:4","nodeType":"YulFunctionCall","src":"73:54:4"},"variableNames":[{"name":"cleaned","nativeSrc":"62:7:4","nodeType":"YulIdentifier","src":"62:7:4"}]}]},"name":"cleanup_t_uint160","nativeSrc":"7:126:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"34:5:4","nodeType":"YulTypedName","src":"34:5:4","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"44:7:4","nodeType":"YulTypedName","src":"44:7:4","type":""}],"src":"7:126:4"},{"body":{"nativeSrc":"184:51:4","nodeType":"YulBlock","src":"184:51:4","statements":[{"nativeSrc":"194:35:4","nodeType":"YulAssignment","src":"194:35:4","value":{"arguments":[{"name":"value","nativeSrc":"223:5:4","nodeType":"YulIdentifier","src":"223:5:4"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"205:17:4","nodeType":"YulIdentifier","src":"205:17:4"},"nativeSrc":"205:24:4","nodeType":"YulFunctionCall","src":"205:24:4"},"variableNames":[{"name":"cleaned","nativeSrc":"194:7:4","nodeType":"YulIdentifier","src":"194:7:4"}]}]},"name":"cleanup_t_address","nativeSrc":"139:96:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"166:5:4","nodeType":"YulTypedName","src":"166:5:4","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"176:7:4","nodeType":"YulTypedName","src":"176:7:4","type":""}],"src":"139:96:4"},{"body":{"nativeSrc":"306:53:4","nodeType":"YulBlock","src":"306:53:4","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"323:3:4","nodeType":"YulIdentifier","src":"323:3:4"},{"arguments":[{"name":"value","nativeSrc":"346:5:4","nodeType":"YulIdentifier","src":"346:5:4"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"328:17:4","nodeType":"YulIdentifier","src":"328:17:4"},"nativeSrc":"328:24:4","nodeType":"YulFunctionCall","src":"328:24:4"}],"functionName":{"name":"mstore","nativeSrc":"316:6:4","nodeType":"YulIdentifier","src":"316:6:4"},"nativeSrc":"316:37:4","nodeType":"YulFunctionCall","src":"316:37:4"},"nativeSrc":"316:37:4","nodeType":"YulExpressionStatement","src":"316:37:4"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"241:118:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"294:5:4","nodeType":"YulTypedName","src":"294:5:4","type":""},{"name":"pos","nativeSrc":"301:3:4","nodeType":"YulTypedName","src":"301:3:4","type":""}],"src":"241:118:4"},{"body":{"nativeSrc":"463:124:4","nodeType":"YulBlock","src":"463:124:4","statements":[{"nativeSrc":"473:26:4","nodeType":"YulAssignment","src":"473:26:4","value":{"arguments":[{"name":"headStart","nativeSrc":"485:9:4","nodeType":"YulIdentifier","src":"485:9:4"},{"kind":"number","nativeSrc":"496:2:4","nodeType":"YulLiteral","src":"496:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"481:3:4","nodeType":"YulIdentifier","src":"481:3:4"},"nativeSrc":"481:18:4","nodeType":"YulFunctionCall","src":"481:18:4"},"variableNames":[{"name":"tail","nativeSrc":"473:4:4","nodeType":"YulIdentifier","src":"473:4:4"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"553:6:4","nodeType":"YulIdentifier","src":"553:6:4"},{"arguments":[{"name":"headStart","nativeSrc":"566:9:4","nodeType":"YulIdentifier","src":"566:9:4"},{"kind":"number","nativeSrc":"577:1:4","nodeType":"YulLiteral","src":"577:1:4","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"562:3:4","nodeType":"YulIdentifier","src":"562:3:4"},"nativeSrc":"562:17:4","nodeType":"YulFunctionCall","src":"562:17:4"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"509:43:4","nodeType":"YulIdentifier","src":"509:43:4"},"nativeSrc":"509:71:4","nodeType":"YulFunctionCall","src":"509:71:4"},"nativeSrc":"509:71:4","nodeType":"YulExpressionStatement","src":"509:71:4"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"365:222:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"435:9:4","nodeType":"YulTypedName","src":"435:9:4","type":""},{"name":"value0","nativeSrc":"447:6:4","nodeType":"YulTypedName","src":"447:6:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"458:4:4","nodeType":"YulTypedName","src":"458:4:4","type":""}],"src":"365:222:4"},{"body":{"nativeSrc":"633:35:4","nodeType":"YulBlock","src":"633:35:4","statements":[{"nativeSrc":"643:19:4","nodeType":"YulAssignment","src":"643:19:4","value":{"arguments":[{"kind":"number","nativeSrc":"659:2:4","nodeType":"YulLiteral","src":"659:2:4","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"653:5:4","nodeType":"YulIdentifier","src":"653:5:4"},"nativeSrc":"653:9:4","nodeType":"YulFunctionCall","src":"653:9:4"},"variableNames":[{"name":"memPtr","nativeSrc":"643:6:4","nodeType":"YulIdentifier","src":"643:6:4"}]}]},"name":"allocate_unbounded","nativeSrc":"593:75:4","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"626:6:4","nodeType":"YulTypedName","src":"626:6:4","type":""}],"src":"593:75:4"},{"body":{"nativeSrc":"763:28:4","nodeType":"YulBlock","src":"763:28:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"780:1:4","nodeType":"YulLiteral","src":"780:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"783:1:4","nodeType":"YulLiteral","src":"783:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"773:6:4","nodeType":"YulIdentifier","src":"773:6:4"},"nativeSrc":"773:12:4","nodeType":"YulFunctionCall","src":"773:12:4"},"nativeSrc":"773:12:4","nodeType":"YulExpressionStatement","src":"773:12:4"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"674:117:4","nodeType":"YulFunctionDefinition","src":"674:117:4"},{"body":{"nativeSrc":"886:28:4","nodeType":"YulBlock","src":"886:28:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"903:1:4","nodeType":"YulLiteral","src":"903:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"906:1:4","nodeType":"YulLiteral","src":"906:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"896:6:4","nodeType":"YulIdentifier","src":"896:6:4"},"nativeSrc":"896:12:4","nodeType":"YulFunctionCall","src":"896:12:4"},"nativeSrc":"896:12:4","nodeType":"YulExpressionStatement","src":"896:12:4"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"797:117:4","nodeType":"YulFunctionDefinition","src":"797:117:4"},{"body":{"nativeSrc":"965:32:4","nodeType":"YulBlock","src":"965:32:4","statements":[{"nativeSrc":"975:16:4","nodeType":"YulAssignment","src":"975:16:4","value":{"name":"value","nativeSrc":"986:5:4","nodeType":"YulIdentifier","src":"986:5:4"},"variableNames":[{"name":"cleaned","nativeSrc":"975:7:4","nodeType":"YulIdentifier","src":"975:7:4"}]}]},"name":"cleanup_t_uint256","nativeSrc":"920:77:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"947:5:4","nodeType":"YulTypedName","src":"947:5:4","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"957:7:4","nodeType":"YulTypedName","src":"957:7:4","type":""}],"src":"920:77:4"},{"body":{"nativeSrc":"1046:79:4","nodeType":"YulBlock","src":"1046:79:4","statements":[{"body":{"nativeSrc":"1103:16:4","nodeType":"YulBlock","src":"1103:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1112:1:4","nodeType":"YulLiteral","src":"1112:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"1115:1:4","nodeType":"YulLiteral","src":"1115:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1105:6:4","nodeType":"YulIdentifier","src":"1105:6:4"},"nativeSrc":"1105:12:4","nodeType":"YulFunctionCall","src":"1105:12:4"},"nativeSrc":"1105:12:4","nodeType":"YulExpressionStatement","src":"1105:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1069:5:4","nodeType":"YulIdentifier","src":"1069:5:4"},{"arguments":[{"name":"value","nativeSrc":"1094:5:4","nodeType":"YulIdentifier","src":"1094:5:4"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1076:17:4","nodeType":"YulIdentifier","src":"1076:17:4"},"nativeSrc":"1076:24:4","nodeType":"YulFunctionCall","src":"1076:24:4"}],"functionName":{"name":"eq","nativeSrc":"1066:2:4","nodeType":"YulIdentifier","src":"1066:2:4"},"nativeSrc":"1066:35:4","nodeType":"YulFunctionCall","src":"1066:35:4"}],"functionName":{"name":"iszero","nativeSrc":"1059:6:4","nodeType":"YulIdentifier","src":"1059:6:4"},"nativeSrc":"1059:43:4","nodeType":"YulFunctionCall","src":"1059:43:4"},"nativeSrc":"1056:63:4","nodeType":"YulIf","src":"1056:63:4"}]},"name":"validator_revert_t_uint256","nativeSrc":"1003:122:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1039:5:4","nodeType":"YulTypedName","src":"1039:5:4","type":""}],"src":"1003:122:4"},{"body":{"nativeSrc":"1183:87:4","nodeType":"YulBlock","src":"1183:87:4","statements":[{"nativeSrc":"1193:29:4","nodeType":"YulAssignment","src":"1193:29:4","value":{"arguments":[{"name":"offset","nativeSrc":"1215:6:4","nodeType":"YulIdentifier","src":"1215:6:4"}],"functionName":{"name":"calldataload","nativeSrc":"1202:12:4","nodeType":"YulIdentifier","src":"1202:12:4"},"nativeSrc":"1202:20:4","nodeType":"YulFunctionCall","src":"1202:20:4"},"variableNames":[{"name":"value","nativeSrc":"1193:5:4","nodeType":"YulIdentifier","src":"1193:5:4"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1258:5:4","nodeType":"YulIdentifier","src":"1258:5:4"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"1231:26:4","nodeType":"YulIdentifier","src":"1231:26:4"},"nativeSrc":"1231:33:4","nodeType":"YulFunctionCall","src":"1231:33:4"},"nativeSrc":"1231:33:4","nodeType":"YulExpressionStatement","src":"1231:33:4"}]},"name":"abi_decode_t_uint256","nativeSrc":"1131:139:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1161:6:4","nodeType":"YulTypedName","src":"1161:6:4","type":""},{"name":"end","nativeSrc":"1169:3:4","nodeType":"YulTypedName","src":"1169:3:4","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1177:5:4","nodeType":"YulTypedName","src":"1177:5:4","type":""}],"src":"1131:139:4"},{"body":{"nativeSrc":"1365:28:4","nodeType":"YulBlock","src":"1365:28:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1382:1:4","nodeType":"YulLiteral","src":"1382:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"1385:1:4","nodeType":"YulLiteral","src":"1385:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1375:6:4","nodeType":"YulIdentifier","src":"1375:6:4"},"nativeSrc":"1375:12:4","nodeType":"YulFunctionCall","src":"1375:12:4"},"nativeSrc":"1375:12:4","nodeType":"YulExpressionStatement","src":"1375:12:4"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"1276:117:4","nodeType":"YulFunctionDefinition","src":"1276:117:4"},{"body":{"nativeSrc":"1447:54:4","nodeType":"YulBlock","src":"1447:54:4","statements":[{"nativeSrc":"1457:38:4","nodeType":"YulAssignment","src":"1457:38:4","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1475:5:4","nodeType":"YulIdentifier","src":"1475:5:4"},{"kind":"number","nativeSrc":"1482:2:4","nodeType":"YulLiteral","src":"1482:2:4","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1471:3:4","nodeType":"YulIdentifier","src":"1471:3:4"},"nativeSrc":"1471:14:4","nodeType":"YulFunctionCall","src":"1471:14:4"},{"arguments":[{"kind":"number","nativeSrc":"1491:2:4","nodeType":"YulLiteral","src":"1491:2:4","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1487:3:4","nodeType":"YulIdentifier","src":"1487:3:4"},"nativeSrc":"1487:7:4","nodeType":"YulFunctionCall","src":"1487:7:4"}],"functionName":{"name":"and","nativeSrc":"1467:3:4","nodeType":"YulIdentifier","src":"1467:3:4"},"nativeSrc":"1467:28:4","nodeType":"YulFunctionCall","src":"1467:28:4"},"variableNames":[{"name":"result","nativeSrc":"1457:6:4","nodeType":"YulIdentifier","src":"1457:6:4"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"1399:102:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1430:5:4","nodeType":"YulTypedName","src":"1430:5:4","type":""}],"returnVariables":[{"name":"result","nativeSrc":"1440:6:4","nodeType":"YulTypedName","src":"1440:6:4","type":""}],"src":"1399:102:4"},{"body":{"nativeSrc":"1535:152:4","nodeType":"YulBlock","src":"1535:152:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1552:1:4","nodeType":"YulLiteral","src":"1552:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"1555:77:4","nodeType":"YulLiteral","src":"1555:77:4","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1545:6:4","nodeType":"YulIdentifier","src":"1545:6:4"},"nativeSrc":"1545:88:4","nodeType":"YulFunctionCall","src":"1545:88:4"},"nativeSrc":"1545:88:4","nodeType":"YulExpressionStatement","src":"1545:88:4"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1649:1:4","nodeType":"YulLiteral","src":"1649:1:4","type":"","value":"4"},{"kind":"number","nativeSrc":"1652:4:4","nodeType":"YulLiteral","src":"1652:4:4","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1642:6:4","nodeType":"YulIdentifier","src":"1642:6:4"},"nativeSrc":"1642:15:4","nodeType":"YulFunctionCall","src":"1642:15:4"},"nativeSrc":"1642:15:4","nodeType":"YulExpressionStatement","src":"1642:15:4"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1673:1:4","nodeType":"YulLiteral","src":"1673:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"1676:4:4","nodeType":"YulLiteral","src":"1676:4:4","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1666:6:4","nodeType":"YulIdentifier","src":"1666:6:4"},"nativeSrc":"1666:15:4","nodeType":"YulFunctionCall","src":"1666:15:4"},"nativeSrc":"1666:15:4","nodeType":"YulExpressionStatement","src":"1666:15:4"}]},"name":"panic_error_0x41","nativeSrc":"1507:180:4","nodeType":"YulFunctionDefinition","src":"1507:180:4"},{"body":{"nativeSrc":"1736:238:4","nodeType":"YulBlock","src":"1736:238:4","statements":[{"nativeSrc":"1746:58:4","nodeType":"YulVariableDeclaration","src":"1746:58:4","value":{"arguments":[{"name":"memPtr","nativeSrc":"1768:6:4","nodeType":"YulIdentifier","src":"1768:6:4"},{"arguments":[{"name":"size","nativeSrc":"1798:4:4","nodeType":"YulIdentifier","src":"1798:4:4"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"1776:21:4","nodeType":"YulIdentifier","src":"1776:21:4"},"nativeSrc":"1776:27:4","nodeType":"YulFunctionCall","src":"1776:27:4"}],"functionName":{"name":"add","nativeSrc":"1764:3:4","nodeType":"YulIdentifier","src":"1764:3:4"},"nativeSrc":"1764:40:4","nodeType":"YulFunctionCall","src":"1764:40:4"},"variables":[{"name":"newFreePtr","nativeSrc":"1750:10:4","nodeType":"YulTypedName","src":"1750:10:4","type":""}]},{"body":{"nativeSrc":"1915:22:4","nodeType":"YulBlock","src":"1915:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1917:16:4","nodeType":"YulIdentifier","src":"1917:16:4"},"nativeSrc":"1917:18:4","nodeType":"YulFunctionCall","src":"1917:18:4"},"nativeSrc":"1917:18:4","nodeType":"YulExpressionStatement","src":"1917:18:4"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"1858:10:4","nodeType":"YulIdentifier","src":"1858:10:4"},{"kind":"number","nativeSrc":"1870:18:4","nodeType":"YulLiteral","src":"1870:18:4","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1855:2:4","nodeType":"YulIdentifier","src":"1855:2:4"},"nativeSrc":"1855:34:4","nodeType":"YulFunctionCall","src":"1855:34:4"},{"arguments":[{"name":"newFreePtr","nativeSrc":"1894:10:4","nodeType":"YulIdentifier","src":"1894:10:4"},{"name":"memPtr","nativeSrc":"1906:6:4","nodeType":"YulIdentifier","src":"1906:6:4"}],"functionName":{"name":"lt","nativeSrc":"1891:2:4","nodeType":"YulIdentifier","src":"1891:2:4"},"nativeSrc":"1891:22:4","nodeType":"YulFunctionCall","src":"1891:22:4"}],"functionName":{"name":"or","nativeSrc":"1852:2:4","nodeType":"YulIdentifier","src":"1852:2:4"},"nativeSrc":"1852:62:4","nodeType":"YulFunctionCall","src":"1852:62:4"},"nativeSrc":"1849:88:4","nodeType":"YulIf","src":"1849:88:4"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1953:2:4","nodeType":"YulLiteral","src":"1953:2:4","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"1957:10:4","nodeType":"YulIdentifier","src":"1957:10:4"}],"functionName":{"name":"mstore","nativeSrc":"1946:6:4","nodeType":"YulIdentifier","src":"1946:6:4"},"nativeSrc":"1946:22:4","nodeType":"YulFunctionCall","src":"1946:22:4"},"nativeSrc":"1946:22:4","nodeType":"YulExpressionStatement","src":"1946:22:4"}]},"name":"finalize_allocation","nativeSrc":"1693:281:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"1722:6:4","nodeType":"YulTypedName","src":"1722:6:4","type":""},{"name":"size","nativeSrc":"1730:4:4","nodeType":"YulTypedName","src":"1730:4:4","type":""}],"src":"1693:281:4"},{"body":{"nativeSrc":"2021:88:4","nodeType":"YulBlock","src":"2021:88:4","statements":[{"nativeSrc":"2031:30:4","nodeType":"YulAssignment","src":"2031:30:4","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"2041:18:4","nodeType":"YulIdentifier","src":"2041:18:4"},"nativeSrc":"2041:20:4","nodeType":"YulFunctionCall","src":"2041:20:4"},"variableNames":[{"name":"memPtr","nativeSrc":"2031:6:4","nodeType":"YulIdentifier","src":"2031:6:4"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"2090:6:4","nodeType":"YulIdentifier","src":"2090:6:4"},{"name":"size","nativeSrc":"2098:4:4","nodeType":"YulIdentifier","src":"2098:4:4"}],"functionName":{"name":"finalize_allocation","nativeSrc":"2070:19:4","nodeType":"YulIdentifier","src":"2070:19:4"},"nativeSrc":"2070:33:4","nodeType":"YulFunctionCall","src":"2070:33:4"},"nativeSrc":"2070:33:4","nodeType":"YulExpressionStatement","src":"2070:33:4"}]},"name":"allocate_memory","nativeSrc":"1980:129:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"2005:4:4","nodeType":"YulTypedName","src":"2005:4:4","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"2014:6:4","nodeType":"YulTypedName","src":"2014:6:4","type":""}],"src":"1980:129:4"},{"body":{"nativeSrc":"2197:229:4","nodeType":"YulBlock","src":"2197:229:4","statements":[{"body":{"nativeSrc":"2302:22:4","nodeType":"YulBlock","src":"2302:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"2304:16:4","nodeType":"YulIdentifier","src":"2304:16:4"},"nativeSrc":"2304:18:4","nodeType":"YulFunctionCall","src":"2304:18:4"},"nativeSrc":"2304:18:4","nodeType":"YulExpressionStatement","src":"2304:18:4"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"2274:6:4","nodeType":"YulIdentifier","src":"2274:6:4"},{"kind":"number","nativeSrc":"2282:18:4","nodeType":"YulLiteral","src":"2282:18:4","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"2271:2:4","nodeType":"YulIdentifier","src":"2271:2:4"},"nativeSrc":"2271:30:4","nodeType":"YulFunctionCall","src":"2271:30:4"},"nativeSrc":"2268:56:4","nodeType":"YulIf","src":"2268:56:4"},{"nativeSrc":"2334:25:4","nodeType":"YulAssignment","src":"2334:25:4","value":{"arguments":[{"name":"length","nativeSrc":"2346:6:4","nodeType":"YulIdentifier","src":"2346:6:4"},{"kind":"number","nativeSrc":"2354:4:4","nodeType":"YulLiteral","src":"2354:4:4","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"2342:3:4","nodeType":"YulIdentifier","src":"2342:3:4"},"nativeSrc":"2342:17:4","nodeType":"YulFunctionCall","src":"2342:17:4"},"variableNames":[{"name":"size","nativeSrc":"2334:4:4","nodeType":"YulIdentifier","src":"2334:4:4"}]},{"nativeSrc":"2396:23:4","nodeType":"YulAssignment","src":"2396:23:4","value":{"arguments":[{"name":"size","nativeSrc":"2408:4:4","nodeType":"YulIdentifier","src":"2408:4:4"},{"kind":"number","nativeSrc":"2414:4:4","nodeType":"YulLiteral","src":"2414:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2404:3:4","nodeType":"YulIdentifier","src":"2404:3:4"},"nativeSrc":"2404:15:4","nodeType":"YulFunctionCall","src":"2404:15:4"},"variableNames":[{"name":"size","nativeSrc":"2396:4:4","nodeType":"YulIdentifier","src":"2396:4:4"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"2115:311:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"2181:6:4","nodeType":"YulTypedName","src":"2181:6:4","type":""}],"returnVariables":[{"name":"size","nativeSrc":"2192:4:4","nodeType":"YulTypedName","src":"2192:4:4","type":""}],"src":"2115:311:4"},{"body":{"nativeSrc":"2521:28:4","nodeType":"YulBlock","src":"2521:28:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2538:1:4","nodeType":"YulLiteral","src":"2538:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"2541:1:4","nodeType":"YulLiteral","src":"2541:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2531:6:4","nodeType":"YulIdentifier","src":"2531:6:4"},"nativeSrc":"2531:12:4","nodeType":"YulFunctionCall","src":"2531:12:4"},"nativeSrc":"2531:12:4","nodeType":"YulExpressionStatement","src":"2531:12:4"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"2432:117:4","nodeType":"YulFunctionDefinition","src":"2432:117:4"},{"body":{"nativeSrc":"2674:608:4","nodeType":"YulBlock","src":"2674:608:4","statements":[{"nativeSrc":"2684:90:4","nodeType":"YulAssignment","src":"2684:90:4","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"2766:6:4","nodeType":"YulIdentifier","src":"2766:6:4"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"2709:56:4","nodeType":"YulIdentifier","src":"2709:56:4"},"nativeSrc":"2709:64:4","nodeType":"YulFunctionCall","src":"2709:64:4"}],"functionName":{"name":"allocate_memory","nativeSrc":"2693:15:4","nodeType":"YulIdentifier","src":"2693:15:4"},"nativeSrc":"2693:81:4","nodeType":"YulFunctionCall","src":"2693:81:4"},"variableNames":[{"name":"array","nativeSrc":"2684:5:4","nodeType":"YulIdentifier","src":"2684:5:4"}]},{"nativeSrc":"2783:16:4","nodeType":"YulVariableDeclaration","src":"2783:16:4","value":{"name":"array","nativeSrc":"2794:5:4","nodeType":"YulIdentifier","src":"2794:5:4"},"variables":[{"name":"dst","nativeSrc":"2787:3:4","nodeType":"YulTypedName","src":"2787:3:4","type":""}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"2816:5:4","nodeType":"YulIdentifier","src":"2816:5:4"},{"name":"length","nativeSrc":"2823:6:4","nodeType":"YulIdentifier","src":"2823:6:4"}],"functionName":{"name":"mstore","nativeSrc":"2809:6:4","nodeType":"YulIdentifier","src":"2809:6:4"},"nativeSrc":"2809:21:4","nodeType":"YulFunctionCall","src":"2809:21:4"},"nativeSrc":"2809:21:4","nodeType":"YulExpressionStatement","src":"2809:21:4"},{"nativeSrc":"2839:23:4","nodeType":"YulAssignment","src":"2839:23:4","value":{"arguments":[{"name":"array","nativeSrc":"2850:5:4","nodeType":"YulIdentifier","src":"2850:5:4"},{"kind":"number","nativeSrc":"2857:4:4","nodeType":"YulLiteral","src":"2857:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2846:3:4","nodeType":"YulIdentifier","src":"2846:3:4"},"nativeSrc":"2846:16:4","nodeType":"YulFunctionCall","src":"2846:16:4"},"variableNames":[{"name":"dst","nativeSrc":"2839:3:4","nodeType":"YulIdentifier","src":"2839:3:4"}]},{"nativeSrc":"2872:44:4","nodeType":"YulVariableDeclaration","src":"2872:44:4","value":{"arguments":[{"name":"offset","nativeSrc":"2890:6:4","nodeType":"YulIdentifier","src":"2890:6:4"},{"arguments":[{"name":"length","nativeSrc":"2902:6:4","nodeType":"YulIdentifier","src":"2902:6:4"},{"kind":"number","nativeSrc":"2910:4:4","nodeType":"YulLiteral","src":"2910:4:4","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"2898:3:4","nodeType":"YulIdentifier","src":"2898:3:4"},"nativeSrc":"2898:17:4","nodeType":"YulFunctionCall","src":"2898:17:4"}],"functionName":{"name":"add","nativeSrc":"2886:3:4","nodeType":"YulIdentifier","src":"2886:3:4"},"nativeSrc":"2886:30:4","nodeType":"YulFunctionCall","src":"2886:30:4"},"variables":[{"name":"srcEnd","nativeSrc":"2876:6:4","nodeType":"YulTypedName","src":"2876:6:4","type":""}]},{"body":{"nativeSrc":"2944:103:4","nodeType":"YulBlock","src":"2944:103:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"2958:77:4","nodeType":"YulIdentifier","src":"2958:77:4"},"nativeSrc":"2958:79:4","nodeType":"YulFunctionCall","src":"2958:79:4"},"nativeSrc":"2958:79:4","nodeType":"YulExpressionStatement","src":"2958:79:4"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"2931:6:4","nodeType":"YulIdentifier","src":"2931:6:4"},{"name":"end","nativeSrc":"2939:3:4","nodeType":"YulIdentifier","src":"2939:3:4"}],"functionName":{"name":"gt","nativeSrc":"2928:2:4","nodeType":"YulIdentifier","src":"2928:2:4"},"nativeSrc":"2928:15:4","nodeType":"YulFunctionCall","src":"2928:15:4"},"nativeSrc":"2925:122:4","nodeType":"YulIf","src":"2925:122:4"},{"body":{"nativeSrc":"3132:144:4","nodeType":"YulBlock","src":"3132:144:4","statements":[{"nativeSrc":"3147:21:4","nodeType":"YulVariableDeclaration","src":"3147:21:4","value":{"name":"src","nativeSrc":"3165:3:4","nodeType":"YulIdentifier","src":"3165:3:4"},"variables":[{"name":"elementPos","nativeSrc":"3151:10:4","nodeType":"YulTypedName","src":"3151:10:4","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"3189:3:4","nodeType":"YulIdentifier","src":"3189:3:4"},{"arguments":[{"name":"elementPos","nativeSrc":"3215:10:4","nodeType":"YulIdentifier","src":"3215:10:4"},{"name":"end","nativeSrc":"3227:3:4","nodeType":"YulIdentifier","src":"3227:3:4"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"3194:20:4","nodeType":"YulIdentifier","src":"3194:20:4"},"nativeSrc":"3194:37:4","nodeType":"YulFunctionCall","src":"3194:37:4"}],"functionName":{"name":"mstore","nativeSrc":"3182:6:4","nodeType":"YulIdentifier","src":"3182:6:4"},"nativeSrc":"3182:50:4","nodeType":"YulFunctionCall","src":"3182:50:4"},"nativeSrc":"3182:50:4","nodeType":"YulExpressionStatement","src":"3182:50:4"},{"nativeSrc":"3245:21:4","nodeType":"YulAssignment","src":"3245:21:4","value":{"arguments":[{"name":"dst","nativeSrc":"3256:3:4","nodeType":"YulIdentifier","src":"3256:3:4"},{"kind":"number","nativeSrc":"3261:4:4","nodeType":"YulLiteral","src":"3261:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3252:3:4","nodeType":"YulIdentifier","src":"3252:3:4"},"nativeSrc":"3252:14:4","nodeType":"YulFunctionCall","src":"3252:14:4"},"variableNames":[{"name":"dst","nativeSrc":"3245:3:4","nodeType":"YulIdentifier","src":"3245:3:4"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"3085:3:4","nodeType":"YulIdentifier","src":"3085:3:4"},{"name":"srcEnd","nativeSrc":"3090:6:4","nodeType":"YulIdentifier","src":"3090:6:4"}],"functionName":{"name":"lt","nativeSrc":"3082:2:4","nodeType":"YulIdentifier","src":"3082:2:4"},"nativeSrc":"3082:15:4","nodeType":"YulFunctionCall","src":"3082:15:4"},"nativeSrc":"3056:220:4","nodeType":"YulForLoop","post":{"nativeSrc":"3098:25:4","nodeType":"YulBlock","src":"3098:25:4","statements":[{"nativeSrc":"3100:21:4","nodeType":"YulAssignment","src":"3100:21:4","value":{"arguments":[{"name":"src","nativeSrc":"3111:3:4","nodeType":"YulIdentifier","src":"3111:3:4"},{"kind":"number","nativeSrc":"3116:4:4","nodeType":"YulLiteral","src":"3116:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3107:3:4","nodeType":"YulIdentifier","src":"3107:3:4"},"nativeSrc":"3107:14:4","nodeType":"YulFunctionCall","src":"3107:14:4"},"variableNames":[{"name":"src","nativeSrc":"3100:3:4","nodeType":"YulIdentifier","src":"3100:3:4"}]}]},"pre":{"nativeSrc":"3060:21:4","nodeType":"YulBlock","src":"3060:21:4","statements":[{"nativeSrc":"3062:17:4","nodeType":"YulVariableDeclaration","src":"3062:17:4","value":{"name":"offset","nativeSrc":"3073:6:4","nodeType":"YulIdentifier","src":"3073:6:4"},"variables":[{"name":"src","nativeSrc":"3066:3:4","nodeType":"YulTypedName","src":"3066:3:4","type":""}]}]},"src":"3056:220:4"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"2572:710:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2644:6:4","nodeType":"YulTypedName","src":"2644:6:4","type":""},{"name":"length","nativeSrc":"2652:6:4","nodeType":"YulTypedName","src":"2652:6:4","type":""},{"name":"end","nativeSrc":"2660:3:4","nodeType":"YulTypedName","src":"2660:3:4","type":""}],"returnVariables":[{"name":"array","nativeSrc":"2668:5:4","nodeType":"YulTypedName","src":"2668:5:4","type":""}],"src":"2572:710:4"},{"body":{"nativeSrc":"3382:293:4","nodeType":"YulBlock","src":"3382:293:4","statements":[{"body":{"nativeSrc":"3431:83:4","nodeType":"YulBlock","src":"3431:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"3433:77:4","nodeType":"YulIdentifier","src":"3433:77:4"},"nativeSrc":"3433:79:4","nodeType":"YulFunctionCall","src":"3433:79:4"},"nativeSrc":"3433:79:4","nodeType":"YulExpressionStatement","src":"3433:79:4"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"3410:6:4","nodeType":"YulIdentifier","src":"3410:6:4"},{"kind":"number","nativeSrc":"3418:4:4","nodeType":"YulLiteral","src":"3418:4:4","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"3406:3:4","nodeType":"YulIdentifier","src":"3406:3:4"},"nativeSrc":"3406:17:4","nodeType":"YulFunctionCall","src":"3406:17:4"},{"name":"end","nativeSrc":"3425:3:4","nodeType":"YulIdentifier","src":"3425:3:4"}],"functionName":{"name":"slt","nativeSrc":"3402:3:4","nodeType":"YulIdentifier","src":"3402:3:4"},"nativeSrc":"3402:27:4","nodeType":"YulFunctionCall","src":"3402:27:4"}],"functionName":{"name":"iszero","nativeSrc":"3395:6:4","nodeType":"YulIdentifier","src":"3395:6:4"},"nativeSrc":"3395:35:4","nodeType":"YulFunctionCall","src":"3395:35:4"},"nativeSrc":"3392:122:4","nodeType":"YulIf","src":"3392:122:4"},{"nativeSrc":"3523:34:4","nodeType":"YulVariableDeclaration","src":"3523:34:4","value":{"arguments":[{"name":"offset","nativeSrc":"3550:6:4","nodeType":"YulIdentifier","src":"3550:6:4"}],"functionName":{"name":"calldataload","nativeSrc":"3537:12:4","nodeType":"YulIdentifier","src":"3537:12:4"},"nativeSrc":"3537:20:4","nodeType":"YulFunctionCall","src":"3537:20:4"},"variables":[{"name":"length","nativeSrc":"3527:6:4","nodeType":"YulTypedName","src":"3527:6:4","type":""}]},{"nativeSrc":"3566:103:4","nodeType":"YulAssignment","src":"3566:103:4","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"3642:6:4","nodeType":"YulIdentifier","src":"3642:6:4"},{"kind":"number","nativeSrc":"3650:4:4","nodeType":"YulLiteral","src":"3650:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3638:3:4","nodeType":"YulIdentifier","src":"3638:3:4"},"nativeSrc":"3638:17:4","nodeType":"YulFunctionCall","src":"3638:17:4"},{"name":"length","nativeSrc":"3657:6:4","nodeType":"YulIdentifier","src":"3657:6:4"},{"name":"end","nativeSrc":"3665:3:4","nodeType":"YulIdentifier","src":"3665:3:4"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"3575:62:4","nodeType":"YulIdentifier","src":"3575:62:4"},"nativeSrc":"3575:94:4","nodeType":"YulFunctionCall","src":"3575:94:4"},"variableNames":[{"name":"array","nativeSrc":"3566:5:4","nodeType":"YulIdentifier","src":"3566:5:4"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"3305:370:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3360:6:4","nodeType":"YulTypedName","src":"3360:6:4","type":""},{"name":"end","nativeSrc":"3368:3:4","nodeType":"YulTypedName","src":"3368:3:4","type":""}],"returnVariables":[{"name":"array","nativeSrc":"3376:5:4","nodeType":"YulTypedName","src":"3376:5:4","type":""}],"src":"3305:370:4"},{"body":{"nativeSrc":"3789:576:4","nodeType":"YulBlock","src":"3789:576:4","statements":[{"body":{"nativeSrc":"3835:83:4","nodeType":"YulBlock","src":"3835:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3837:77:4","nodeType":"YulIdentifier","src":"3837:77:4"},"nativeSrc":"3837:79:4","nodeType":"YulFunctionCall","src":"3837:79:4"},"nativeSrc":"3837:79:4","nodeType":"YulExpressionStatement","src":"3837:79:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3810:7:4","nodeType":"YulIdentifier","src":"3810:7:4"},{"name":"headStart","nativeSrc":"3819:9:4","nodeType":"YulIdentifier","src":"3819:9:4"}],"functionName":{"name":"sub","nativeSrc":"3806:3:4","nodeType":"YulIdentifier","src":"3806:3:4"},"nativeSrc":"3806:23:4","nodeType":"YulFunctionCall","src":"3806:23:4"},{"kind":"number","nativeSrc":"3831:2:4","nodeType":"YulLiteral","src":"3831:2:4","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3802:3:4","nodeType":"YulIdentifier","src":"3802:3:4"},"nativeSrc":"3802:32:4","nodeType":"YulFunctionCall","src":"3802:32:4"},"nativeSrc":"3799:119:4","nodeType":"YulIf","src":"3799:119:4"},{"nativeSrc":"3928:117:4","nodeType":"YulBlock","src":"3928:117:4","statements":[{"nativeSrc":"3943:15:4","nodeType":"YulVariableDeclaration","src":"3943:15:4","value":{"kind":"number","nativeSrc":"3957:1:4","nodeType":"YulLiteral","src":"3957:1:4","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3947:6:4","nodeType":"YulTypedName","src":"3947:6:4","type":""}]},{"nativeSrc":"3972:63:4","nodeType":"YulAssignment","src":"3972:63:4","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4007:9:4","nodeType":"YulIdentifier","src":"4007:9:4"},{"name":"offset","nativeSrc":"4018:6:4","nodeType":"YulIdentifier","src":"4018:6:4"}],"functionName":{"name":"add","nativeSrc":"4003:3:4","nodeType":"YulIdentifier","src":"4003:3:4"},"nativeSrc":"4003:22:4","nodeType":"YulFunctionCall","src":"4003:22:4"},{"name":"dataEnd","nativeSrc":"4027:7:4","nodeType":"YulIdentifier","src":"4027:7:4"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"3982:20:4","nodeType":"YulIdentifier","src":"3982:20:4"},"nativeSrc":"3982:53:4","nodeType":"YulFunctionCall","src":"3982:53:4"},"variableNames":[{"name":"value0","nativeSrc":"3972:6:4","nodeType":"YulIdentifier","src":"3972:6:4"}]}]},{"nativeSrc":"4055:303:4","nodeType":"YulBlock","src":"4055:303:4","statements":[{"nativeSrc":"4070:46:4","nodeType":"YulVariableDeclaration","src":"4070:46:4","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4101:9:4","nodeType":"YulIdentifier","src":"4101:9:4"},{"kind":"number","nativeSrc":"4112:2:4","nodeType":"YulLiteral","src":"4112:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4097:3:4","nodeType":"YulIdentifier","src":"4097:3:4"},"nativeSrc":"4097:18:4","nodeType":"YulFunctionCall","src":"4097:18:4"}],"functionName":{"name":"calldataload","nativeSrc":"4084:12:4","nodeType":"YulIdentifier","src":"4084:12:4"},"nativeSrc":"4084:32:4","nodeType":"YulFunctionCall","src":"4084:32:4"},"variables":[{"name":"offset","nativeSrc":"4074:6:4","nodeType":"YulTypedName","src":"4074:6:4","type":""}]},{"body":{"nativeSrc":"4163:83:4","nodeType":"YulBlock","src":"4163:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"4165:77:4","nodeType":"YulIdentifier","src":"4165:77:4"},"nativeSrc":"4165:79:4","nodeType":"YulFunctionCall","src":"4165:79:4"},"nativeSrc":"4165:79:4","nodeType":"YulExpressionStatement","src":"4165:79:4"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"4135:6:4","nodeType":"YulIdentifier","src":"4135:6:4"},{"kind":"number","nativeSrc":"4143:18:4","nodeType":"YulLiteral","src":"4143:18:4","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4132:2:4","nodeType":"YulIdentifier","src":"4132:2:4"},"nativeSrc":"4132:30:4","nodeType":"YulFunctionCall","src":"4132:30:4"},"nativeSrc":"4129:117:4","nodeType":"YulIf","src":"4129:117:4"},{"nativeSrc":"4260:88:4","nodeType":"YulAssignment","src":"4260:88:4","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4320:9:4","nodeType":"YulIdentifier","src":"4320:9:4"},{"name":"offset","nativeSrc":"4331:6:4","nodeType":"YulIdentifier","src":"4331:6:4"}],"functionName":{"name":"add","nativeSrc":"4316:3:4","nodeType":"YulIdentifier","src":"4316:3:4"},"nativeSrc":"4316:22:4","nodeType":"YulFunctionCall","src":"4316:22:4"},{"name":"dataEnd","nativeSrc":"4340:7:4","nodeType":"YulIdentifier","src":"4340:7:4"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"4270:45:4","nodeType":"YulIdentifier","src":"4270:45:4"},"nativeSrc":"4270:78:4","nodeType":"YulFunctionCall","src":"4270:78:4"},"variableNames":[{"name":"value1","nativeSrc":"4260:6:4","nodeType":"YulIdentifier","src":"4260:6:4"}]}]}]},"name":"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"3681:684:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3751:9:4","nodeType":"YulTypedName","src":"3751:9:4","type":""},{"name":"dataEnd","nativeSrc":"3762:7:4","nodeType":"YulTypedName","src":"3762:7:4","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3774:6:4","nodeType":"YulTypedName","src":"3774:6:4","type":""},{"name":"value1","nativeSrc":"3782:6:4","nodeType":"YulTypedName","src":"3782:6:4","type":""}],"src":"3681:684:4"},{"body":{"nativeSrc":"4415:49:4","nodeType":"YulBlock","src":"4415:49:4","statements":[{"nativeSrc":"4425:33:4","nodeType":"YulAssignment","src":"4425:33:4","value":{"arguments":[{"name":"value","nativeSrc":"4440:5:4","nodeType":"YulIdentifier","src":"4440:5:4"},{"kind":"number","nativeSrc":"4447:10:4","nodeType":"YulLiteral","src":"4447:10:4","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nativeSrc":"4436:3:4","nodeType":"YulIdentifier","src":"4436:3:4"},"nativeSrc":"4436:22:4","nodeType":"YulFunctionCall","src":"4436:22:4"},"variableNames":[{"name":"cleaned","nativeSrc":"4425:7:4","nodeType":"YulIdentifier","src":"4425:7:4"}]}]},"name":"cleanup_t_uint32","nativeSrc":"4371:93:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4397:5:4","nodeType":"YulTypedName","src":"4397:5:4","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4407:7:4","nodeType":"YulTypedName","src":"4407:7:4","type":""}],"src":"4371:93:4"},{"body":{"nativeSrc":"4533:52:4","nodeType":"YulBlock","src":"4533:52:4","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4550:3:4","nodeType":"YulIdentifier","src":"4550:3:4"},{"arguments":[{"name":"value","nativeSrc":"4572:5:4","nodeType":"YulIdentifier","src":"4572:5:4"}],"functionName":{"name":"cleanup_t_uint32","nativeSrc":"4555:16:4","nodeType":"YulIdentifier","src":"4555:16:4"},"nativeSrc":"4555:23:4","nodeType":"YulFunctionCall","src":"4555:23:4"}],"functionName":{"name":"mstore","nativeSrc":"4543:6:4","nodeType":"YulIdentifier","src":"4543:6:4"},"nativeSrc":"4543:36:4","nodeType":"YulFunctionCall","src":"4543:36:4"},"nativeSrc":"4543:36:4","nodeType":"YulExpressionStatement","src":"4543:36:4"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"4470:115:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4521:5:4","nodeType":"YulTypedName","src":"4521:5:4","type":""},{"name":"pos","nativeSrc":"4528:3:4","nodeType":"YulTypedName","src":"4528:3:4","type":""}],"src":"4470:115:4"},{"body":{"nativeSrc":"4687:122:4","nodeType":"YulBlock","src":"4687:122:4","statements":[{"nativeSrc":"4697:26:4","nodeType":"YulAssignment","src":"4697:26:4","value":{"arguments":[{"name":"headStart","nativeSrc":"4709:9:4","nodeType":"YulIdentifier","src":"4709:9:4"},{"kind":"number","nativeSrc":"4720:2:4","nodeType":"YulLiteral","src":"4720:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4705:3:4","nodeType":"YulIdentifier","src":"4705:3:4"},"nativeSrc":"4705:18:4","nodeType":"YulFunctionCall","src":"4705:18:4"},"variableNames":[{"name":"tail","nativeSrc":"4697:4:4","nodeType":"YulIdentifier","src":"4697:4:4"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4775:6:4","nodeType":"YulIdentifier","src":"4775:6:4"},{"arguments":[{"name":"headStart","nativeSrc":"4788:9:4","nodeType":"YulIdentifier","src":"4788:9:4"},{"kind":"number","nativeSrc":"4799:1:4","nodeType":"YulLiteral","src":"4799:1:4","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4784:3:4","nodeType":"YulIdentifier","src":"4784:3:4"},"nativeSrc":"4784:17:4","nodeType":"YulFunctionCall","src":"4784:17:4"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"4733:41:4","nodeType":"YulIdentifier","src":"4733:41:4"},"nativeSrc":"4733:69:4","nodeType":"YulFunctionCall","src":"4733:69:4"},"nativeSrc":"4733:69:4","nodeType":"YulExpressionStatement","src":"4733:69:4"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nativeSrc":"4591:218:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4659:9:4","nodeType":"YulTypedName","src":"4659:9:4","type":""},{"name":"value0","nativeSrc":"4671:6:4","nodeType":"YulTypedName","src":"4671:6:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4682:4:4","nodeType":"YulTypedName","src":"4682:4:4","type":""}],"src":"4591:218:4"},{"body":{"nativeSrc":"4859:45:4","nodeType":"YulBlock","src":"4859:45:4","statements":[{"nativeSrc":"4869:29:4","nodeType":"YulAssignment","src":"4869:29:4","value":{"arguments":[{"name":"value","nativeSrc":"4884:5:4","nodeType":"YulIdentifier","src":"4884:5:4"},{"kind":"number","nativeSrc":"4891:6:4","nodeType":"YulLiteral","src":"4891:6:4","type":"","value":"0xffff"}],"functionName":{"name":"and","nativeSrc":"4880:3:4","nodeType":"YulIdentifier","src":"4880:3:4"},"nativeSrc":"4880:18:4","nodeType":"YulFunctionCall","src":"4880:18:4"},"variableNames":[{"name":"cleaned","nativeSrc":"4869:7:4","nodeType":"YulIdentifier","src":"4869:7:4"}]}]},"name":"cleanup_t_uint16","nativeSrc":"4815:89:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4841:5:4","nodeType":"YulTypedName","src":"4841:5:4","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4851:7:4","nodeType":"YulTypedName","src":"4851:7:4","type":""}],"src":"4815:89:4"},{"body":{"nativeSrc":"4973:52:4","nodeType":"YulBlock","src":"4973:52:4","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4990:3:4","nodeType":"YulIdentifier","src":"4990:3:4"},{"arguments":[{"name":"value","nativeSrc":"5012:5:4","nodeType":"YulIdentifier","src":"5012:5:4"}],"functionName":{"name":"cleanup_t_uint16","nativeSrc":"4995:16:4","nodeType":"YulIdentifier","src":"4995:16:4"},"nativeSrc":"4995:23:4","nodeType":"YulFunctionCall","src":"4995:23:4"}],"functionName":{"name":"mstore","nativeSrc":"4983:6:4","nodeType":"YulIdentifier","src":"4983:6:4"},"nativeSrc":"4983:36:4","nodeType":"YulFunctionCall","src":"4983:36:4"},"nativeSrc":"4983:36:4","nodeType":"YulExpressionStatement","src":"4983:36:4"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nativeSrc":"4910:115:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4961:5:4","nodeType":"YulTypedName","src":"4961:5:4","type":""},{"name":"pos","nativeSrc":"4968:3:4","nodeType":"YulTypedName","src":"4968:3:4","type":""}],"src":"4910:115:4"},{"body":{"nativeSrc":"5127:122:4","nodeType":"YulBlock","src":"5127:122:4","statements":[{"nativeSrc":"5137:26:4","nodeType":"YulAssignment","src":"5137:26:4","value":{"arguments":[{"name":"headStart","nativeSrc":"5149:9:4","nodeType":"YulIdentifier","src":"5149:9:4"},{"kind":"number","nativeSrc":"5160:2:4","nodeType":"YulLiteral","src":"5160:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5145:3:4","nodeType":"YulIdentifier","src":"5145:3:4"},"nativeSrc":"5145:18:4","nodeType":"YulFunctionCall","src":"5145:18:4"},"variableNames":[{"name":"tail","nativeSrc":"5137:4:4","nodeType":"YulIdentifier","src":"5137:4:4"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5215:6:4","nodeType":"YulIdentifier","src":"5215:6:4"},{"arguments":[{"name":"headStart","nativeSrc":"5228:9:4","nodeType":"YulIdentifier","src":"5228:9:4"},{"kind":"number","nativeSrc":"5239:1:4","nodeType":"YulLiteral","src":"5239:1:4","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5224:3:4","nodeType":"YulIdentifier","src":"5224:3:4"},"nativeSrc":"5224:17:4","nodeType":"YulFunctionCall","src":"5224:17:4"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nativeSrc":"5173:41:4","nodeType":"YulIdentifier","src":"5173:41:4"},"nativeSrc":"5173:69:4","nodeType":"YulFunctionCall","src":"5173:69:4"},"nativeSrc":"5173:69:4","nodeType":"YulExpressionStatement","src":"5173:69:4"}]},"name":"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed","nativeSrc":"5031:218:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5099:9:4","nodeType":"YulTypedName","src":"5099:9:4","type":""},{"name":"value0","nativeSrc":"5111:6:4","nodeType":"YulTypedName","src":"5111:6:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5122:4:4","nodeType":"YulTypedName","src":"5122:4:4","type":""}],"src":"5031:218:4"},{"body":{"nativeSrc":"5344:28:4","nodeType":"YulBlock","src":"5344:28:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5361:1:4","nodeType":"YulLiteral","src":"5361:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"5364:1:4","nodeType":"YulLiteral","src":"5364:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5354:6:4","nodeType":"YulIdentifier","src":"5354:6:4"},"nativeSrc":"5354:12:4","nodeType":"YulFunctionCall","src":"5354:12:4"},"nativeSrc":"5354:12:4","nodeType":"YulExpressionStatement","src":"5354:12:4"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"5255:117:4","nodeType":"YulFunctionDefinition","src":"5255:117:4"},{"body":{"nativeSrc":"5465:478:4","nodeType":"YulBlock","src":"5465:478:4","statements":[{"body":{"nativeSrc":"5514:83:4","nodeType":"YulBlock","src":"5514:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"5516:77:4","nodeType":"YulIdentifier","src":"5516:77:4"},"nativeSrc":"5516:79:4","nodeType":"YulFunctionCall","src":"5516:79:4"},"nativeSrc":"5516:79:4","nodeType":"YulExpressionStatement","src":"5516:79:4"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"5493:6:4","nodeType":"YulIdentifier","src":"5493:6:4"},{"kind":"number","nativeSrc":"5501:4:4","nodeType":"YulLiteral","src":"5501:4:4","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"5489:3:4","nodeType":"YulIdentifier","src":"5489:3:4"},"nativeSrc":"5489:17:4","nodeType":"YulFunctionCall","src":"5489:17:4"},{"name":"end","nativeSrc":"5508:3:4","nodeType":"YulIdentifier","src":"5508:3:4"}],"functionName":{"name":"slt","nativeSrc":"5485:3:4","nodeType":"YulIdentifier","src":"5485:3:4"},"nativeSrc":"5485:27:4","nodeType":"YulFunctionCall","src":"5485:27:4"}],"functionName":{"name":"iszero","nativeSrc":"5478:6:4","nodeType":"YulIdentifier","src":"5478:6:4"},"nativeSrc":"5478:35:4","nodeType":"YulFunctionCall","src":"5478:35:4"},"nativeSrc":"5475:122:4","nodeType":"YulIf","src":"5475:122:4"},{"nativeSrc":"5606:30:4","nodeType":"YulAssignment","src":"5606:30:4","value":{"arguments":[{"name":"offset","nativeSrc":"5629:6:4","nodeType":"YulIdentifier","src":"5629:6:4"}],"functionName":{"name":"calldataload","nativeSrc":"5616:12:4","nodeType":"YulIdentifier","src":"5616:12:4"},"nativeSrc":"5616:20:4","nodeType":"YulFunctionCall","src":"5616:20:4"},"variableNames":[{"name":"length","nativeSrc":"5606:6:4","nodeType":"YulIdentifier","src":"5606:6:4"}]},{"body":{"nativeSrc":"5679:83:4","nodeType":"YulBlock","src":"5679:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"5681:77:4","nodeType":"YulIdentifier","src":"5681:77:4"},"nativeSrc":"5681:79:4","nodeType":"YulFunctionCall","src":"5681:79:4"},"nativeSrc":"5681:79:4","nodeType":"YulExpressionStatement","src":"5681:79:4"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"5651:6:4","nodeType":"YulIdentifier","src":"5651:6:4"},{"kind":"number","nativeSrc":"5659:18:4","nodeType":"YulLiteral","src":"5659:18:4","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5648:2:4","nodeType":"YulIdentifier","src":"5648:2:4"},"nativeSrc":"5648:30:4","nodeType":"YulFunctionCall","src":"5648:30:4"},"nativeSrc":"5645:117:4","nodeType":"YulIf","src":"5645:117:4"},{"nativeSrc":"5771:29:4","nodeType":"YulAssignment","src":"5771:29:4","value":{"arguments":[{"name":"offset","nativeSrc":"5787:6:4","nodeType":"YulIdentifier","src":"5787:6:4"},{"kind":"number","nativeSrc":"5795:4:4","nodeType":"YulLiteral","src":"5795:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5783:3:4","nodeType":"YulIdentifier","src":"5783:3:4"},"nativeSrc":"5783:17:4","nodeType":"YulFunctionCall","src":"5783:17:4"},"variableNames":[{"name":"arrayPos","nativeSrc":"5771:8:4","nodeType":"YulIdentifier","src":"5771:8:4"}]},{"body":{"nativeSrc":"5854:83:4","nodeType":"YulBlock","src":"5854:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"5856:77:4","nodeType":"YulIdentifier","src":"5856:77:4"},"nativeSrc":"5856:79:4","nodeType":"YulFunctionCall","src":"5856:79:4"},"nativeSrc":"5856:79:4","nodeType":"YulExpressionStatement","src":"5856:79:4"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nativeSrc":"5819:8:4","nodeType":"YulIdentifier","src":"5819:8:4"},{"arguments":[{"name":"length","nativeSrc":"5833:6:4","nodeType":"YulIdentifier","src":"5833:6:4"},{"kind":"number","nativeSrc":"5841:4:4","nodeType":"YulLiteral","src":"5841:4:4","type":"","value":"0x01"}],"functionName":{"name":"mul","nativeSrc":"5829:3:4","nodeType":"YulIdentifier","src":"5829:3:4"},"nativeSrc":"5829:17:4","nodeType":"YulFunctionCall","src":"5829:17:4"}],"functionName":{"name":"add","nativeSrc":"5815:3:4","nodeType":"YulIdentifier","src":"5815:3:4"},"nativeSrc":"5815:32:4","nodeType":"YulFunctionCall","src":"5815:32:4"},{"name":"end","nativeSrc":"5849:3:4","nodeType":"YulIdentifier","src":"5849:3:4"}],"functionName":{"name":"gt","nativeSrc":"5812:2:4","nodeType":"YulIdentifier","src":"5812:2:4"},"nativeSrc":"5812:41:4","nodeType":"YulFunctionCall","src":"5812:41:4"},"nativeSrc":"5809:128:4","nodeType":"YulIf","src":"5809:128:4"}]},"name":"abi_decode_t_bytes_calldata_ptr","nativeSrc":"5391:552:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"5432:6:4","nodeType":"YulTypedName","src":"5432:6:4","type":""},{"name":"end","nativeSrc":"5440:3:4","nodeType":"YulTypedName","src":"5440:3:4","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"5448:8:4","nodeType":"YulTypedName","src":"5448:8:4","type":""},{"name":"length","nativeSrc":"5458:6:4","nodeType":"YulTypedName","src":"5458:6:4","type":""}],"src":"5391:552:4"},{"body":{"nativeSrc":"6034:442:4","nodeType":"YulBlock","src":"6034:442:4","statements":[{"body":{"nativeSrc":"6080:83:4","nodeType":"YulBlock","src":"6080:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"6082:77:4","nodeType":"YulIdentifier","src":"6082:77:4"},"nativeSrc":"6082:79:4","nodeType":"YulFunctionCall","src":"6082:79:4"},"nativeSrc":"6082:79:4","nodeType":"YulExpressionStatement","src":"6082:79:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6055:7:4","nodeType":"YulIdentifier","src":"6055:7:4"},{"name":"headStart","nativeSrc":"6064:9:4","nodeType":"YulIdentifier","src":"6064:9:4"}],"functionName":{"name":"sub","nativeSrc":"6051:3:4","nodeType":"YulIdentifier","src":"6051:3:4"},"nativeSrc":"6051:23:4","nodeType":"YulFunctionCall","src":"6051:23:4"},{"kind":"number","nativeSrc":"6076:2:4","nodeType":"YulLiteral","src":"6076:2:4","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"6047:3:4","nodeType":"YulIdentifier","src":"6047:3:4"},"nativeSrc":"6047:32:4","nodeType":"YulFunctionCall","src":"6047:32:4"},"nativeSrc":"6044:119:4","nodeType":"YulIf","src":"6044:119:4"},{"nativeSrc":"6173:296:4","nodeType":"YulBlock","src":"6173:296:4","statements":[{"nativeSrc":"6188:45:4","nodeType":"YulVariableDeclaration","src":"6188:45:4","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6219:9:4","nodeType":"YulIdentifier","src":"6219:9:4"},{"kind":"number","nativeSrc":"6230:1:4","nodeType":"YulLiteral","src":"6230:1:4","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6215:3:4","nodeType":"YulIdentifier","src":"6215:3:4"},"nativeSrc":"6215:17:4","nodeType":"YulFunctionCall","src":"6215:17:4"}],"functionName":{"name":"calldataload","nativeSrc":"6202:12:4","nodeType":"YulIdentifier","src":"6202:12:4"},"nativeSrc":"6202:31:4","nodeType":"YulFunctionCall","src":"6202:31:4"},"variables":[{"name":"offset","nativeSrc":"6192:6:4","nodeType":"YulTypedName","src":"6192:6:4","type":""}]},{"body":{"nativeSrc":"6280:83:4","nodeType":"YulBlock","src":"6280:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"6282:77:4","nodeType":"YulIdentifier","src":"6282:77:4"},"nativeSrc":"6282:79:4","nodeType":"YulFunctionCall","src":"6282:79:4"},"nativeSrc":"6282:79:4","nodeType":"YulExpressionStatement","src":"6282:79:4"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"6252:6:4","nodeType":"YulIdentifier","src":"6252:6:4"},{"kind":"number","nativeSrc":"6260:18:4","nodeType":"YulLiteral","src":"6260:18:4","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6249:2:4","nodeType":"YulIdentifier","src":"6249:2:4"},"nativeSrc":"6249:30:4","nodeType":"YulFunctionCall","src":"6249:30:4"},"nativeSrc":"6246:117:4","nodeType":"YulIf","src":"6246:117:4"},{"nativeSrc":"6377:82:4","nodeType":"YulAssignment","src":"6377:82:4","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6431:9:4","nodeType":"YulIdentifier","src":"6431:9:4"},{"name":"offset","nativeSrc":"6442:6:4","nodeType":"YulIdentifier","src":"6442:6:4"}],"functionName":{"name":"add","nativeSrc":"6427:3:4","nodeType":"YulIdentifier","src":"6427:3:4"},"nativeSrc":"6427:22:4","nodeType":"YulFunctionCall","src":"6427:22:4"},{"name":"dataEnd","nativeSrc":"6451:7:4","nodeType":"YulIdentifier","src":"6451:7:4"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nativeSrc":"6395:31:4","nodeType":"YulIdentifier","src":"6395:31:4"},"nativeSrc":"6395:64:4","nodeType":"YulFunctionCall","src":"6395:64:4"},"variableNames":[{"name":"value0","nativeSrc":"6377:6:4","nodeType":"YulIdentifier","src":"6377:6:4"},{"name":"value1","nativeSrc":"6385:6:4","nodeType":"YulIdentifier","src":"6385:6:4"}]}]}]},"name":"abi_decode_tuple_t_bytes_calldata_ptr","nativeSrc":"5949:527:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5996:9:4","nodeType":"YulTypedName","src":"5996:9:4","type":""},{"name":"dataEnd","nativeSrc":"6007:7:4","nodeType":"YulTypedName","src":"6007:7:4","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6019:6:4","nodeType":"YulTypedName","src":"6019:6:4","type":""},{"name":"value1","nativeSrc":"6027:6:4","nodeType":"YulTypedName","src":"6027:6:4","type":""}],"src":"5949:527:4"},{"body":{"nativeSrc":"6524:48:4","nodeType":"YulBlock","src":"6524:48:4","statements":[{"nativeSrc":"6534:32:4","nodeType":"YulAssignment","src":"6534:32:4","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6559:5:4","nodeType":"YulIdentifier","src":"6559:5:4"}],"functionName":{"name":"iszero","nativeSrc":"6552:6:4","nodeType":"YulIdentifier","src":"6552:6:4"},"nativeSrc":"6552:13:4","nodeType":"YulFunctionCall","src":"6552:13:4"}],"functionName":{"name":"iszero","nativeSrc":"6545:6:4","nodeType":"YulIdentifier","src":"6545:6:4"},"nativeSrc":"6545:21:4","nodeType":"YulFunctionCall","src":"6545:21:4"},"variableNames":[{"name":"cleaned","nativeSrc":"6534:7:4","nodeType":"YulIdentifier","src":"6534:7:4"}]}]},"name":"cleanup_t_bool","nativeSrc":"6482:90:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6506:5:4","nodeType":"YulTypedName","src":"6506:5:4","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"6516:7:4","nodeType":"YulTypedName","src":"6516:7:4","type":""}],"src":"6482:90:4"},{"body":{"nativeSrc":"6637:50:4","nodeType":"YulBlock","src":"6637:50:4","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6654:3:4","nodeType":"YulIdentifier","src":"6654:3:4"},{"arguments":[{"name":"value","nativeSrc":"6674:5:4","nodeType":"YulIdentifier","src":"6674:5:4"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"6659:14:4","nodeType":"YulIdentifier","src":"6659:14:4"},"nativeSrc":"6659:21:4","nodeType":"YulFunctionCall","src":"6659:21:4"}],"functionName":{"name":"mstore","nativeSrc":"6647:6:4","nodeType":"YulIdentifier","src":"6647:6:4"},"nativeSrc":"6647:34:4","nodeType":"YulFunctionCall","src":"6647:34:4"},"nativeSrc":"6647:34:4","nodeType":"YulExpressionStatement","src":"6647:34:4"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"6578:109:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6625:5:4","nodeType":"YulTypedName","src":"6625:5:4","type":""},{"name":"pos","nativeSrc":"6632:3:4","nodeType":"YulTypedName","src":"6632:3:4","type":""}],"src":"6578:109:4"},{"body":{"nativeSrc":"6751:40:4","nodeType":"YulBlock","src":"6751:40:4","statements":[{"nativeSrc":"6762:22:4","nodeType":"YulAssignment","src":"6762:22:4","value":{"arguments":[{"name":"value","nativeSrc":"6778:5:4","nodeType":"YulIdentifier","src":"6778:5:4"}],"functionName":{"name":"mload","nativeSrc":"6772:5:4","nodeType":"YulIdentifier","src":"6772:5:4"},"nativeSrc":"6772:12:4","nodeType":"YulFunctionCall","src":"6772:12:4"},"variableNames":[{"name":"length","nativeSrc":"6762:6:4","nodeType":"YulIdentifier","src":"6762:6:4"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"6693:98:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6734:5:4","nodeType":"YulTypedName","src":"6734:5:4","type":""}],"returnVariables":[{"name":"length","nativeSrc":"6744:6:4","nodeType":"YulTypedName","src":"6744:6:4","type":""}],"src":"6693:98:4"},{"body":{"nativeSrc":"6892:73:4","nodeType":"YulBlock","src":"6892:73:4","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6909:3:4","nodeType":"YulIdentifier","src":"6909:3:4"},{"name":"length","nativeSrc":"6914:6:4","nodeType":"YulIdentifier","src":"6914:6:4"}],"functionName":{"name":"mstore","nativeSrc":"6902:6:4","nodeType":"YulIdentifier","src":"6902:6:4"},"nativeSrc":"6902:19:4","nodeType":"YulFunctionCall","src":"6902:19:4"},"nativeSrc":"6902:19:4","nodeType":"YulExpressionStatement","src":"6902:19:4"},{"nativeSrc":"6930:29:4","nodeType":"YulAssignment","src":"6930:29:4","value":{"arguments":[{"name":"pos","nativeSrc":"6949:3:4","nodeType":"YulIdentifier","src":"6949:3:4"},{"kind":"number","nativeSrc":"6954:4:4","nodeType":"YulLiteral","src":"6954:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6945:3:4","nodeType":"YulIdentifier","src":"6945:3:4"},"nativeSrc":"6945:14:4","nodeType":"YulFunctionCall","src":"6945:14:4"},"variableNames":[{"name":"updated_pos","nativeSrc":"6930:11:4","nodeType":"YulIdentifier","src":"6930:11:4"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"6797:168:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"6864:3:4","nodeType":"YulTypedName","src":"6864:3:4","type":""},{"name":"length","nativeSrc":"6869:6:4","nodeType":"YulTypedName","src":"6869:6:4","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"6880:11:4","nodeType":"YulTypedName","src":"6880:11:4","type":""}],"src":"6797:168:4"},{"body":{"nativeSrc":"7033:186:4","nodeType":"YulBlock","src":"7033:186:4","statements":[{"nativeSrc":"7044:10:4","nodeType":"YulVariableDeclaration","src":"7044:10:4","value":{"kind":"number","nativeSrc":"7053:1:4","nodeType":"YulLiteral","src":"7053:1:4","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"7048:1:4","nodeType":"YulTypedName","src":"7048:1:4","type":""}]},{"body":{"nativeSrc":"7113:63:4","nodeType":"YulBlock","src":"7113:63:4","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"7138:3:4","nodeType":"YulIdentifier","src":"7138:3:4"},{"name":"i","nativeSrc":"7143:1:4","nodeType":"YulIdentifier","src":"7143:1:4"}],"functionName":{"name":"add","nativeSrc":"7134:3:4","nodeType":"YulIdentifier","src":"7134:3:4"},"nativeSrc":"7134:11:4","nodeType":"YulFunctionCall","src":"7134:11:4"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"7157:3:4","nodeType":"YulIdentifier","src":"7157:3:4"},{"name":"i","nativeSrc":"7162:1:4","nodeType":"YulIdentifier","src":"7162:1:4"}],"functionName":{"name":"add","nativeSrc":"7153:3:4","nodeType":"YulIdentifier","src":"7153:3:4"},"nativeSrc":"7153:11:4","nodeType":"YulFunctionCall","src":"7153:11:4"}],"functionName":{"name":"mload","nativeSrc":"7147:5:4","nodeType":"YulIdentifier","src":"7147:5:4"},"nativeSrc":"7147:18:4","nodeType":"YulFunctionCall","src":"7147:18:4"}],"functionName":{"name":"mstore","nativeSrc":"7127:6:4","nodeType":"YulIdentifier","src":"7127:6:4"},"nativeSrc":"7127:39:4","nodeType":"YulFunctionCall","src":"7127:39:4"},"nativeSrc":"7127:39:4","nodeType":"YulExpressionStatement","src":"7127:39:4"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"7074:1:4","nodeType":"YulIdentifier","src":"7074:1:4"},{"name":"length","nativeSrc":"7077:6:4","nodeType":"YulIdentifier","src":"7077:6:4"}],"functionName":{"name":"lt","nativeSrc":"7071:2:4","nodeType":"YulIdentifier","src":"7071:2:4"},"nativeSrc":"7071:13:4","nodeType":"YulFunctionCall","src":"7071:13:4"},"nativeSrc":"7063:113:4","nodeType":"YulForLoop","post":{"nativeSrc":"7085:19:4","nodeType":"YulBlock","src":"7085:19:4","statements":[{"nativeSrc":"7087:15:4","nodeType":"YulAssignment","src":"7087:15:4","value":{"arguments":[{"name":"i","nativeSrc":"7096:1:4","nodeType":"YulIdentifier","src":"7096:1:4"},{"kind":"number","nativeSrc":"7099:2:4","nodeType":"YulLiteral","src":"7099:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7092:3:4","nodeType":"YulIdentifier","src":"7092:3:4"},"nativeSrc":"7092:10:4","nodeType":"YulFunctionCall","src":"7092:10:4"},"variableNames":[{"name":"i","nativeSrc":"7087:1:4","nodeType":"YulIdentifier","src":"7087:1:4"}]}]},"pre":{"nativeSrc":"7067:3:4","nodeType":"YulBlock","src":"7067:3:4","statements":[]},"src":"7063:113:4"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"7196:3:4","nodeType":"YulIdentifier","src":"7196:3:4"},{"name":"length","nativeSrc":"7201:6:4","nodeType":"YulIdentifier","src":"7201:6:4"}],"functionName":{"name":"add","nativeSrc":"7192:3:4","nodeType":"YulIdentifier","src":"7192:3:4"},"nativeSrc":"7192:16:4","nodeType":"YulFunctionCall","src":"7192:16:4"},{"kind":"number","nativeSrc":"7210:1:4","nodeType":"YulLiteral","src":"7210:1:4","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"7185:6:4","nodeType":"YulIdentifier","src":"7185:6:4"},"nativeSrc":"7185:27:4","nodeType":"YulFunctionCall","src":"7185:27:4"},"nativeSrc":"7185:27:4","nodeType":"YulExpressionStatement","src":"7185:27:4"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"6971:248:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"7015:3:4","nodeType":"YulTypedName","src":"7015:3:4","type":""},{"name":"dst","nativeSrc":"7020:3:4","nodeType":"YulTypedName","src":"7020:3:4","type":""},{"name":"length","nativeSrc":"7025:6:4","nodeType":"YulTypedName","src":"7025:6:4","type":""}],"src":"6971:248:4"},{"body":{"nativeSrc":"7315:283:4","nodeType":"YulBlock","src":"7315:283:4","statements":[{"nativeSrc":"7325:52:4","nodeType":"YulVariableDeclaration","src":"7325:52:4","value":{"arguments":[{"name":"value","nativeSrc":"7371:5:4","nodeType":"YulIdentifier","src":"7371:5:4"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"7339:31:4","nodeType":"YulIdentifier","src":"7339:31:4"},"nativeSrc":"7339:38:4","nodeType":"YulFunctionCall","src":"7339:38:4"},"variables":[{"name":"length","nativeSrc":"7329:6:4","nodeType":"YulTypedName","src":"7329:6:4","type":""}]},{"nativeSrc":"7386:77:4","nodeType":"YulAssignment","src":"7386:77:4","value":{"arguments":[{"name":"pos","nativeSrc":"7451:3:4","nodeType":"YulIdentifier","src":"7451:3:4"},{"name":"length","nativeSrc":"7456:6:4","nodeType":"YulIdentifier","src":"7456:6:4"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"7393:57:4","nodeType":"YulIdentifier","src":"7393:57:4"},"nativeSrc":"7393:70:4","nodeType":"YulFunctionCall","src":"7393:70:4"},"variableNames":[{"name":"pos","nativeSrc":"7386:3:4","nodeType":"YulIdentifier","src":"7386:3:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7511:5:4","nodeType":"YulIdentifier","src":"7511:5:4"},{"kind":"number","nativeSrc":"7518:4:4","nodeType":"YulLiteral","src":"7518:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7507:3:4","nodeType":"YulIdentifier","src":"7507:3:4"},"nativeSrc":"7507:16:4","nodeType":"YulFunctionCall","src":"7507:16:4"},{"name":"pos","nativeSrc":"7525:3:4","nodeType":"YulIdentifier","src":"7525:3:4"},{"name":"length","nativeSrc":"7530:6:4","nodeType":"YulIdentifier","src":"7530:6:4"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"7472:34:4","nodeType":"YulIdentifier","src":"7472:34:4"},"nativeSrc":"7472:65:4","nodeType":"YulFunctionCall","src":"7472:65:4"},"nativeSrc":"7472:65:4","nodeType":"YulExpressionStatement","src":"7472:65:4"},{"nativeSrc":"7546:46:4","nodeType":"YulAssignment","src":"7546:46:4","value":{"arguments":[{"name":"pos","nativeSrc":"7557:3:4","nodeType":"YulIdentifier","src":"7557:3:4"},{"arguments":[{"name":"length","nativeSrc":"7584:6:4","nodeType":"YulIdentifier","src":"7584:6:4"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"7562:21:4","nodeType":"YulIdentifier","src":"7562:21:4"},"nativeSrc":"7562:29:4","nodeType":"YulFunctionCall","src":"7562:29:4"}],"functionName":{"name":"add","nativeSrc":"7553:3:4","nodeType":"YulIdentifier","src":"7553:3:4"},"nativeSrc":"7553:39:4","nodeType":"YulFunctionCall","src":"7553:39:4"},"variableNames":[{"name":"end","nativeSrc":"7546:3:4","nodeType":"YulIdentifier","src":"7546:3:4"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"7225:373:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7296:5:4","nodeType":"YulTypedName","src":"7296:5:4","type":""},{"name":"pos","nativeSrc":"7303:3:4","nodeType":"YulTypedName","src":"7303:3:4","type":""}],"returnVariables":[{"name":"end","nativeSrc":"7311:3:4","nodeType":"YulTypedName","src":"7311:3:4","type":""}],"src":"7225:373:4"},{"body":{"nativeSrc":"7742:269:4","nodeType":"YulBlock","src":"7742:269:4","statements":[{"nativeSrc":"7752:26:4","nodeType":"YulAssignment","src":"7752:26:4","value":{"arguments":[{"name":"headStart","nativeSrc":"7764:9:4","nodeType":"YulIdentifier","src":"7764:9:4"},{"kind":"number","nativeSrc":"7775:2:4","nodeType":"YulLiteral","src":"7775:2:4","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7760:3:4","nodeType":"YulIdentifier","src":"7760:3:4"},"nativeSrc":"7760:18:4","nodeType":"YulFunctionCall","src":"7760:18:4"},"variableNames":[{"name":"tail","nativeSrc":"7752:4:4","nodeType":"YulIdentifier","src":"7752:4:4"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"7826:6:4","nodeType":"YulIdentifier","src":"7826:6:4"},{"arguments":[{"name":"headStart","nativeSrc":"7839:9:4","nodeType":"YulIdentifier","src":"7839:9:4"},{"kind":"number","nativeSrc":"7850:1:4","nodeType":"YulLiteral","src":"7850:1:4","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7835:3:4","nodeType":"YulIdentifier","src":"7835:3:4"},"nativeSrc":"7835:17:4","nodeType":"YulFunctionCall","src":"7835:17:4"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"7788:37:4","nodeType":"YulIdentifier","src":"7788:37:4"},"nativeSrc":"7788:65:4","nodeType":"YulFunctionCall","src":"7788:65:4"},"nativeSrc":"7788:65:4","nodeType":"YulExpressionStatement","src":"7788:65:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7874:9:4","nodeType":"YulIdentifier","src":"7874:9:4"},{"kind":"number","nativeSrc":"7885:2:4","nodeType":"YulLiteral","src":"7885:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7870:3:4","nodeType":"YulIdentifier","src":"7870:3:4"},"nativeSrc":"7870:18:4","nodeType":"YulFunctionCall","src":"7870:18:4"},{"arguments":[{"name":"tail","nativeSrc":"7894:4:4","nodeType":"YulIdentifier","src":"7894:4:4"},{"name":"headStart","nativeSrc":"7900:9:4","nodeType":"YulIdentifier","src":"7900:9:4"}],"functionName":{"name":"sub","nativeSrc":"7890:3:4","nodeType":"YulIdentifier","src":"7890:3:4"},"nativeSrc":"7890:20:4","nodeType":"YulFunctionCall","src":"7890:20:4"}],"functionName":{"name":"mstore","nativeSrc":"7863:6:4","nodeType":"YulIdentifier","src":"7863:6:4"},"nativeSrc":"7863:48:4","nodeType":"YulFunctionCall","src":"7863:48:4"},"nativeSrc":"7863:48:4","nodeType":"YulExpressionStatement","src":"7863:48:4"},{"nativeSrc":"7920:84:4","nodeType":"YulAssignment","src":"7920:84:4","value":{"arguments":[{"name":"value1","nativeSrc":"7990:6:4","nodeType":"YulIdentifier","src":"7990:6:4"},{"name":"tail","nativeSrc":"7999:4:4","nodeType":"YulIdentifier","src":"7999:4:4"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"7928:61:4","nodeType":"YulIdentifier","src":"7928:61:4"},"nativeSrc":"7928:76:4","nodeType":"YulFunctionCall","src":"7928:76:4"},"variableNames":[{"name":"tail","nativeSrc":"7920:4:4","nodeType":"YulIdentifier","src":"7920:4:4"}]}]},"name":"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"7604:407:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7706:9:4","nodeType":"YulTypedName","src":"7706:9:4","type":""},{"name":"value1","nativeSrc":"7718:6:4","nodeType":"YulTypedName","src":"7718:6:4","type":""},{"name":"value0","nativeSrc":"7726:6:4","nodeType":"YulTypedName","src":"7726:6:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7737:4:4","nodeType":"YulTypedName","src":"7737:4:4","type":""}],"src":"7604:407:4"},{"body":{"nativeSrc":"8045:152:4","nodeType":"YulBlock","src":"8045:152:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8062:1:4","nodeType":"YulLiteral","src":"8062:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"8065:77:4","nodeType":"YulLiteral","src":"8065:77:4","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"8055:6:4","nodeType":"YulIdentifier","src":"8055:6:4"},"nativeSrc":"8055:88:4","nodeType":"YulFunctionCall","src":"8055:88:4"},"nativeSrc":"8055:88:4","nodeType":"YulExpressionStatement","src":"8055:88:4"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8159:1:4","nodeType":"YulLiteral","src":"8159:1:4","type":"","value":"4"},{"kind":"number","nativeSrc":"8162:4:4","nodeType":"YulLiteral","src":"8162:4:4","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"8152:6:4","nodeType":"YulIdentifier","src":"8152:6:4"},"nativeSrc":"8152:15:4","nodeType":"YulFunctionCall","src":"8152:15:4"},"nativeSrc":"8152:15:4","nodeType":"YulExpressionStatement","src":"8152:15:4"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8183:1:4","nodeType":"YulLiteral","src":"8183:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"8186:4:4","nodeType":"YulLiteral","src":"8186:4:4","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"8176:6:4","nodeType":"YulIdentifier","src":"8176:6:4"},"nativeSrc":"8176:15:4","nodeType":"YulFunctionCall","src":"8176:15:4"},"nativeSrc":"8176:15:4","nodeType":"YulExpressionStatement","src":"8176:15:4"}]},"name":"panic_error_0x21","nativeSrc":"8017:180:4","nodeType":"YulFunctionDefinition","src":"8017:180:4"},{"body":{"nativeSrc":"8261:62:4","nodeType":"YulBlock","src":"8261:62:4","statements":[{"body":{"nativeSrc":"8295:22:4","nodeType":"YulBlock","src":"8295:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nativeSrc":"8297:16:4","nodeType":"YulIdentifier","src":"8297:16:4"},"nativeSrc":"8297:18:4","nodeType":"YulFunctionCall","src":"8297:18:4"},"nativeSrc":"8297:18:4","nodeType":"YulExpressionStatement","src":"8297:18:4"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"8284:5:4","nodeType":"YulIdentifier","src":"8284:5:4"},{"kind":"number","nativeSrc":"8291:1:4","nodeType":"YulLiteral","src":"8291:1:4","type":"","value":"2"}],"functionName":{"name":"lt","nativeSrc":"8281:2:4","nodeType":"YulIdentifier","src":"8281:2:4"},"nativeSrc":"8281:12:4","nodeType":"YulFunctionCall","src":"8281:12:4"}],"functionName":{"name":"iszero","nativeSrc":"8274:6:4","nodeType":"YulIdentifier","src":"8274:6:4"},"nativeSrc":"8274:20:4","nodeType":"YulFunctionCall","src":"8274:20:4"},"nativeSrc":"8271:46:4","nodeType":"YulIf","src":"8271:46:4"}]},"name":"validator_assert_t_enum$_RaffelState_$226","nativeSrc":"8203:120:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8254:5:4","nodeType":"YulTypedName","src":"8254:5:4","type":""}],"src":"8203:120:4"},{"body":{"nativeSrc":"8389:81:4","nodeType":"YulBlock","src":"8389:81:4","statements":[{"nativeSrc":"8399:16:4","nodeType":"YulAssignment","src":"8399:16:4","value":{"name":"value","nativeSrc":"8410:5:4","nodeType":"YulIdentifier","src":"8410:5:4"},"variableNames":[{"name":"cleaned","nativeSrc":"8399:7:4","nodeType":"YulIdentifier","src":"8399:7:4"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"8458:5:4","nodeType":"YulIdentifier","src":"8458:5:4"}],"functionName":{"name":"validator_assert_t_enum$_RaffelState_$226","nativeSrc":"8416:41:4","nodeType":"YulIdentifier","src":"8416:41:4"},"nativeSrc":"8416:48:4","nodeType":"YulFunctionCall","src":"8416:48:4"},"nativeSrc":"8416:48:4","nodeType":"YulExpressionStatement","src":"8416:48:4"}]},"name":"cleanup_t_enum$_RaffelState_$226","nativeSrc":"8329:141:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8371:5:4","nodeType":"YulTypedName","src":"8371:5:4","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"8381:7:4","nodeType":"YulTypedName","src":"8381:7:4","type":""}],"src":"8329:141:4"},{"body":{"nativeSrc":"8549:68:4","nodeType":"YulBlock","src":"8549:68:4","statements":[{"nativeSrc":"8559:52:4","nodeType":"YulAssignment","src":"8559:52:4","value":{"arguments":[{"name":"value","nativeSrc":"8605:5:4","nodeType":"YulIdentifier","src":"8605:5:4"}],"functionName":{"name":"cleanup_t_enum$_RaffelState_$226","nativeSrc":"8572:32:4","nodeType":"YulIdentifier","src":"8572:32:4"},"nativeSrc":"8572:39:4","nodeType":"YulFunctionCall","src":"8572:39:4"},"variableNames":[{"name":"converted","nativeSrc":"8559:9:4","nodeType":"YulIdentifier","src":"8559:9:4"}]}]},"name":"convert_t_enum$_RaffelState_$226_to_t_uint8","nativeSrc":"8476:141:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8529:5:4","nodeType":"YulTypedName","src":"8529:5:4","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"8539:9:4","nodeType":"YulTypedName","src":"8539:9:4","type":""}],"src":"8476:141:4"},{"body":{"nativeSrc":"8701:79:4","nodeType":"YulBlock","src":"8701:79:4","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8718:3:4","nodeType":"YulIdentifier","src":"8718:3:4"},{"arguments":[{"name":"value","nativeSrc":"8767:5:4","nodeType":"YulIdentifier","src":"8767:5:4"}],"functionName":{"name":"convert_t_enum$_RaffelState_$226_to_t_uint8","nativeSrc":"8723:43:4","nodeType":"YulIdentifier","src":"8723:43:4"},"nativeSrc":"8723:50:4","nodeType":"YulFunctionCall","src":"8723:50:4"}],"functionName":{"name":"mstore","nativeSrc":"8711:6:4","nodeType":"YulIdentifier","src":"8711:6:4"},"nativeSrc":"8711:63:4","nodeType":"YulFunctionCall","src":"8711:63:4"},"nativeSrc":"8711:63:4","nodeType":"YulExpressionStatement","src":"8711:63:4"}]},"name":"abi_encode_t_enum$_RaffelState_$226_to_t_uint8_fromStack","nativeSrc":"8623:157:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8689:5:4","nodeType":"YulTypedName","src":"8689:5:4","type":""},{"name":"pos","nativeSrc":"8696:3:4","nodeType":"YulTypedName","src":"8696:3:4","type":""}],"src":"8623:157:4"},{"body":{"nativeSrc":"8897:137:4","nodeType":"YulBlock","src":"8897:137:4","statements":[{"nativeSrc":"8907:26:4","nodeType":"YulAssignment","src":"8907:26:4","value":{"arguments":[{"name":"headStart","nativeSrc":"8919:9:4","nodeType":"YulIdentifier","src":"8919:9:4"},{"kind":"number","nativeSrc":"8930:2:4","nodeType":"YulLiteral","src":"8930:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8915:3:4","nodeType":"YulIdentifier","src":"8915:3:4"},"nativeSrc":"8915:18:4","nodeType":"YulFunctionCall","src":"8915:18:4"},"variableNames":[{"name":"tail","nativeSrc":"8907:4:4","nodeType":"YulIdentifier","src":"8907:4:4"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9000:6:4","nodeType":"YulIdentifier","src":"9000:6:4"},{"arguments":[{"name":"headStart","nativeSrc":"9013:9:4","nodeType":"YulIdentifier","src":"9013:9:4"},{"kind":"number","nativeSrc":"9024:1:4","nodeType":"YulLiteral","src":"9024:1:4","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9009:3:4","nodeType":"YulIdentifier","src":"9009:3:4"},"nativeSrc":"9009:17:4","nodeType":"YulFunctionCall","src":"9009:17:4"}],"functionName":{"name":"abi_encode_t_enum$_RaffelState_$226_to_t_uint8_fromStack","nativeSrc":"8943:56:4","nodeType":"YulIdentifier","src":"8943:56:4"},"nativeSrc":"8943:84:4","nodeType":"YulFunctionCall","src":"8943:84:4"},"nativeSrc":"8943:84:4","nodeType":"YulExpressionStatement","src":"8943:84:4"}]},"name":"abi_encode_tuple_t_enum$_RaffelState_$226__to_t_uint8__fromStack_reversed","nativeSrc":"8786:248:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8869:9:4","nodeType":"YulTypedName","src":"8869:9:4","type":""},{"name":"value0","nativeSrc":"8881:6:4","nodeType":"YulTypedName","src":"8881:6:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8892:4:4","nodeType":"YulTypedName","src":"8892:4:4","type":""}],"src":"8786:248:4"},{"body":{"nativeSrc":"9106:263:4","nodeType":"YulBlock","src":"9106:263:4","statements":[{"body":{"nativeSrc":"9152:83:4","nodeType":"YulBlock","src":"9152:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"9154:77:4","nodeType":"YulIdentifier","src":"9154:77:4"},"nativeSrc":"9154:79:4","nodeType":"YulFunctionCall","src":"9154:79:4"},"nativeSrc":"9154:79:4","nodeType":"YulExpressionStatement","src":"9154:79:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9127:7:4","nodeType":"YulIdentifier","src":"9127:7:4"},{"name":"headStart","nativeSrc":"9136:9:4","nodeType":"YulIdentifier","src":"9136:9:4"}],"functionName":{"name":"sub","nativeSrc":"9123:3:4","nodeType":"YulIdentifier","src":"9123:3:4"},"nativeSrc":"9123:23:4","nodeType":"YulFunctionCall","src":"9123:23:4"},{"kind":"number","nativeSrc":"9148:2:4","nodeType":"YulLiteral","src":"9148:2:4","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"9119:3:4","nodeType":"YulIdentifier","src":"9119:3:4"},"nativeSrc":"9119:32:4","nodeType":"YulFunctionCall","src":"9119:32:4"},"nativeSrc":"9116:119:4","nodeType":"YulIf","src":"9116:119:4"},{"nativeSrc":"9245:117:4","nodeType":"YulBlock","src":"9245:117:4","statements":[{"nativeSrc":"9260:15:4","nodeType":"YulVariableDeclaration","src":"9260:15:4","value":{"kind":"number","nativeSrc":"9274:1:4","nodeType":"YulLiteral","src":"9274:1:4","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"9264:6:4","nodeType":"YulTypedName","src":"9264:6:4","type":""}]},{"nativeSrc":"9289:63:4","nodeType":"YulAssignment","src":"9289:63:4","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9324:9:4","nodeType":"YulIdentifier","src":"9324:9:4"},{"name":"offset","nativeSrc":"9335:6:4","nodeType":"YulIdentifier","src":"9335:6:4"}],"functionName":{"name":"add","nativeSrc":"9320:3:4","nodeType":"YulIdentifier","src":"9320:3:4"},"nativeSrc":"9320:22:4","nodeType":"YulFunctionCall","src":"9320:22:4"},{"name":"dataEnd","nativeSrc":"9344:7:4","nodeType":"YulIdentifier","src":"9344:7:4"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"9299:20:4","nodeType":"YulIdentifier","src":"9299:20:4"},"nativeSrc":"9299:53:4","nodeType":"YulFunctionCall","src":"9299:53:4"},"variableNames":[{"name":"value0","nativeSrc":"9289:6:4","nodeType":"YulIdentifier","src":"9289:6:4"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"9040:329:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9076:9:4","nodeType":"YulTypedName","src":"9076:9:4","type":""},{"name":"dataEnd","nativeSrc":"9087:7:4","nodeType":"YulTypedName","src":"9087:7:4","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9099:6:4","nodeType":"YulTypedName","src":"9099:6:4","type":""}],"src":"9040:329:4"},{"body":{"nativeSrc":"9428:51:4","nodeType":"YulBlock","src":"9428:51:4","statements":[{"nativeSrc":"9438:35:4","nodeType":"YulAssignment","src":"9438:35:4","value":{"arguments":[{"name":"value","nativeSrc":"9467:5:4","nodeType":"YulIdentifier","src":"9467:5:4"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"9449:17:4","nodeType":"YulIdentifier","src":"9449:17:4"},"nativeSrc":"9449:24:4","nodeType":"YulFunctionCall","src":"9449:24:4"},"variableNames":[{"name":"cleaned","nativeSrc":"9438:7:4","nodeType":"YulIdentifier","src":"9438:7:4"}]}]},"name":"cleanup_t_address_payable","nativeSrc":"9375:104:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9410:5:4","nodeType":"YulTypedName","src":"9410:5:4","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"9420:7:4","nodeType":"YulTypedName","src":"9420:7:4","type":""}],"src":"9375:104:4"},{"body":{"nativeSrc":"9566:61:4","nodeType":"YulBlock","src":"9566:61:4","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9583:3:4","nodeType":"YulIdentifier","src":"9583:3:4"},{"arguments":[{"name":"value","nativeSrc":"9614:5:4","nodeType":"YulIdentifier","src":"9614:5:4"}],"functionName":{"name":"cleanup_t_address_payable","nativeSrc":"9588:25:4","nodeType":"YulIdentifier","src":"9588:25:4"},"nativeSrc":"9588:32:4","nodeType":"YulFunctionCall","src":"9588:32:4"}],"functionName":{"name":"mstore","nativeSrc":"9576:6:4","nodeType":"YulIdentifier","src":"9576:6:4"},"nativeSrc":"9576:45:4","nodeType":"YulFunctionCall","src":"9576:45:4"},"nativeSrc":"9576:45:4","nodeType":"YulExpressionStatement","src":"9576:45:4"}]},"name":"abi_encode_t_address_payable_to_t_address_payable_fromStack","nativeSrc":"9485:142:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9554:5:4","nodeType":"YulTypedName","src":"9554:5:4","type":""},{"name":"pos","nativeSrc":"9561:3:4","nodeType":"YulTypedName","src":"9561:3:4","type":""}],"src":"9485:142:4"},{"body":{"nativeSrc":"9747:140:4","nodeType":"YulBlock","src":"9747:140:4","statements":[{"nativeSrc":"9757:26:4","nodeType":"YulAssignment","src":"9757:26:4","value":{"arguments":[{"name":"headStart","nativeSrc":"9769:9:4","nodeType":"YulIdentifier","src":"9769:9:4"},{"kind":"number","nativeSrc":"9780:2:4","nodeType":"YulLiteral","src":"9780:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9765:3:4","nodeType":"YulIdentifier","src":"9765:3:4"},"nativeSrc":"9765:18:4","nodeType":"YulFunctionCall","src":"9765:18:4"},"variableNames":[{"name":"tail","nativeSrc":"9757:4:4","nodeType":"YulIdentifier","src":"9757:4:4"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9853:6:4","nodeType":"YulIdentifier","src":"9853:6:4"},{"arguments":[{"name":"headStart","nativeSrc":"9866:9:4","nodeType":"YulIdentifier","src":"9866:9:4"},{"kind":"number","nativeSrc":"9877:1:4","nodeType":"YulLiteral","src":"9877:1:4","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9862:3:4","nodeType":"YulIdentifier","src":"9862:3:4"},"nativeSrc":"9862:17:4","nodeType":"YulFunctionCall","src":"9862:17:4"}],"functionName":{"name":"abi_encode_t_address_payable_to_t_address_payable_fromStack","nativeSrc":"9793:59:4","nodeType":"YulIdentifier","src":"9793:59:4"},"nativeSrc":"9793:87:4","nodeType":"YulFunctionCall","src":"9793:87:4"},"nativeSrc":"9793:87:4","nodeType":"YulExpressionStatement","src":"9793:87:4"}]},"name":"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed","nativeSrc":"9633:254:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9719:9:4","nodeType":"YulTypedName","src":"9719:9:4","type":""},{"name":"value0","nativeSrc":"9731:6:4","nodeType":"YulTypedName","src":"9731:6:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9742:4:4","nodeType":"YulTypedName","src":"9742:4:4","type":""}],"src":"9633:254:4"},{"body":{"nativeSrc":"9958:53:4","nodeType":"YulBlock","src":"9958:53:4","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9975:3:4","nodeType":"YulIdentifier","src":"9975:3:4"},{"arguments":[{"name":"value","nativeSrc":"9998:5:4","nodeType":"YulIdentifier","src":"9998:5:4"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9980:17:4","nodeType":"YulIdentifier","src":"9980:17:4"},"nativeSrc":"9980:24:4","nodeType":"YulFunctionCall","src":"9980:24:4"}],"functionName":{"name":"mstore","nativeSrc":"9968:6:4","nodeType":"YulIdentifier","src":"9968:6:4"},"nativeSrc":"9968:37:4","nodeType":"YulFunctionCall","src":"9968:37:4"},"nativeSrc":"9968:37:4","nodeType":"YulExpressionStatement","src":"9968:37:4"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"9893:118:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9946:5:4","nodeType":"YulTypedName","src":"9946:5:4","type":""},{"name":"pos","nativeSrc":"9953:3:4","nodeType":"YulTypedName","src":"9953:3:4","type":""}],"src":"9893:118:4"},{"body":{"nativeSrc":"10115:124:4","nodeType":"YulBlock","src":"10115:124:4","statements":[{"nativeSrc":"10125:26:4","nodeType":"YulAssignment","src":"10125:26:4","value":{"arguments":[{"name":"headStart","nativeSrc":"10137:9:4","nodeType":"YulIdentifier","src":"10137:9:4"},{"kind":"number","nativeSrc":"10148:2:4","nodeType":"YulLiteral","src":"10148:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10133:3:4","nodeType":"YulIdentifier","src":"10133:3:4"},"nativeSrc":"10133:18:4","nodeType":"YulFunctionCall","src":"10133:18:4"},"variableNames":[{"name":"tail","nativeSrc":"10125:4:4","nodeType":"YulIdentifier","src":"10125:4:4"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10205:6:4","nodeType":"YulIdentifier","src":"10205:6:4"},{"arguments":[{"name":"headStart","nativeSrc":"10218:9:4","nodeType":"YulIdentifier","src":"10218:9:4"},{"kind":"number","nativeSrc":"10229:1:4","nodeType":"YulLiteral","src":"10229:1:4","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10214:3:4","nodeType":"YulIdentifier","src":"10214:3:4"},"nativeSrc":"10214:17:4","nodeType":"YulFunctionCall","src":"10214:17:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10161:43:4","nodeType":"YulIdentifier","src":"10161:43:4"},"nativeSrc":"10161:71:4","nodeType":"YulFunctionCall","src":"10161:71:4"},"nativeSrc":"10161:71:4","nodeType":"YulExpressionStatement","src":"10161:71:4"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"10017:222:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10087:9:4","nodeType":"YulTypedName","src":"10087:9:4","type":""},{"name":"value0","nativeSrc":"10099:6:4","nodeType":"YulTypedName","src":"10099:6:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10110:4:4","nodeType":"YulTypedName","src":"10110:4:4","type":""}],"src":"10017:222:4"},{"body":{"nativeSrc":"10341:73:4","nodeType":"YulBlock","src":"10341:73:4","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10358:3:4","nodeType":"YulIdentifier","src":"10358:3:4"},{"name":"length","nativeSrc":"10363:6:4","nodeType":"YulIdentifier","src":"10363:6:4"}],"functionName":{"name":"mstore","nativeSrc":"10351:6:4","nodeType":"YulIdentifier","src":"10351:6:4"},"nativeSrc":"10351:19:4","nodeType":"YulFunctionCall","src":"10351:19:4"},"nativeSrc":"10351:19:4","nodeType":"YulExpressionStatement","src":"10351:19:4"},{"nativeSrc":"10379:29:4","nodeType":"YulAssignment","src":"10379:29:4","value":{"arguments":[{"name":"pos","nativeSrc":"10398:3:4","nodeType":"YulIdentifier","src":"10398:3:4"},{"kind":"number","nativeSrc":"10403:4:4","nodeType":"YulLiteral","src":"10403:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10394:3:4","nodeType":"YulIdentifier","src":"10394:3:4"},"nativeSrc":"10394:14:4","nodeType":"YulFunctionCall","src":"10394:14:4"},"variableNames":[{"name":"updated_pos","nativeSrc":"10379:11:4","nodeType":"YulIdentifier","src":"10379:11:4"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"10245:169:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"10313:3:4","nodeType":"YulTypedName","src":"10313:3:4","type":""},{"name":"length","nativeSrc":"10318:6:4","nodeType":"YulTypedName","src":"10318:6:4","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"10329:11:4","nodeType":"YulTypedName","src":"10329:11:4","type":""}],"src":"10245:169:4"},{"body":{"nativeSrc":"10526:62:4","nodeType":"YulBlock","src":"10526:62:4","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"10548:6:4","nodeType":"YulIdentifier","src":"10548:6:4"},{"kind":"number","nativeSrc":"10556:1:4","nodeType":"YulLiteral","src":"10556:1:4","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10544:3:4","nodeType":"YulIdentifier","src":"10544:3:4"},"nativeSrc":"10544:14:4","nodeType":"YulFunctionCall","src":"10544:14:4"},{"hexValue":"52616666656c206973206e6f74206f70656e","kind":"string","nativeSrc":"10560:20:4","nodeType":"YulLiteral","src":"10560:20:4","type":"","value":"Raffel is not open"}],"functionName":{"name":"mstore","nativeSrc":"10537:6:4","nodeType":"YulIdentifier","src":"10537:6:4"},"nativeSrc":"10537:44:4","nodeType":"YulFunctionCall","src":"10537:44:4"},"nativeSrc":"10537:44:4","nodeType":"YulExpressionStatement","src":"10537:44:4"}]},"name":"store_literal_in_memory_1c0f13643c7a49cb913e5f88b455a6e8d1710e21557a0739c837b716380e00f8","nativeSrc":"10420:168:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"10518:6:4","nodeType":"YulTypedName","src":"10518:6:4","type":""}],"src":"10420:168:4"},{"body":{"nativeSrc":"10740:220:4","nodeType":"YulBlock","src":"10740:220:4","statements":[{"nativeSrc":"10750:74:4","nodeType":"YulAssignment","src":"10750:74:4","value":{"arguments":[{"name":"pos","nativeSrc":"10816:3:4","nodeType":"YulIdentifier","src":"10816:3:4"},{"kind":"number","nativeSrc":"10821:2:4","nodeType":"YulLiteral","src":"10821:2:4","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"10757:58:4","nodeType":"YulIdentifier","src":"10757:58:4"},"nativeSrc":"10757:67:4","nodeType":"YulFunctionCall","src":"10757:67:4"},"variableNames":[{"name":"pos","nativeSrc":"10750:3:4","nodeType":"YulIdentifier","src":"10750:3:4"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"10922:3:4","nodeType":"YulIdentifier","src":"10922:3:4"}],"functionName":{"name":"store_literal_in_memory_1c0f13643c7a49cb913e5f88b455a6e8d1710e21557a0739c837b716380e00f8","nativeSrc":"10833:88:4","nodeType":"YulIdentifier","src":"10833:88:4"},"nativeSrc":"10833:93:4","nodeType":"YulFunctionCall","src":"10833:93:4"},"nativeSrc":"10833:93:4","nodeType":"YulExpressionStatement","src":"10833:93:4"},{"nativeSrc":"10935:19:4","nodeType":"YulAssignment","src":"10935:19:4","value":{"arguments":[{"name":"pos","nativeSrc":"10946:3:4","nodeType":"YulIdentifier","src":"10946:3:4"},{"kind":"number","nativeSrc":"10951:2:4","nodeType":"YulLiteral","src":"10951:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10942:3:4","nodeType":"YulIdentifier","src":"10942:3:4"},"nativeSrc":"10942:12:4","nodeType":"YulFunctionCall","src":"10942:12:4"},"variableNames":[{"name":"end","nativeSrc":"10935:3:4","nodeType":"YulIdentifier","src":"10935:3:4"}]}]},"name":"abi_encode_t_stringliteral_1c0f13643c7a49cb913e5f88b455a6e8d1710e21557a0739c837b716380e00f8_to_t_string_memory_ptr_fromStack","nativeSrc":"10594:366:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"10728:3:4","nodeType":"YulTypedName","src":"10728:3:4","type":""}],"returnVariables":[{"name":"end","nativeSrc":"10736:3:4","nodeType":"YulTypedName","src":"10736:3:4","type":""}],"src":"10594:366:4"},{"body":{"nativeSrc":"11137:248:4","nodeType":"YulBlock","src":"11137:248:4","statements":[{"nativeSrc":"11147:26:4","nodeType":"YulAssignment","src":"11147:26:4","value":{"arguments":[{"name":"headStart","nativeSrc":"11159:9:4","nodeType":"YulIdentifier","src":"11159:9:4"},{"kind":"number","nativeSrc":"11170:2:4","nodeType":"YulLiteral","src":"11170:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11155:3:4","nodeType":"YulIdentifier","src":"11155:3:4"},"nativeSrc":"11155:18:4","nodeType":"YulFunctionCall","src":"11155:18:4"},"variableNames":[{"name":"tail","nativeSrc":"11147:4:4","nodeType":"YulIdentifier","src":"11147:4:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11194:9:4","nodeType":"YulIdentifier","src":"11194:9:4"},{"kind":"number","nativeSrc":"11205:1:4","nodeType":"YulLiteral","src":"11205:1:4","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11190:3:4","nodeType":"YulIdentifier","src":"11190:3:4"},"nativeSrc":"11190:17:4","nodeType":"YulFunctionCall","src":"11190:17:4"},{"arguments":[{"name":"tail","nativeSrc":"11213:4:4","nodeType":"YulIdentifier","src":"11213:4:4"},{"name":"headStart","nativeSrc":"11219:9:4","nodeType":"YulIdentifier","src":"11219:9:4"}],"functionName":{"name":"sub","nativeSrc":"11209:3:4","nodeType":"YulIdentifier","src":"11209:3:4"},"nativeSrc":"11209:20:4","nodeType":"YulFunctionCall","src":"11209:20:4"}],"functionName":{"name":"mstore","nativeSrc":"11183:6:4","nodeType":"YulIdentifier","src":"11183:6:4"},"nativeSrc":"11183:47:4","nodeType":"YulFunctionCall","src":"11183:47:4"},"nativeSrc":"11183:47:4","nodeType":"YulExpressionStatement","src":"11183:47:4"},{"nativeSrc":"11239:139:4","nodeType":"YulAssignment","src":"11239:139:4","value":{"arguments":[{"name":"tail","nativeSrc":"11373:4:4","nodeType":"YulIdentifier","src":"11373:4:4"}],"functionName":{"name":"abi_encode_t_stringliteral_1c0f13643c7a49cb913e5f88b455a6e8d1710e21557a0739c837b716380e00f8_to_t_string_memory_ptr_fromStack","nativeSrc":"11247:124:4","nodeType":"YulIdentifier","src":"11247:124:4"},"nativeSrc":"11247:131:4","nodeType":"YulFunctionCall","src":"11247:131:4"},"variableNames":[{"name":"tail","nativeSrc":"11239:4:4","nodeType":"YulIdentifier","src":"11239:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_1c0f13643c7a49cb913e5f88b455a6e8d1710e21557a0739c837b716380e00f8__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"10966:419:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11117:9:4","nodeType":"YulTypedName","src":"11117:9:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11132:4:4","nodeType":"YulTypedName","src":"11132:4:4","type":""}],"src":"10966:419:4"},{"body":{"nativeSrc":"11517:206:4","nodeType":"YulBlock","src":"11517:206:4","statements":[{"nativeSrc":"11527:26:4","nodeType":"YulAssignment","src":"11527:26:4","value":{"arguments":[{"name":"headStart","nativeSrc":"11539:9:4","nodeType":"YulIdentifier","src":"11539:9:4"},{"kind":"number","nativeSrc":"11550:2:4","nodeType":"YulLiteral","src":"11550:2:4","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11535:3:4","nodeType":"YulIdentifier","src":"11535:3:4"},"nativeSrc":"11535:18:4","nodeType":"YulFunctionCall","src":"11535:18:4"},"variableNames":[{"name":"tail","nativeSrc":"11527:4:4","nodeType":"YulIdentifier","src":"11527:4:4"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"11607:6:4","nodeType":"YulIdentifier","src":"11607:6:4"},{"arguments":[{"name":"headStart","nativeSrc":"11620:9:4","nodeType":"YulIdentifier","src":"11620:9:4"},{"kind":"number","nativeSrc":"11631:1:4","nodeType":"YulLiteral","src":"11631:1:4","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11616:3:4","nodeType":"YulIdentifier","src":"11616:3:4"},"nativeSrc":"11616:17:4","nodeType":"YulFunctionCall","src":"11616:17:4"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"11563:43:4","nodeType":"YulIdentifier","src":"11563:43:4"},"nativeSrc":"11563:71:4","nodeType":"YulFunctionCall","src":"11563:71:4"},"nativeSrc":"11563:71:4","nodeType":"YulExpressionStatement","src":"11563:71:4"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"11688:6:4","nodeType":"YulIdentifier","src":"11688:6:4"},{"arguments":[{"name":"headStart","nativeSrc":"11701:9:4","nodeType":"YulIdentifier","src":"11701:9:4"},{"kind":"number","nativeSrc":"11712:2:4","nodeType":"YulLiteral","src":"11712:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11697:3:4","nodeType":"YulIdentifier","src":"11697:3:4"},"nativeSrc":"11697:18:4","nodeType":"YulFunctionCall","src":"11697:18:4"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"11644:43:4","nodeType":"YulIdentifier","src":"11644:43:4"},"nativeSrc":"11644:72:4","nodeType":"YulFunctionCall","src":"11644:72:4"},"nativeSrc":"11644:72:4","nodeType":"YulExpressionStatement","src":"11644:72:4"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"11391:332:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11481:9:4","nodeType":"YulTypedName","src":"11481:9:4","type":""},{"name":"value1","nativeSrc":"11493:6:4","nodeType":"YulTypedName","src":"11493:6:4","type":""},{"name":"value0","nativeSrc":"11501:6:4","nodeType":"YulTypedName","src":"11501:6:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11512:4:4","nodeType":"YulTypedName","src":"11512:4:4","type":""}],"src":"11391:332:4"},{"body":{"nativeSrc":"11883:288:4","nodeType":"YulBlock","src":"11883:288:4","statements":[{"nativeSrc":"11893:26:4","nodeType":"YulAssignment","src":"11893:26:4","value":{"arguments":[{"name":"headStart","nativeSrc":"11905:9:4","nodeType":"YulIdentifier","src":"11905:9:4"},{"kind":"number","nativeSrc":"11916:2:4","nodeType":"YulLiteral","src":"11916:2:4","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11901:3:4","nodeType":"YulIdentifier","src":"11901:3:4"},"nativeSrc":"11901:18:4","nodeType":"YulFunctionCall","src":"11901:18:4"},"variableNames":[{"name":"tail","nativeSrc":"11893:4:4","nodeType":"YulIdentifier","src":"11893:4:4"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"11973:6:4","nodeType":"YulIdentifier","src":"11973:6:4"},{"arguments":[{"name":"headStart","nativeSrc":"11986:9:4","nodeType":"YulIdentifier","src":"11986:9:4"},{"kind":"number","nativeSrc":"11997:1:4","nodeType":"YulLiteral","src":"11997:1:4","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11982:3:4","nodeType":"YulIdentifier","src":"11982:3:4"},"nativeSrc":"11982:17:4","nodeType":"YulFunctionCall","src":"11982:17:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11929:43:4","nodeType":"YulIdentifier","src":"11929:43:4"},"nativeSrc":"11929:71:4","nodeType":"YulFunctionCall","src":"11929:71:4"},"nativeSrc":"11929:71:4","nodeType":"YulExpressionStatement","src":"11929:71:4"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"12054:6:4","nodeType":"YulIdentifier","src":"12054:6:4"},{"arguments":[{"name":"headStart","nativeSrc":"12067:9:4","nodeType":"YulIdentifier","src":"12067:9:4"},{"kind":"number","nativeSrc":"12078:2:4","nodeType":"YulLiteral","src":"12078:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12063:3:4","nodeType":"YulIdentifier","src":"12063:3:4"},"nativeSrc":"12063:18:4","nodeType":"YulFunctionCall","src":"12063:18:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12010:43:4","nodeType":"YulIdentifier","src":"12010:43:4"},"nativeSrc":"12010:72:4","nodeType":"YulFunctionCall","src":"12010:72:4"},"nativeSrc":"12010:72:4","nodeType":"YulExpressionStatement","src":"12010:72:4"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"12136:6:4","nodeType":"YulIdentifier","src":"12136:6:4"},{"arguments":[{"name":"headStart","nativeSrc":"12149:9:4","nodeType":"YulIdentifier","src":"12149:9:4"},{"kind":"number","nativeSrc":"12160:2:4","nodeType":"YulLiteral","src":"12160:2:4","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12145:3:4","nodeType":"YulIdentifier","src":"12145:3:4"},"nativeSrc":"12145:18:4","nodeType":"YulFunctionCall","src":"12145:18:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12092:43:4","nodeType":"YulIdentifier","src":"12092:43:4"},"nativeSrc":"12092:72:4","nodeType":"YulFunctionCall","src":"12092:72:4"},"nativeSrc":"12092:72:4","nodeType":"YulExpressionStatement","src":"12092:72:4"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"11729:442:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11839:9:4","nodeType":"YulTypedName","src":"11839:9:4","type":""},{"name":"value2","nativeSrc":"11851:6:4","nodeType":"YulTypedName","src":"11851:6:4","type":""},{"name":"value1","nativeSrc":"11859:6:4","nodeType":"YulTypedName","src":"11859:6:4","type":""},{"name":"value0","nativeSrc":"11867:6:4","nodeType":"YulTypedName","src":"11867:6:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11878:4:4","nodeType":"YulTypedName","src":"11878:4:4","type":""}],"src":"11729:442:4"},{"body":{"nativeSrc":"12222:32:4","nodeType":"YulBlock","src":"12222:32:4","statements":[{"nativeSrc":"12232:16:4","nodeType":"YulAssignment","src":"12232:16:4","value":{"name":"value","nativeSrc":"12243:5:4","nodeType":"YulIdentifier","src":"12243:5:4"},"variableNames":[{"name":"cleaned","nativeSrc":"12232:7:4","nodeType":"YulIdentifier","src":"12232:7:4"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"12177:77:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12204:5:4","nodeType":"YulTypedName","src":"12204:5:4","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"12214:7:4","nodeType":"YulTypedName","src":"12214:7:4","type":""}],"src":"12177:77:4"},{"body":{"nativeSrc":"12325:53:4","nodeType":"YulBlock","src":"12325:53:4","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"12342:3:4","nodeType":"YulIdentifier","src":"12342:3:4"},{"arguments":[{"name":"value","nativeSrc":"12365:5:4","nodeType":"YulIdentifier","src":"12365:5:4"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"12347:17:4","nodeType":"YulIdentifier","src":"12347:17:4"},"nativeSrc":"12347:24:4","nodeType":"YulFunctionCall","src":"12347:24:4"}],"functionName":{"name":"mstore","nativeSrc":"12335:6:4","nodeType":"YulIdentifier","src":"12335:6:4"},"nativeSrc":"12335:37:4","nodeType":"YulFunctionCall","src":"12335:37:4"},"nativeSrc":"12335:37:4","nodeType":"YulExpressionStatement","src":"12335:37:4"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"12260:118:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12313:5:4","nodeType":"YulTypedName","src":"12313:5:4","type":""},{"name":"pos","nativeSrc":"12320:3:4","nodeType":"YulTypedName","src":"12320:3:4","type":""}],"src":"12260:118:4"},{"body":{"nativeSrc":"12428:57:4","nodeType":"YulBlock","src":"12428:57:4","statements":[{"nativeSrc":"12438:41:4","nodeType":"YulAssignment","src":"12438:41:4","value":{"arguments":[{"name":"value","nativeSrc":"12453:5:4","nodeType":"YulIdentifier","src":"12453:5:4"},{"kind":"number","nativeSrc":"12460:18:4","nodeType":"YulLiteral","src":"12460:18:4","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"12449:3:4","nodeType":"YulIdentifier","src":"12449:3:4"},"nativeSrc":"12449:30:4","nodeType":"YulFunctionCall","src":"12449:30:4"},"variableNames":[{"name":"cleaned","nativeSrc":"12438:7:4","nodeType":"YulIdentifier","src":"12438:7:4"}]}]},"name":"cleanup_t_uint64","nativeSrc":"12384:101:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12410:5:4","nodeType":"YulTypedName","src":"12410:5:4","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"12420:7:4","nodeType":"YulTypedName","src":"12420:7:4","type":""}],"src":"12384:101:4"},{"body":{"nativeSrc":"12554:52:4","nodeType":"YulBlock","src":"12554:52:4","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"12571:3:4","nodeType":"YulIdentifier","src":"12571:3:4"},{"arguments":[{"name":"value","nativeSrc":"12593:5:4","nodeType":"YulIdentifier","src":"12593:5:4"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"12576:16:4","nodeType":"YulIdentifier","src":"12576:16:4"},"nativeSrc":"12576:23:4","nodeType":"YulFunctionCall","src":"12576:23:4"}],"functionName":{"name":"mstore","nativeSrc":"12564:6:4","nodeType":"YulIdentifier","src":"12564:6:4"},"nativeSrc":"12564:36:4","nodeType":"YulFunctionCall","src":"12564:36:4"},"nativeSrc":"12564:36:4","nodeType":"YulExpressionStatement","src":"12564:36:4"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nativeSrc":"12491:115:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12542:5:4","nodeType":"YulTypedName","src":"12542:5:4","type":""},{"name":"pos","nativeSrc":"12549:3:4","nodeType":"YulTypedName","src":"12549:3:4","type":""}],"src":"12491:115:4"},{"body":{"nativeSrc":"12814:446:4","nodeType":"YulBlock","src":"12814:446:4","statements":[{"nativeSrc":"12824:27:4","nodeType":"YulAssignment","src":"12824:27:4","value":{"arguments":[{"name":"headStart","nativeSrc":"12836:9:4","nodeType":"YulIdentifier","src":"12836:9:4"},{"kind":"number","nativeSrc":"12847:3:4","nodeType":"YulLiteral","src":"12847:3:4","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"12832:3:4","nodeType":"YulIdentifier","src":"12832:3:4"},"nativeSrc":"12832:19:4","nodeType":"YulFunctionCall","src":"12832:19:4"},"variableNames":[{"name":"tail","nativeSrc":"12824:4:4","nodeType":"YulIdentifier","src":"12824:4:4"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12905:6:4","nodeType":"YulIdentifier","src":"12905:6:4"},{"arguments":[{"name":"headStart","nativeSrc":"12918:9:4","nodeType":"YulIdentifier","src":"12918:9:4"},{"kind":"number","nativeSrc":"12929:1:4","nodeType":"YulLiteral","src":"12929:1:4","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12914:3:4","nodeType":"YulIdentifier","src":"12914:3:4"},"nativeSrc":"12914:17:4","nodeType":"YulFunctionCall","src":"12914:17:4"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"12861:43:4","nodeType":"YulIdentifier","src":"12861:43:4"},"nativeSrc":"12861:71:4","nodeType":"YulFunctionCall","src":"12861:71:4"},"nativeSrc":"12861:71:4","nodeType":"YulExpressionStatement","src":"12861:71:4"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"12984:6:4","nodeType":"YulIdentifier","src":"12984:6:4"},{"arguments":[{"name":"headStart","nativeSrc":"12997:9:4","nodeType":"YulIdentifier","src":"12997:9:4"},{"kind":"number","nativeSrc":"13008:2:4","nodeType":"YulLiteral","src":"13008:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12993:3:4","nodeType":"YulIdentifier","src":"12993:3:4"},"nativeSrc":"12993:18:4","nodeType":"YulFunctionCall","src":"12993:18:4"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nativeSrc":"12942:41:4","nodeType":"YulIdentifier","src":"12942:41:4"},"nativeSrc":"12942:70:4","nodeType":"YulFunctionCall","src":"12942:70:4"},"nativeSrc":"12942:70:4","nodeType":"YulExpressionStatement","src":"12942:70:4"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"13064:6:4","nodeType":"YulIdentifier","src":"13064:6:4"},{"arguments":[{"name":"headStart","nativeSrc":"13077:9:4","nodeType":"YulIdentifier","src":"13077:9:4"},{"kind":"number","nativeSrc":"13088:2:4","nodeType":"YulLiteral","src":"13088:2:4","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13073:3:4","nodeType":"YulIdentifier","src":"13073:3:4"},"nativeSrc":"13073:18:4","nodeType":"YulFunctionCall","src":"13073:18:4"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nativeSrc":"13022:41:4","nodeType":"YulIdentifier","src":"13022:41:4"},"nativeSrc":"13022:70:4","nodeType":"YulFunctionCall","src":"13022:70:4"},"nativeSrc":"13022:70:4","nodeType":"YulExpressionStatement","src":"13022:70:4"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"13144:6:4","nodeType":"YulIdentifier","src":"13144:6:4"},{"arguments":[{"name":"headStart","nativeSrc":"13157:9:4","nodeType":"YulIdentifier","src":"13157:9:4"},{"kind":"number","nativeSrc":"13168:2:4","nodeType":"YulLiteral","src":"13168:2:4","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"13153:3:4","nodeType":"YulIdentifier","src":"13153:3:4"},"nativeSrc":"13153:18:4","nodeType":"YulFunctionCall","src":"13153:18:4"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"13102:41:4","nodeType":"YulIdentifier","src":"13102:41:4"},"nativeSrc":"13102:70:4","nodeType":"YulFunctionCall","src":"13102:70:4"},"nativeSrc":"13102:70:4","nodeType":"YulExpressionStatement","src":"13102:70:4"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"13224:6:4","nodeType":"YulIdentifier","src":"13224:6:4"},{"arguments":[{"name":"headStart","nativeSrc":"13237:9:4","nodeType":"YulIdentifier","src":"13237:9:4"},{"kind":"number","nativeSrc":"13248:3:4","nodeType":"YulLiteral","src":"13248:3:4","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"13233:3:4","nodeType":"YulIdentifier","src":"13233:3:4"},"nativeSrc":"13233:19:4","nodeType":"YulFunctionCall","src":"13233:19:4"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"13182:41:4","nodeType":"YulIdentifier","src":"13182:41:4"},"nativeSrc":"13182:71:4","nodeType":"YulFunctionCall","src":"13182:71:4"},"nativeSrc":"13182:71:4","nodeType":"YulExpressionStatement","src":"13182:71:4"}]},"name":"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed","nativeSrc":"12612:648:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12754:9:4","nodeType":"YulTypedName","src":"12754:9:4","type":""},{"name":"value4","nativeSrc":"12766:6:4","nodeType":"YulTypedName","src":"12766:6:4","type":""},{"name":"value3","nativeSrc":"12774:6:4","nodeType":"YulTypedName","src":"12774:6:4","type":""},{"name":"value2","nativeSrc":"12782:6:4","nodeType":"YulTypedName","src":"12782:6:4","type":""},{"name":"value1","nativeSrc":"12790:6:4","nodeType":"YulTypedName","src":"12790:6:4","type":""},{"name":"value0","nativeSrc":"12798:6:4","nodeType":"YulTypedName","src":"12798:6:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12809:4:4","nodeType":"YulTypedName","src":"12809:4:4","type":""}],"src":"12612:648:4"},{"body":{"nativeSrc":"13329:80:4","nodeType":"YulBlock","src":"13329:80:4","statements":[{"nativeSrc":"13339:22:4","nodeType":"YulAssignment","src":"13339:22:4","value":{"arguments":[{"name":"offset","nativeSrc":"13354:6:4","nodeType":"YulIdentifier","src":"13354:6:4"}],"functionName":{"name":"mload","nativeSrc":"13348:5:4","nodeType":"YulIdentifier","src":"13348:5:4"},"nativeSrc":"13348:13:4","nodeType":"YulFunctionCall","src":"13348:13:4"},"variableNames":[{"name":"value","nativeSrc":"13339:5:4","nodeType":"YulIdentifier","src":"13339:5:4"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"13397:5:4","nodeType":"YulIdentifier","src":"13397:5:4"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"13370:26:4","nodeType":"YulIdentifier","src":"13370:26:4"},"nativeSrc":"13370:33:4","nodeType":"YulFunctionCall","src":"13370:33:4"},"nativeSrc":"13370:33:4","nodeType":"YulExpressionStatement","src":"13370:33:4"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"13266:143:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"13307:6:4","nodeType":"YulTypedName","src":"13307:6:4","type":""},{"name":"end","nativeSrc":"13315:3:4","nodeType":"YulTypedName","src":"13315:3:4","type":""}],"returnVariables":[{"name":"value","nativeSrc":"13323:5:4","nodeType":"YulTypedName","src":"13323:5:4","type":""}],"src":"13266:143:4"},{"body":{"nativeSrc":"13492:274:4","nodeType":"YulBlock","src":"13492:274:4","statements":[{"body":{"nativeSrc":"13538:83:4","nodeType":"YulBlock","src":"13538:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"13540:77:4","nodeType":"YulIdentifier","src":"13540:77:4"},"nativeSrc":"13540:79:4","nodeType":"YulFunctionCall","src":"13540:79:4"},"nativeSrc":"13540:79:4","nodeType":"YulExpressionStatement","src":"13540:79:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"13513:7:4","nodeType":"YulIdentifier","src":"13513:7:4"},{"name":"headStart","nativeSrc":"13522:9:4","nodeType":"YulIdentifier","src":"13522:9:4"}],"functionName":{"name":"sub","nativeSrc":"13509:3:4","nodeType":"YulIdentifier","src":"13509:3:4"},"nativeSrc":"13509:23:4","nodeType":"YulFunctionCall","src":"13509:23:4"},{"kind":"number","nativeSrc":"13534:2:4","nodeType":"YulLiteral","src":"13534:2:4","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"13505:3:4","nodeType":"YulIdentifier","src":"13505:3:4"},"nativeSrc":"13505:32:4","nodeType":"YulFunctionCall","src":"13505:32:4"},"nativeSrc":"13502:119:4","nodeType":"YulIf","src":"13502:119:4"},{"nativeSrc":"13631:128:4","nodeType":"YulBlock","src":"13631:128:4","statements":[{"nativeSrc":"13646:15:4","nodeType":"YulVariableDeclaration","src":"13646:15:4","value":{"kind":"number","nativeSrc":"13660:1:4","nodeType":"YulLiteral","src":"13660:1:4","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"13650:6:4","nodeType":"YulTypedName","src":"13650:6:4","type":""}]},{"nativeSrc":"13675:74:4","nodeType":"YulAssignment","src":"13675:74:4","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13721:9:4","nodeType":"YulIdentifier","src":"13721:9:4"},{"name":"offset","nativeSrc":"13732:6:4","nodeType":"YulIdentifier","src":"13732:6:4"}],"functionName":{"name":"add","nativeSrc":"13717:3:4","nodeType":"YulIdentifier","src":"13717:3:4"},"nativeSrc":"13717:22:4","nodeType":"YulFunctionCall","src":"13717:22:4"},{"name":"dataEnd","nativeSrc":"13741:7:4","nodeType":"YulIdentifier","src":"13741:7:4"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"13685:31:4","nodeType":"YulIdentifier","src":"13685:31:4"},"nativeSrc":"13685:64:4","nodeType":"YulFunctionCall","src":"13685:64:4"},"variableNames":[{"name":"value0","nativeSrc":"13675:6:4","nodeType":"YulIdentifier","src":"13675:6:4"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"13415:351:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13462:9:4","nodeType":"YulTypedName","src":"13462:9:4","type":""},{"name":"dataEnd","nativeSrc":"13473:7:4","nodeType":"YulTypedName","src":"13473:7:4","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"13485:6:4","nodeType":"YulTypedName","src":"13485:6:4","type":""}],"src":"13415:351:4"},{"body":{"nativeSrc":"13800:152:4","nodeType":"YulBlock","src":"13800:152:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13817:1:4","nodeType":"YulLiteral","src":"13817:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"13820:77:4","nodeType":"YulLiteral","src":"13820:77:4","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"13810:6:4","nodeType":"YulIdentifier","src":"13810:6:4"},"nativeSrc":"13810:88:4","nodeType":"YulFunctionCall","src":"13810:88:4"},"nativeSrc":"13810:88:4","nodeType":"YulExpressionStatement","src":"13810:88:4"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13914:1:4","nodeType":"YulLiteral","src":"13914:1:4","type":"","value":"4"},{"kind":"number","nativeSrc":"13917:4:4","nodeType":"YulLiteral","src":"13917:4:4","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"13907:6:4","nodeType":"YulIdentifier","src":"13907:6:4"},"nativeSrc":"13907:15:4","nodeType":"YulFunctionCall","src":"13907:15:4"},"nativeSrc":"13907:15:4","nodeType":"YulExpressionStatement","src":"13907:15:4"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13938:1:4","nodeType":"YulLiteral","src":"13938:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"13941:4:4","nodeType":"YulLiteral","src":"13941:4:4","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"13931:6:4","nodeType":"YulIdentifier","src":"13931:6:4"},"nativeSrc":"13931:15:4","nodeType":"YulFunctionCall","src":"13931:15:4"},"nativeSrc":"13931:15:4","nodeType":"YulExpressionStatement","src":"13931:15:4"}]},"name":"panic_error_0x32","nativeSrc":"13772:180:4","nodeType":"YulFunctionDefinition","src":"13772:180:4"},{"body":{"nativeSrc":"13986:152:4","nodeType":"YulBlock","src":"13986:152:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"14003:1:4","nodeType":"YulLiteral","src":"14003:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"14006:77:4","nodeType":"YulLiteral","src":"14006:77:4","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"13996:6:4","nodeType":"YulIdentifier","src":"13996:6:4"},"nativeSrc":"13996:88:4","nodeType":"YulFunctionCall","src":"13996:88:4"},"nativeSrc":"13996:88:4","nodeType":"YulExpressionStatement","src":"13996:88:4"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14100:1:4","nodeType":"YulLiteral","src":"14100:1:4","type":"","value":"4"},{"kind":"number","nativeSrc":"14103:4:4","nodeType":"YulLiteral","src":"14103:4:4","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"14093:6:4","nodeType":"YulIdentifier","src":"14093:6:4"},"nativeSrc":"14093:15:4","nodeType":"YulFunctionCall","src":"14093:15:4"},"nativeSrc":"14093:15:4","nodeType":"YulExpressionStatement","src":"14093:15:4"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14124:1:4","nodeType":"YulLiteral","src":"14124:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"14127:4:4","nodeType":"YulLiteral","src":"14127:4:4","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"14117:6:4","nodeType":"YulIdentifier","src":"14117:6:4"},"nativeSrc":"14117:15:4","nodeType":"YulFunctionCall","src":"14117:15:4"},"nativeSrc":"14117:15:4","nodeType":"YulExpressionStatement","src":"14117:15:4"}]},"name":"panic_error_0x12","nativeSrc":"13958:180:4","nodeType":"YulFunctionDefinition","src":"13958:180:4"},{"body":{"nativeSrc":"14178:142:4","nodeType":"YulBlock","src":"14178:142:4","statements":[{"nativeSrc":"14188:25:4","nodeType":"YulAssignment","src":"14188:25:4","value":{"arguments":[{"name":"x","nativeSrc":"14211:1:4","nodeType":"YulIdentifier","src":"14211:1:4"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"14193:17:4","nodeType":"YulIdentifier","src":"14193:17:4"},"nativeSrc":"14193:20:4","nodeType":"YulFunctionCall","src":"14193:20:4"},"variableNames":[{"name":"x","nativeSrc":"14188:1:4","nodeType":"YulIdentifier","src":"14188:1:4"}]},{"nativeSrc":"14222:25:4","nodeType":"YulAssignment","src":"14222:25:4","value":{"arguments":[{"name":"y","nativeSrc":"14245:1:4","nodeType":"YulIdentifier","src":"14245:1:4"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"14227:17:4","nodeType":"YulIdentifier","src":"14227:17:4"},"nativeSrc":"14227:20:4","nodeType":"YulFunctionCall","src":"14227:20:4"},"variableNames":[{"name":"y","nativeSrc":"14222:1:4","nodeType":"YulIdentifier","src":"14222:1:4"}]},{"body":{"nativeSrc":"14269:22:4","nodeType":"YulBlock","src":"14269:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"14271:16:4","nodeType":"YulIdentifier","src":"14271:16:4"},"nativeSrc":"14271:18:4","nodeType":"YulFunctionCall","src":"14271:18:4"},"nativeSrc":"14271:18:4","nodeType":"YulExpressionStatement","src":"14271:18:4"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"14266:1:4","nodeType":"YulIdentifier","src":"14266:1:4"}],"functionName":{"name":"iszero","nativeSrc":"14259:6:4","nodeType":"YulIdentifier","src":"14259:6:4"},"nativeSrc":"14259:9:4","nodeType":"YulFunctionCall","src":"14259:9:4"},"nativeSrc":"14256:35:4","nodeType":"YulIf","src":"14256:35:4"},{"nativeSrc":"14300:14:4","nodeType":"YulAssignment","src":"14300:14:4","value":{"arguments":[{"name":"x","nativeSrc":"14309:1:4","nodeType":"YulIdentifier","src":"14309:1:4"},{"name":"y","nativeSrc":"14312:1:4","nodeType":"YulIdentifier","src":"14312:1:4"}],"functionName":{"name":"mod","nativeSrc":"14305:3:4","nodeType":"YulIdentifier","src":"14305:3:4"},"nativeSrc":"14305:9:4","nodeType":"YulFunctionCall","src":"14305:9:4"},"variableNames":[{"name":"r","nativeSrc":"14300:1:4","nodeType":"YulIdentifier","src":"14300:1:4"}]}]},"name":"mod_t_uint256","nativeSrc":"14144:176:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"14167:1:4","nodeType":"YulTypedName","src":"14167:1:4","type":""},{"name":"y","nativeSrc":"14170:1:4","nodeType":"YulTypedName","src":"14170:1:4","type":""}],"returnVariables":[{"name":"r","nativeSrc":"14176:1:4","nodeType":"YulTypedName","src":"14176:1:4","type":""}],"src":"14144:176:4"},{"body":{"nativeSrc":"14439:34:4","nodeType":"YulBlock","src":"14439:34:4","statements":[{"nativeSrc":"14449:18:4","nodeType":"YulAssignment","src":"14449:18:4","value":{"name":"pos","nativeSrc":"14464:3:4","nodeType":"YulIdentifier","src":"14464:3:4"},"variableNames":[{"name":"updated_pos","nativeSrc":"14449:11:4","nodeType":"YulIdentifier","src":"14449:11:4"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"14326:147:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"14411:3:4","nodeType":"YulTypedName","src":"14411:3:4","type":""},{"name":"length","nativeSrc":"14416:6:4","nodeType":"YulTypedName","src":"14416:6:4","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"14427:11:4","nodeType":"YulTypedName","src":"14427:11:4","type":""}],"src":"14326:147:4"},{"body":{"nativeSrc":"14585:8:4","nodeType":"YulBlock","src":"14585:8:4","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"14479:114:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"14577:6:4","nodeType":"YulTypedName","src":"14577:6:4","type":""}],"src":"14479:114:4"},{"body":{"nativeSrc":"14762:235:4","nodeType":"YulBlock","src":"14762:235:4","statements":[{"nativeSrc":"14772:90:4","nodeType":"YulAssignment","src":"14772:90:4","value":{"arguments":[{"name":"pos","nativeSrc":"14855:3:4","nodeType":"YulIdentifier","src":"14855:3:4"},{"kind":"number","nativeSrc":"14860:1:4","nodeType":"YulLiteral","src":"14860:1:4","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"14779:75:4","nodeType":"YulIdentifier","src":"14779:75:4"},"nativeSrc":"14779:83:4","nodeType":"YulFunctionCall","src":"14779:83:4"},"variableNames":[{"name":"pos","nativeSrc":"14772:3:4","nodeType":"YulIdentifier","src":"14772:3:4"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"14960:3:4","nodeType":"YulIdentifier","src":"14960:3:4"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"14871:88:4","nodeType":"YulIdentifier","src":"14871:88:4"},"nativeSrc":"14871:93:4","nodeType":"YulFunctionCall","src":"14871:93:4"},"nativeSrc":"14871:93:4","nodeType":"YulExpressionStatement","src":"14871:93:4"},{"nativeSrc":"14973:18:4","nodeType":"YulAssignment","src":"14973:18:4","value":{"arguments":[{"name":"pos","nativeSrc":"14984:3:4","nodeType":"YulIdentifier","src":"14984:3:4"},{"kind":"number","nativeSrc":"14989:1:4","nodeType":"YulLiteral","src":"14989:1:4","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14980:3:4","nodeType":"YulIdentifier","src":"14980:3:4"},"nativeSrc":"14980:11:4","nodeType":"YulFunctionCall","src":"14980:11:4"},"variableNames":[{"name":"end","nativeSrc":"14973:3:4","nodeType":"YulIdentifier","src":"14973:3:4"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"14599:398:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"14750:3:4","nodeType":"YulTypedName","src":"14750:3:4","type":""}],"returnVariables":[{"name":"end","nativeSrc":"14758:3:4","nodeType":"YulTypedName","src":"14758:3:4","type":""}],"src":"14599:398:4"},{"body":{"nativeSrc":"15191:191:4","nodeType":"YulBlock","src":"15191:191:4","statements":[{"nativeSrc":"15202:154:4","nodeType":"YulAssignment","src":"15202:154:4","value":{"arguments":[{"name":"pos","nativeSrc":"15352:3:4","nodeType":"YulIdentifier","src":"15352:3:4"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"15209:141:4","nodeType":"YulIdentifier","src":"15209:141:4"},"nativeSrc":"15209:147:4","nodeType":"YulFunctionCall","src":"15209:147:4"},"variableNames":[{"name":"pos","nativeSrc":"15202:3:4","nodeType":"YulIdentifier","src":"15202:3:4"}]},{"nativeSrc":"15366:10:4","nodeType":"YulAssignment","src":"15366:10:4","value":{"name":"pos","nativeSrc":"15373:3:4","nodeType":"YulIdentifier","src":"15373:3:4"},"variableNames":[{"name":"end","nativeSrc":"15366:3:4","nodeType":"YulIdentifier","src":"15366:3:4"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"15003:379:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"15178:3:4","nodeType":"YulTypedName","src":"15178:3:4","type":""}],"returnVariables":[{"name":"end","nativeSrc":"15187:3:4","nodeType":"YulTypedName","src":"15187:3:4","type":""}],"src":"15003:379:4"},{"body":{"nativeSrc":"15494:59:4","nodeType":"YulBlock","src":"15494:59:4","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"15516:6:4","nodeType":"YulIdentifier","src":"15516:6:4"},{"kind":"number","nativeSrc":"15524:1:4","nodeType":"YulLiteral","src":"15524:1:4","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15512:3:4","nodeType":"YulIdentifier","src":"15512:3:4"},"nativeSrc":"15512:14:4","nodeType":"YulFunctionCall","src":"15512:14:4"},{"hexValue":"5472616e73666572206661696c6564","kind":"string","nativeSrc":"15528:17:4","nodeType":"YulLiteral","src":"15528:17:4","type":"","value":"Transfer failed"}],"functionName":{"name":"mstore","nativeSrc":"15505:6:4","nodeType":"YulIdentifier","src":"15505:6:4"},"nativeSrc":"15505:41:4","nodeType":"YulFunctionCall","src":"15505:41:4"},"nativeSrc":"15505:41:4","nodeType":"YulExpressionStatement","src":"15505:41:4"}]},"name":"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","nativeSrc":"15388:165:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"15486:6:4","nodeType":"YulTypedName","src":"15486:6:4","type":""}],"src":"15388:165:4"},{"body":{"nativeSrc":"15705:220:4","nodeType":"YulBlock","src":"15705:220:4","statements":[{"nativeSrc":"15715:74:4","nodeType":"YulAssignment","src":"15715:74:4","value":{"arguments":[{"name":"pos","nativeSrc":"15781:3:4","nodeType":"YulIdentifier","src":"15781:3:4"},{"kind":"number","nativeSrc":"15786:2:4","nodeType":"YulLiteral","src":"15786:2:4","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"15722:58:4","nodeType":"YulIdentifier","src":"15722:58:4"},"nativeSrc":"15722:67:4","nodeType":"YulFunctionCall","src":"15722:67:4"},"variableNames":[{"name":"pos","nativeSrc":"15715:3:4","nodeType":"YulIdentifier","src":"15715:3:4"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"15887:3:4","nodeType":"YulIdentifier","src":"15887:3:4"}],"functionName":{"name":"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","nativeSrc":"15798:88:4","nodeType":"YulIdentifier","src":"15798:88:4"},"nativeSrc":"15798:93:4","nodeType":"YulFunctionCall","src":"15798:93:4"},"nativeSrc":"15798:93:4","nodeType":"YulExpressionStatement","src":"15798:93:4"},{"nativeSrc":"15900:19:4","nodeType":"YulAssignment","src":"15900:19:4","value":{"arguments":[{"name":"pos","nativeSrc":"15911:3:4","nodeType":"YulIdentifier","src":"15911:3:4"},{"kind":"number","nativeSrc":"15916:2:4","nodeType":"YulLiteral","src":"15916:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15907:3:4","nodeType":"YulIdentifier","src":"15907:3:4"},"nativeSrc":"15907:12:4","nodeType":"YulFunctionCall","src":"15907:12:4"},"variableNames":[{"name":"end","nativeSrc":"15900:3:4","nodeType":"YulIdentifier","src":"15900:3:4"}]}]},"name":"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack","nativeSrc":"15559:366:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"15693:3:4","nodeType":"YulTypedName","src":"15693:3:4","type":""}],"returnVariables":[{"name":"end","nativeSrc":"15701:3:4","nodeType":"YulTypedName","src":"15701:3:4","type":""}],"src":"15559:366:4"},{"body":{"nativeSrc":"16102:248:4","nodeType":"YulBlock","src":"16102:248:4","statements":[{"nativeSrc":"16112:26:4","nodeType":"YulAssignment","src":"16112:26:4","value":{"arguments":[{"name":"headStart","nativeSrc":"16124:9:4","nodeType":"YulIdentifier","src":"16124:9:4"},{"kind":"number","nativeSrc":"16135:2:4","nodeType":"YulLiteral","src":"16135:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16120:3:4","nodeType":"YulIdentifier","src":"16120:3:4"},"nativeSrc":"16120:18:4","nodeType":"YulFunctionCall","src":"16120:18:4"},"variableNames":[{"name":"tail","nativeSrc":"16112:4:4","nodeType":"YulIdentifier","src":"16112:4:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16159:9:4","nodeType":"YulIdentifier","src":"16159:9:4"},{"kind":"number","nativeSrc":"16170:1:4","nodeType":"YulLiteral","src":"16170:1:4","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16155:3:4","nodeType":"YulIdentifier","src":"16155:3:4"},"nativeSrc":"16155:17:4","nodeType":"YulFunctionCall","src":"16155:17:4"},{"arguments":[{"name":"tail","nativeSrc":"16178:4:4","nodeType":"YulIdentifier","src":"16178:4:4"},{"name":"headStart","nativeSrc":"16184:9:4","nodeType":"YulIdentifier","src":"16184:9:4"}],"functionName":{"name":"sub","nativeSrc":"16174:3:4","nodeType":"YulIdentifier","src":"16174:3:4"},"nativeSrc":"16174:20:4","nodeType":"YulFunctionCall","src":"16174:20:4"}],"functionName":{"name":"mstore","nativeSrc":"16148:6:4","nodeType":"YulIdentifier","src":"16148:6:4"},"nativeSrc":"16148:47:4","nodeType":"YulFunctionCall","src":"16148:47:4"},"nativeSrc":"16148:47:4","nodeType":"YulExpressionStatement","src":"16148:47:4"},{"nativeSrc":"16204:139:4","nodeType":"YulAssignment","src":"16204:139:4","value":{"arguments":[{"name":"tail","nativeSrc":"16338:4:4","nodeType":"YulIdentifier","src":"16338:4:4"}],"functionName":{"name":"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack","nativeSrc":"16212:124:4","nodeType":"YulIdentifier","src":"16212:124:4"},"nativeSrc":"16212:131:4","nodeType":"YulFunctionCall","src":"16212:131:4"},"variableNames":[{"name":"tail","nativeSrc":"16204:4:4","nodeType":"YulIdentifier","src":"16204:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"15931:419:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16082:9:4","nodeType":"YulTypedName","src":"16082:9:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16097:4:4","nodeType":"YulTypedName","src":"16097:4:4","type":""}],"src":"15931:419:4"},{"body":{"nativeSrc":"16384:152:4","nodeType":"YulBlock","src":"16384:152:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16401:1:4","nodeType":"YulLiteral","src":"16401:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"16404:77:4","nodeType":"YulLiteral","src":"16404:77:4","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"16394:6:4","nodeType":"YulIdentifier","src":"16394:6:4"},"nativeSrc":"16394:88:4","nodeType":"YulFunctionCall","src":"16394:88:4"},"nativeSrc":"16394:88:4","nodeType":"YulExpressionStatement","src":"16394:88:4"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16498:1:4","nodeType":"YulLiteral","src":"16498:1:4","type":"","value":"4"},{"kind":"number","nativeSrc":"16501:4:4","nodeType":"YulLiteral","src":"16501:4:4","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"16491:6:4","nodeType":"YulIdentifier","src":"16491:6:4"},"nativeSrc":"16491:15:4","nodeType":"YulFunctionCall","src":"16491:15:4"},"nativeSrc":"16491:15:4","nodeType":"YulExpressionStatement","src":"16491:15:4"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16522:1:4","nodeType":"YulLiteral","src":"16522:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"16525:4:4","nodeType":"YulLiteral","src":"16525:4:4","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"16515:6:4","nodeType":"YulIdentifier","src":"16515:6:4"},"nativeSrc":"16515:15:4","nodeType":"YulFunctionCall","src":"16515:15:4"},"nativeSrc":"16515:15:4","nodeType":"YulExpressionStatement","src":"16515:15:4"}]},"name":"panic_error_0x11","nativeSrc":"16356:180:4","nodeType":"YulFunctionDefinition","src":"16356:180:4"},{"body":{"nativeSrc":"16587:149:4","nodeType":"YulBlock","src":"16587:149:4","statements":[{"nativeSrc":"16597:25:4","nodeType":"YulAssignment","src":"16597:25:4","value":{"arguments":[{"name":"x","nativeSrc":"16620:1:4","nodeType":"YulIdentifier","src":"16620:1:4"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"16602:17:4","nodeType":"YulIdentifier","src":"16602:17:4"},"nativeSrc":"16602:20:4","nodeType":"YulFunctionCall","src":"16602:20:4"},"variableNames":[{"name":"x","nativeSrc":"16597:1:4","nodeType":"YulIdentifier","src":"16597:1:4"}]},{"nativeSrc":"16631:25:4","nodeType":"YulAssignment","src":"16631:25:4","value":{"arguments":[{"name":"y","nativeSrc":"16654:1:4","nodeType":"YulIdentifier","src":"16654:1:4"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"16636:17:4","nodeType":"YulIdentifier","src":"16636:17:4"},"nativeSrc":"16636:20:4","nodeType":"YulFunctionCall","src":"16636:20:4"},"variableNames":[{"name":"y","nativeSrc":"16631:1:4","nodeType":"YulIdentifier","src":"16631:1:4"}]},{"nativeSrc":"16665:17:4","nodeType":"YulAssignment","src":"16665:17:4","value":{"arguments":[{"name":"x","nativeSrc":"16677:1:4","nodeType":"YulIdentifier","src":"16677:1:4"},{"name":"y","nativeSrc":"16680:1:4","nodeType":"YulIdentifier","src":"16680:1:4"}],"functionName":{"name":"sub","nativeSrc":"16673:3:4","nodeType":"YulIdentifier","src":"16673:3:4"},"nativeSrc":"16673:9:4","nodeType":"YulFunctionCall","src":"16673:9:4"},"variableNames":[{"name":"diff","nativeSrc":"16665:4:4","nodeType":"YulIdentifier","src":"16665:4:4"}]},{"body":{"nativeSrc":"16707:22:4","nodeType":"YulBlock","src":"16707:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"16709:16:4","nodeType":"YulIdentifier","src":"16709:16:4"},"nativeSrc":"16709:18:4","nodeType":"YulFunctionCall","src":"16709:18:4"},"nativeSrc":"16709:18:4","nodeType":"YulExpressionStatement","src":"16709:18:4"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"16698:4:4","nodeType":"YulIdentifier","src":"16698:4:4"},{"name":"x","nativeSrc":"16704:1:4","nodeType":"YulIdentifier","src":"16704:1:4"}],"functionName":{"name":"gt","nativeSrc":"16695:2:4","nodeType":"YulIdentifier","src":"16695:2:4"},"nativeSrc":"16695:11:4","nodeType":"YulFunctionCall","src":"16695:11:4"},"nativeSrc":"16692:37:4","nodeType":"YulIf","src":"16692:37:4"}]},"name":"checked_sub_t_uint256","nativeSrc":"16542:194:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"16573:1:4","nodeType":"YulTypedName","src":"16573:1:4","type":""},{"name":"y","nativeSrc":"16576:1:4","nodeType":"YulTypedName","src":"16576:1:4","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"16582:4:4","nodeType":"YulTypedName","src":"16582:4:4","type":""}],"src":"16542:194:4"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_RaffelState_$226(value) {\n        if iszero(lt(value, 2)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_RaffelState_$226(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_RaffelState_$226(value)\n    }\n\n    function convert_t_enum$_RaffelState_$226_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_RaffelState_$226(value)\n    }\n\n    function abi_encode_t_enum$_RaffelState_$226_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_RaffelState_$226_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_RaffelState_$226__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_RaffelState_$226_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_1c0f13643c7a49cb913e5f88b455a6e8d1710e21557a0739c837b716380e00f8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Raffel is not open\")\n\n    }\n\n    function abi_encode_t_stringliteral_1c0f13643c7a49cb913e5f88b455a6e8d1710e21557a0739c837b716380e00f8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_1c0f13643c7a49cb913e5f88b455a6e8d1710e21557a0739c837b716380e00f8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1c0f13643c7a49cb913e5f88b455a6e8d1710e21557a0739c837b716380e00f8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1c0f13643c7a49cb913e5f88b455a6e8d1710e21557a0739c837b716380e00f8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n}\n","id":4,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"29":[{"length":32,"start":1000},{"length":32,"start":1084}],"195":[{"length":32,"start":624},{"length":32,"start":1800}],"201":[{"length":32,"start":1369}],"203":[{"length":32,"start":1429}],"205":[{"length":32,"start":1462}],"211":[{"length":32,"start":1497}],"223":[{"length":32,"start":2525}]},"linkReferences":{},"object":"6080604052600436106100915760003560e01c80636c7c8f17116100595780636c7c8f171461014a5780636e04ff0d146101735780638a78da41146101b1578063e55ae4e8146101dc578063e586a4f01461021957610091565b80630b6831e5146100965780630ff19fd7146100c15780631fe543e3146100cb57806353a2c19a146100f45780635f1b0fd81461011f575b600080fd5b3480156100a257600080fd5b506100ab610244565b6040516100b89190610b2d565b60405180910390f35b6100c961026e565b005b3480156100d757600080fd5b506100f260048036038101906100ed9190610ceb565b6103e6565b005b34801561010057600080fd5b506101096104a6565b6040516101169190610d66565b60405180910390f35b34801561012b57600080fd5b506101346104af565b6040516101419190610d9e565b60405180910390f35b34801561015657600080fd5b50610171600480360381019061016c9190610e14565b6104b8565b005b34801561017f57600080fd5b5061019a60048036038101906101959190610e14565b610691565b6040516101a8929190610efb565b60405180910390f35b3480156101bd57600080fd5b506101c66106a6565b6040516101d39190610fa2565b60405180910390f35b3480156101e857600080fd5b5061020360048036038101906101fe9190610fbd565b6106bd565b604051610210919061100b565b60405180910390f35b34801561022557600080fd5b5061022e610704565b60405161023b9190611035565b60405180910390f35b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f00000000000000000000000000000000000000000000000000000000000000003410156102c8576040517f38c2c67e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018111156102dc576102db610f2b565b5b600160149054906101000a900460ff1660018111156102fe576102fd610f2b565b5b1461033e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610335906110ad565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f8ed6a7aff9a00785197dec230a172a32e2fdea5473a74f7d0477be4505554ef860405160405180910390a2565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461049857337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f400000000000000000000000000000000000000000000000000000000815260040161048f9291906110cd565b60405180910390fd5b6104a2828261072c565b5050565b60006001905090565b60006003905090565b6104c061099d565b61052b5747600080549050600160149054906101000a900460ff1660018111156104ed576104ec610f2b565b5b6040517feee093da000000000000000000000000000000000000000000000000000000008152600401610522939291906110f6565b60405180910390fd5b60018060146101000a81548160ff021916908360018111156105505761054f610f2b565b5b021790555060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635d3b1d307f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060037f000000000000000000000000000000000000000000000000000000000000000060016040518663ffffffff1660e01b815260040161061a959493929190611169565b6020604051808303816000875af1158015610639573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065d91906111d1565b9050807f9cd72631871dff14bbc84976a39c2bca5d943f61f72884a8f331a889778f2c3160405160405180910390a2505050565b6000606061069d61099d565b91509250929050565b6000600160149054906101000a900460ff16905090565b60008082815481106106d2576106d16111fe565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000808054905082600081518110610747576107466111fe565b5b6020026020010151610759919061125c565b905060008082815481106107705761076f6111fe565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160146101000a81548160ff0219169083600181111561080457610803610f2b565b5b0217905550600067ffffffffffffffff81111561082457610823610ba8565b5b6040519080825280602002602001820160405280156108525781602001602082028036833780820191505090505b5060009080519060200190610868929190610a45565b504260028190555060008173ffffffffffffffffffffffffffffffffffffffff1647604051610896906112be565b60006040518083038185875af1925050503d80600081146108d3576040519150601f19603f3d011682016040523d82523d6000602084013e6108d8565b606091505b505090508061091c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109139061131f565b60405180910390fd5b80610953576040517f6b56c6a300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167f7d5e0acef27db2fe13c94bbdb66d614a8840fb82c920a1b9aadb5d6acf3e769260405160405180910390a25050505050565b600080600160149054906101000a900460ff1660018111156109c2576109c1610f2b565b5b600060018111156109d6576109d5610f2b565b5b14905060007f000000000000000000000000000000000000000000000000000000000000000060025442610a0a919061136e565b11905060008060008054905011905060008047119050838015610a2a5750825b8015610a335750815b8015610a3c5750805b94505050505090565b828054828255906000526020600020908101928215610abe579160200282015b82811115610abd5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a65565b5b509050610acb9190610acf565b5090565b5b80821115610ae8576000816000905550600101610ad0565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b1782610aec565b9050919050565b610b2781610b0c565b82525050565b6000602082019050610b426000830184610b1e565b92915050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610b6f81610b5c565b8114610b7a57600080fd5b50565b600081359050610b8c81610b66565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610be082610b97565b810181811067ffffffffffffffff82111715610bff57610bfe610ba8565b5b80604052505050565b6000610c12610b48565b9050610c1e8282610bd7565b919050565b600067ffffffffffffffff821115610c3e57610c3d610ba8565b5b602082029050602081019050919050565b600080fd5b6000610c67610c6284610c23565b610c08565b90508083825260208201905060208402830185811115610c8a57610c89610c4f565b5b835b81811015610cb35780610c9f8882610b7d565b845260208401935050602081019050610c8c565b5050509392505050565b600082601f830112610cd257610cd1610b92565b5b8135610ce2848260208601610c54565b91505092915050565b60008060408385031215610d0257610d01610b52565b5b6000610d1085828601610b7d565b925050602083013567ffffffffffffffff811115610d3157610d30610b57565b5b610d3d85828601610cbd565b9150509250929050565b600063ffffffff82169050919050565b610d6081610d47565b82525050565b6000602082019050610d7b6000830184610d57565b92915050565b600061ffff82169050919050565b610d9881610d81565b82525050565b6000602082019050610db36000830184610d8f565b92915050565b600080fd5b60008083601f840112610dd457610dd3610b92565b5b8235905067ffffffffffffffff811115610df157610df0610db9565b5b602083019150836001820283011115610e0d57610e0c610c4f565b5b9250929050565b60008060208385031215610e2b57610e2a610b52565b5b600083013567ffffffffffffffff811115610e4957610e48610b57565b5b610e5585828601610dbe565b92509250509250929050565b60008115159050919050565b610e7681610e61565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610eb6578082015181840152602081019050610e9b565b60008484015250505050565b6000610ecd82610e7c565b610ed78185610e87565b9350610ee7818560208601610e98565b610ef081610b97565b840191505092915050565b6000604082019050610f106000830185610e6d565b8181036020830152610f228184610ec2565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110610f6b57610f6a610f2b565b5b50565b6000819050610f7c82610f5a565b919050565b6000610f8c82610f6e565b9050919050565b610f9c81610f81565b82525050565b6000602082019050610fb76000830184610f93565b92915050565b600060208284031215610fd357610fd2610b52565b5b6000610fe184828501610b7d565b91505092915050565b6000610ff582610aec565b9050919050565b61100581610fea565b82525050565b60006020820190506110206000830184610ffc565b92915050565b61102f81610b5c565b82525050565b600060208201905061104a6000830184611026565b92915050565b600082825260208201905092915050565b7f52616666656c206973206e6f74206f70656e0000000000000000000000000000600082015250565b6000611097601283611050565b91506110a282611061565b602082019050919050565b600060208201905081810360008301526110c68161108a565b9050919050565b60006040820190506110e26000830185610b1e565b6110ef6020830184610b1e565b9392505050565b600060608201905061110b6000830186611026565b6111186020830185611026565b6111256040830184611026565b949350505050565b6000819050919050565b6111408161112d565b82525050565b600067ffffffffffffffff82169050919050565b61116381611146565b82525050565b600060a08201905061117e6000830188611137565b61118b602083018761115a565b6111986040830186610d8f565b6111a56060830185610d57565b6111b26080830184610d57565b9695505050505050565b6000815190506111cb81610b66565b92915050565b6000602082840312156111e7576111e6610b52565b5b60006111f5848285016111bc565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061126782610b5c565b915061127283610b5c565b9250826112825761128161122d565b5b828206905092915050565b600081905092915050565b50565b60006112a860008361128d565b91506112b382611298565b600082019050919050565b60006112c98261129b565b9150819050919050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000611309600f83611050565b9150611314826112d3565b602082019050919050565b60006020820190508181036000830152611338816112fc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061137982610b5c565b915061138483610b5c565b925082820390508181111561139c5761139b61133f565b5b9291505056fea2646970667358221220e307202e97ac23f4a98c11370ff4a290bfd0e4fbc2911369a9f37653d005064f64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C7C8F17 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x6C7C8F17 EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x8A78DA41 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0xE55AE4E8 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0xE586A4F0 EQ PUSH2 0x219 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0xB6831E5 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0xFF19FD7 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0x53A2C19A EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x5F1B0FD8 EQ PUSH2 0x11F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH2 0x26E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xED SWAP2 SWAP1 PUSH2 0xCEB JUMP JUMPDEST PUSH2 0x3E6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x100 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH2 0x4A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xD66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x134 PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xD9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0xE14 JUMP JUMPDEST PUSH2 0x4B8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x195 SWAP2 SWAP1 PUSH2 0xE14 JUMP JUMPDEST PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP3 SWAP2 SWAP1 PUSH2 0xEFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH2 0x6A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0xFA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x203 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0xFBD JUMP JUMPDEST PUSH2 0x6BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x100B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22E PUSH2 0x704 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x1035 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x38C2C67E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2DC JUMPI PUSH2 0x2DB PUSH2 0xF2B JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2FE JUMPI PUSH2 0x2FD PUSH2 0xF2B JUMP JUMPDEST JUMPDEST EQ PUSH2 0x33E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x335 SWAP1 PUSH2 0x10AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8ED6A7AFF9A00785197DEC230A172A32E2FDEA5473A74F7D0477BE4505554EF8 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x498 JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48F SWAP3 SWAP2 SWAP1 PUSH2 0x10CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4A2 DUP3 DUP3 PUSH2 0x72C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4C0 PUSH2 0x99D JUMP JUMPDEST PUSH2 0x52B JUMPI SELFBALANCE PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x4ED JUMPI PUSH2 0x4EC PUSH2 0xF2B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xEEE093DA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x522 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x550 JUMPI PUSH2 0x54F PUSH2 0xF2B JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61A SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1169 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x639 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x65D SWAP2 SWAP1 PUSH2 0x11D1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH32 0x9CD72631871DFF14BBC84976A39C2BCA5D943F61F72884A8F331A889778F2C31 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x69D PUSH2 0x99D JUMP JUMPDEST SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x6D2 JUMPI PUSH2 0x6D1 PUSH2 0x11FE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x747 JUMPI PUSH2 0x746 PUSH2 0x11FE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x759 SWAP2 SWAP1 PUSH2 0x125C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x770 JUMPI PUSH2 0x76F PUSH2 0x11FE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x804 JUMPI PUSH2 0x803 PUSH2 0xF2B JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x824 JUMPI PUSH2 0x823 PUSH2 0xBA8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x852 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x868 SWAP3 SWAP2 SWAP1 PUSH2 0xA45 JUMP JUMPDEST POP TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0x896 SWAP1 PUSH2 0x12BE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x8D3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x91C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x913 SWAP1 PUSH2 0x131F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x953 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6B56C6A300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7D5E0ACEF27DB2FE13C94BBDB66D614A8840FB82C920A1B9AADB5D6ACF3E7692 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x9C2 JUMPI PUSH2 0x9C1 PUSH2 0xF2B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x9D6 JUMPI PUSH2 0x9D5 PUSH2 0xF2B JUMP JUMPDEST JUMPDEST EQ SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0xA0A SWAP2 SWAP1 PUSH2 0x136E JUMP JUMPDEST GT SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 POP GT SWAP1 POP PUSH1 0x0 DUP1 SELFBALANCE GT SWAP1 POP DUP4 DUP1 ISZERO PUSH2 0xA2A JUMPI POP DUP3 JUMPDEST DUP1 ISZERO PUSH2 0xA33 JUMPI POP DUP2 JUMPDEST DUP1 ISZERO PUSH2 0xA3C JUMPI POP DUP1 JUMPDEST SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xABE JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xABD JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xA65 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xACB SWAP2 SWAP1 PUSH2 0xACF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xAE8 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xAD0 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB17 DUP3 PUSH2 0xAEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB27 DUP2 PUSH2 0xB0C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB42 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB1E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6F DUP2 PUSH2 0xB5C JUMP JUMPDEST DUP2 EQ PUSH2 0xB7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8C DUP2 PUSH2 0xB66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xBE0 DUP3 PUSH2 0xB97 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xBFF JUMPI PUSH2 0xBFE PUSH2 0xBA8 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC12 PUSH2 0xB48 JUMP JUMPDEST SWAP1 POP PUSH2 0xC1E DUP3 DUP3 PUSH2 0xBD7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC3E JUMPI PUSH2 0xC3D PUSH2 0xBA8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC67 PUSH2 0xC62 DUP5 PUSH2 0xC23 JUMP JUMPDEST PUSH2 0xC08 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xC8A JUMPI PUSH2 0xC89 PUSH2 0xC4F JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCB3 JUMPI DUP1 PUSH2 0xC9F DUP9 DUP3 PUSH2 0xB7D JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC8C JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xCD2 JUMPI PUSH2 0xCD1 PUSH2 0xB92 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xCE2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xC54 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD02 JUMPI PUSH2 0xD01 PUSH2 0xB52 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD10 DUP6 DUP3 DUP7 ADD PUSH2 0xB7D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD31 JUMPI PUSH2 0xD30 PUSH2 0xB57 JUMP JUMPDEST JUMPDEST PUSH2 0xD3D DUP6 DUP3 DUP7 ADD PUSH2 0xCBD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD60 DUP2 PUSH2 0xD47 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD7B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD57 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD98 DUP2 PUSH2 0xD81 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDB3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xDD4 JUMPI PUSH2 0xDD3 PUSH2 0xB92 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDF1 JUMPI PUSH2 0xDF0 PUSH2 0xDB9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xE0D JUMPI PUSH2 0xE0C PUSH2 0xC4F JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE2B JUMPI PUSH2 0xE2A PUSH2 0xB52 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE49 JUMPI PUSH2 0xE48 PUSH2 0xB57 JUMP JUMPDEST JUMPDEST PUSH2 0xE55 DUP6 DUP3 DUP7 ADD PUSH2 0xDBE JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE76 DUP2 PUSH2 0xE61 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xE9B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xECD DUP3 PUSH2 0xE7C JUMP JUMPDEST PUSH2 0xED7 DUP2 DUP6 PUSH2 0xE87 JUMP JUMPDEST SWAP4 POP PUSH2 0xEE7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xE98 JUMP JUMPDEST PUSH2 0xEF0 DUP2 PUSH2 0xB97 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF10 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xE6D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xF22 DUP2 DUP5 PUSH2 0xEC2 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0xF6B JUMPI PUSH2 0xF6A PUSH2 0xF2B JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0xF7C DUP3 PUSH2 0xF5A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF8C DUP3 PUSH2 0xF6E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9C DUP2 PUSH2 0xF81 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFB7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF93 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFD3 JUMPI PUSH2 0xFD2 PUSH2 0xB52 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFE1 DUP5 DUP3 DUP6 ADD PUSH2 0xB7D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFF5 DUP3 PUSH2 0xAEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1005 DUP2 PUSH2 0xFEA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1020 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x102F DUP2 PUSH2 0xB5C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x104A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1026 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x52616666656C206973206E6F74206F70656E0000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1097 PUSH1 0x12 DUP4 PUSH2 0x1050 JUMP JUMPDEST SWAP2 POP PUSH2 0x10A2 DUP3 PUSH2 0x1061 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10C6 DUP2 PUSH2 0x108A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x10E2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xB1E JUMP JUMPDEST PUSH2 0x10EF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB1E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x110B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1026 JUMP JUMPDEST PUSH2 0x1118 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1026 JUMP JUMPDEST PUSH2 0x1125 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1026 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1140 DUP2 PUSH2 0x112D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1163 DUP2 PUSH2 0x1146 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x117E PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1137 JUMP JUMPDEST PUSH2 0x118B PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x115A JUMP JUMPDEST PUSH2 0x1198 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xD8F JUMP JUMPDEST PUSH2 0x11A5 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xD57 JUMP JUMPDEST PUSH2 0x11B2 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xD57 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x11CB DUP2 PUSH2 0xB66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11E7 JUMPI PUSH2 0x11E6 PUSH2 0xB52 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11F5 DUP5 DUP3 DUP6 ADD PUSH2 0x11BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1267 DUP3 PUSH2 0xB5C JUMP JUMPDEST SWAP2 POP PUSH2 0x1272 DUP4 PUSH2 0xB5C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1282 JUMPI PUSH2 0x1281 PUSH2 0x122D JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A8 PUSH1 0x0 DUP4 PUSH2 0x128D JUMP JUMPDEST SWAP2 POP PUSH2 0x12B3 DUP3 PUSH2 0x1298 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C9 DUP3 PUSH2 0x129B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1309 PUSH1 0xF DUP4 PUSH2 0x1050 JUMP JUMPDEST SWAP2 POP PUSH2 0x1314 DUP3 PUSH2 0x12D3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1338 DUP2 PUSH2 0x12FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1379 DUP3 PUSH2 0xB5C JUMP JUMPDEST SWAP2 POP PUSH2 0x1384 DUP4 PUSH2 0xB5C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x139C JUMPI PUSH2 0x139B PUSH2 0x133F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 SMOD KECCAK256 0x2E SWAP8 0xAC 0x23 DELEGATECALL 0xA9 DUP13 GT CALLDATACOPY 0xF DELEGATECALL LOG2 SWAP1 0xBF 0xD0 0xE4 0xFB 0xC2 SWAP2 SGT PUSH10 0xA9F37653D005064F6473 PUSH16 0x6C634300081C00330000000000000000 ","sourceMap":"505:4335:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4432:95;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1974:313;;;:::i;:::-;;6794:256:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4639:84:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4729:108;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2932:521;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2691:235;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;4533:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4312:114;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4217:89;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4432:95;4481:7;4506:14;;;;;;;;;;;4499:21;;4432:95;:::o;1974:313::-;2036:10;2024:9;:22;2021:75;;;2069:16;;;;;;;;;;;;;;2021:75;2125:16;2108:33;;;;;;;;:::i;:::-;;:13;;;;;;;;;;;:33;;;;;;;;:::i;:::-;;;2105:91;;2157:28;;;;;;;;;;:::i;:::-;;;;;;;;2105:91;2205:9;2228:10;2205:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2269:10;2255:25;;;;;;;;;;;;1974:313::o;6794:256:1:-;6907:14;6893:28;;:10;:28;;;6889:109;;6964:10;6976:14;6938:53;;;;;;;;;;;;:::i;:::-;;;;;;;;6889:109;7003:42;7022:9;7033:11;7003:18;:42::i;:::-;6794:256;;:::o;4639:84:3:-;4683:6;950:1;4701:15;;4639:84;:::o;4729:108::-;4785:6;850:1;4803:27;;4729:108;:::o;2932:521::-;3007:18;:16;:18::i;:::-;3003:142;;3071:21;3094:9;:16;;;;3119:13;;;;;;;;;;;3111:22;;;;;;;;:::i;:::-;;3048:86;;;;;;;;;;;;;:::i;:::-;;;;;;;;3003:142;3170:23;3154:13;;:39;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;3202:14;3217:16;:35;;;3266:9;3289:16;850:1;3353:18;950:1;3217:186;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3202:201;;3436:9;3414:32;;;;;;;;;;2984:469;2932:521;;:::o;2691:235::-;2823:17;2842:12;2901:18;:16;:18::i;:::-;2886:33;;2691:235;;;;;:::o;4533:97::-;4580:11;4610:13;;;;;;;;;;;4603:20;;4533:97;:::o;4312:114::-;4369:15;4403:9;4413:5;4403:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4396:23;;4312:114;;;:::o;4217:89::-;4263:7;4289:10;4282:17;;4217:89;:::o;3459:752::-;3572:18;3610:9;:16;;;;3593:11;3605:1;3593:14;;;;;;;;:::i;:::-;;;;;;;;:33;;;;:::i;:::-;3572:54;;3636:28;3667:9;3677:13;3667:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3636:55;;3716:12;3701:14;;:27;;;;;;;;;;;;;;;;;;3754:16;3738:13;;:32;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;3814:1;3792:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3780:9;:36;;;;;;;;;;;;:::i;:::-;;3891:15;3873;:33;;;;3965:12;3983;:17;;4008:21;3983:51;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3964:70;;;4052:7;4044:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;4093:7;4089:68;;4123:23;;;;;;;;;;;;;;4089:68;4191:12;4172:32;;;;;;;;;;;;3553:658;;;3459:752;;:::o;2293:392::-;2344:17;2373:11;2408:13;;;;;;;;;;;2388:33;;;;;;;;:::i;:::-;;:16;:33;;;;;;;;:::i;:::-;;;2373:49;;2432:15;2488:10;2469:15;;2451;:33;;;;:::i;:::-;2450:48;2432:66;;2508:15;2546:1;2527:9;:16;;;;:20;2508:40;;2558:15;2601:1;2577:21;:25;2558:45;;2629:6;:20;;;;;2639:10;2629:20;:34;;;;;2653:10;2629:34;:48;;;;;2667:10;2629:48;2613:65;;2363:322;;;;2293:392;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:126:4:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:75::-;626:6;659:2;653:9;643:19;;593:75;:::o;674:117::-;783:1;780;773:12;797:117;906:1;903;896:12;920:77;957:7;986:5;975:16;;920:77;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:117::-;1385:1;1382;1375:12;1399:102;1440:6;1491:2;1487:7;1482:2;1475:5;1471:14;1467:28;1457:38;;1399:102;;;:::o;1507:180::-;1555:77;1552:1;1545:88;1652:4;1649:1;1642:15;1676:4;1673:1;1666:15;1693:281;1776:27;1798:4;1776:27;:::i;:::-;1768:6;1764:40;1906:6;1894:10;1891:22;1870:18;1858:10;1855:34;1852:62;1849:88;;;1917:18;;:::i;:::-;1849:88;1957:10;1953:2;1946:22;1736:238;1693:281;;:::o;1980:129::-;2014:6;2041:20;;:::i;:::-;2031:30;;2070:33;2098:4;2090:6;2070:33;:::i;:::-;1980:129;;;:::o;2115:311::-;2192:4;2282:18;2274:6;2271:30;2268:56;;;2304:18;;:::i;:::-;2268:56;2354:4;2346:6;2342:17;2334:25;;2414:4;2408;2404:15;2396:23;;2115:311;;;:::o;2432:117::-;2541:1;2538;2531:12;2572:710;2668:5;2693:81;2709:64;2766:6;2709:64;:::i;:::-;2693:81;:::i;:::-;2684:90;;2794:5;2823:6;2816:5;2809:21;2857:4;2850:5;2846:16;2839:23;;2910:4;2902:6;2898:17;2890:6;2886:30;2939:3;2931:6;2928:15;2925:122;;;2958:79;;:::i;:::-;2925:122;3073:6;3056:220;3090:6;3085:3;3082:15;3056:220;;;3165:3;3194:37;3227:3;3215:10;3194:37;:::i;:::-;3189:3;3182:50;3261:4;3256:3;3252:14;3245:21;;3132:144;3116:4;3111:3;3107:14;3100:21;;3056:220;;;3060:21;2674:608;;2572:710;;;;;:::o;3305:370::-;3376:5;3425:3;3418:4;3410:6;3406:17;3402:27;3392:122;;3433:79;;:::i;:::-;3392:122;3550:6;3537:20;3575:94;3665:3;3657:6;3650:4;3642:6;3638:17;3575:94;:::i;:::-;3566:103;;3382:293;3305:370;;;;:::o;3681:684::-;3774:6;3782;3831:2;3819:9;3810:7;3806:23;3802:32;3799:119;;;3837:79;;:::i;:::-;3799:119;3957:1;3982:53;4027:7;4018:6;4007:9;4003:22;3982:53;:::i;:::-;3972:63;;3928:117;4112:2;4101:9;4097:18;4084:32;4143:18;4135:6;4132:30;4129:117;;;4165:79;;:::i;:::-;4129:117;4270:78;4340:7;4331:6;4320:9;4316:22;4270:78;:::i;:::-;4260:88;;4055:303;3681:684;;;;;:::o;4371:93::-;4407:7;4447:10;4440:5;4436:22;4425:33;;4371:93;;;:::o;4470:115::-;4555:23;4572:5;4555:23;:::i;:::-;4550:3;4543:36;4470:115;;:::o;4591:218::-;4682:4;4720:2;4709:9;4705:18;4697:26;;4733:69;4799:1;4788:9;4784:17;4775:6;4733:69;:::i;:::-;4591:218;;;;:::o;4815:89::-;4851:7;4891:6;4884:5;4880:18;4869:29;;4815:89;;;:::o;4910:115::-;4995:23;5012:5;4995:23;:::i;:::-;4990:3;4983:36;4910:115;;:::o;5031:218::-;5122:4;5160:2;5149:9;5145:18;5137:26;;5173:69;5239:1;5228:9;5224:17;5215:6;5173:69;:::i;:::-;5031:218;;;;:::o;5255:117::-;5364:1;5361;5354:12;5391:552;5448:8;5458:6;5508:3;5501:4;5493:6;5489:17;5485:27;5475:122;;5516:79;;:::i;:::-;5475:122;5629:6;5616:20;5606:30;;5659:18;5651:6;5648:30;5645:117;;;5681:79;;:::i;:::-;5645:117;5795:4;5787:6;5783:17;5771:29;;5849:3;5841:4;5833:6;5829:17;5819:8;5815:32;5812:41;5809:128;;;5856:79;;:::i;:::-;5809:128;5391:552;;;;;:::o;5949:527::-;6019:6;6027;6076:2;6064:9;6055:7;6051:23;6047:32;6044:119;;;6082:79;;:::i;:::-;6044:119;6230:1;6219:9;6215:17;6202:31;6260:18;6252:6;6249:30;6246:117;;;6282:79;;:::i;:::-;6246:117;6395:64;6451:7;6442:6;6431:9;6427:22;6395:64;:::i;:::-;6377:82;;;;6173:296;5949:527;;;;;:::o;6482:90::-;6516:7;6559:5;6552:13;6545:21;6534:32;;6482:90;;;:::o;6578:109::-;6659:21;6674:5;6659:21;:::i;:::-;6654:3;6647:34;6578:109;;:::o;6693:98::-;6744:6;6778:5;6772:12;6762:22;;6693:98;;;:::o;6797:168::-;6880:11;6914:6;6909:3;6902:19;6954:4;6949:3;6945:14;6930:29;;6797:168;;;;:::o;6971:248::-;7053:1;7063:113;7077:6;7074:1;7071:13;7063:113;;;7162:1;7157:3;7153:11;7147:18;7143:1;7138:3;7134:11;7127:39;7099:2;7096:1;7092:10;7087:15;;7063:113;;;7210:1;7201:6;7196:3;7192:16;7185:27;7033:186;6971:248;;;:::o;7225:373::-;7311:3;7339:38;7371:5;7339:38;:::i;:::-;7393:70;7456:6;7451:3;7393:70;:::i;:::-;7386:77;;7472:65;7530:6;7525:3;7518:4;7511:5;7507:16;7472:65;:::i;:::-;7562:29;7584:6;7562:29;:::i;:::-;7557:3;7553:39;7546:46;;7315:283;7225:373;;;;:::o;7604:407::-;7737:4;7775:2;7764:9;7760:18;7752:26;;7788:65;7850:1;7839:9;7835:17;7826:6;7788:65;:::i;:::-;7900:9;7894:4;7890:20;7885:2;7874:9;7870:18;7863:48;7928:76;7999:4;7990:6;7928:76;:::i;:::-;7920:84;;7604:407;;;;;:::o;8017:180::-;8065:77;8062:1;8055:88;8162:4;8159:1;8152:15;8186:4;8183:1;8176:15;8203:120;8291:1;8284:5;8281:12;8271:46;;8297:18;;:::i;:::-;8271:46;8203:120;:::o;8329:141::-;8381:7;8410:5;8399:16;;8416:48;8458:5;8416:48;:::i;:::-;8329:141;;;:::o;8476:::-;8539:9;8572:39;8605:5;8572:39;:::i;:::-;8559:52;;8476:141;;;:::o;8623:157::-;8723:50;8767:5;8723:50;:::i;:::-;8718:3;8711:63;8623:157;;:::o;8786:248::-;8892:4;8930:2;8919:9;8915:18;8907:26;;8943:84;9024:1;9013:9;9009:17;9000:6;8943:84;:::i;:::-;8786:248;;;;:::o;9040:329::-;9099:6;9148:2;9136:9;9127:7;9123:23;9119:32;9116:119;;;9154:79;;:::i;:::-;9116:119;9274:1;9299:53;9344:7;9335:6;9324:9;9320:22;9299:53;:::i;:::-;9289:63;;9245:117;9040:329;;;;:::o;9375:104::-;9420:7;9449:24;9467:5;9449:24;:::i;:::-;9438:35;;9375:104;;;:::o;9485:142::-;9588:32;9614:5;9588:32;:::i;:::-;9583:3;9576:45;9485:142;;:::o;9633:254::-;9742:4;9780:2;9769:9;9765:18;9757:26;;9793:87;9877:1;9866:9;9862:17;9853:6;9793:87;:::i;:::-;9633:254;;;;:::o;9893:118::-;9980:24;9998:5;9980:24;:::i;:::-;9975:3;9968:37;9893:118;;:::o;10017:222::-;10110:4;10148:2;10137:9;10133:18;10125:26;;10161:71;10229:1;10218:9;10214:17;10205:6;10161:71;:::i;:::-;10017:222;;;;:::o;10245:169::-;10329:11;10363:6;10358:3;10351:19;10403:4;10398:3;10394:14;10379:29;;10245:169;;;;:::o;10420:168::-;10560:20;10556:1;10548:6;10544:14;10537:44;10420:168;:::o;10594:366::-;10736:3;10757:67;10821:2;10816:3;10757:67;:::i;:::-;10750:74;;10833:93;10922:3;10833:93;:::i;:::-;10951:2;10946:3;10942:12;10935:19;;10594:366;;;:::o;10966:419::-;11132:4;11170:2;11159:9;11155:18;11147:26;;11219:9;11213:4;11209:20;11205:1;11194:9;11190:17;11183:47;11247:131;11373:4;11247:131;:::i;:::-;11239:139;;10966:419;;;:::o;11391:332::-;11512:4;11550:2;11539:9;11535:18;11527:26;;11563:71;11631:1;11620:9;11616:17;11607:6;11563:71;:::i;:::-;11644:72;11712:2;11701:9;11697:18;11688:6;11644:72;:::i;:::-;11391:332;;;;;:::o;11729:442::-;11878:4;11916:2;11905:9;11901:18;11893:26;;11929:71;11997:1;11986:9;11982:17;11973:6;11929:71;:::i;:::-;12010:72;12078:2;12067:9;12063:18;12054:6;12010:72;:::i;:::-;12092;12160:2;12149:9;12145:18;12136:6;12092:72;:::i;:::-;11729:442;;;;;;:::o;12177:77::-;12214:7;12243:5;12232:16;;12177:77;;;:::o;12260:118::-;12347:24;12365:5;12347:24;:::i;:::-;12342:3;12335:37;12260:118;;:::o;12384:101::-;12420:7;12460:18;12453:5;12449:30;12438:41;;12384:101;;;:::o;12491:115::-;12576:23;12593:5;12576:23;:::i;:::-;12571:3;12564:36;12491:115;;:::o;12612:648::-;12809:4;12847:3;12836:9;12832:19;12824:27;;12861:71;12929:1;12918:9;12914:17;12905:6;12861:71;:::i;:::-;12942:70;13008:2;12997:9;12993:18;12984:6;12942:70;:::i;:::-;13022;13088:2;13077:9;13073:18;13064:6;13022:70;:::i;:::-;13102;13168:2;13157:9;13153:18;13144:6;13102:70;:::i;:::-;13182:71;13248:3;13237:9;13233:19;13224:6;13182:71;:::i;:::-;12612:648;;;;;;;;:::o;13266:143::-;13323:5;13354:6;13348:13;13339:22;;13370:33;13397:5;13370:33;:::i;:::-;13266:143;;;;:::o;13415:351::-;13485:6;13534:2;13522:9;13513:7;13509:23;13505:32;13502:119;;;13540:79;;:::i;:::-;13502:119;13660:1;13685:64;13741:7;13732:6;13721:9;13717:22;13685:64;:::i;:::-;13675:74;;13631:128;13415:351;;;;:::o;13772:180::-;13820:77;13817:1;13810:88;13917:4;13914:1;13907:15;13941:4;13938:1;13931:15;13958:180;14006:77;14003:1;13996:88;14103:4;14100:1;14093:15;14127:4;14124:1;14117:15;14144:176;14176:1;14193:20;14211:1;14193:20;:::i;:::-;14188:25;;14227:20;14245:1;14227:20;:::i;:::-;14222:25;;14266:1;14256:35;;14271:18;;:::i;:::-;14256:35;14312:1;14309;14305:9;14300:14;;14144:176;;;;:::o;14326:147::-;14427:11;14464:3;14449:18;;14326:147;;;;:::o;14479:114::-;;:::o;14599:398::-;14758:3;14779:83;14860:1;14855:3;14779:83;:::i;:::-;14772:90;;14871:93;14960:3;14871:93;:::i;:::-;14989:1;14984:3;14980:11;14973:18;;14599:398;;;:::o;15003:379::-;15187:3;15209:147;15352:3;15209:147;:::i;:::-;15202:154;;15373:3;15366:10;;15003:379;;;:::o;15388:165::-;15528:17;15524:1;15516:6;15512:14;15505:41;15388:165;:::o;15559:366::-;15701:3;15722:67;15786:2;15781:3;15722:67;:::i;:::-;15715:74;;15798:93;15887:3;15798:93;:::i;:::-;15916:2;15911:3;15907:12;15900:19;;15559:366;;;:::o;15931:419::-;16097:4;16135:2;16124:9;16120:18;16112:26;;16184:9;16178:4;16174:20;16170:1;16159:9;16155:17;16148:47;16212:131;16338:4;16212:131;:::i;:::-;16204:139;;15931:419;;;:::o;16356:180::-;16404:77;16401:1;16394:88;16501:4;16498:1;16491:15;16525:4;16522:1;16515:15;16542:194;16582:4;16602:20;16620:1;16602:20;:::i;:::-;16597:25;;16636:20;16654:1;16636:20;:::i;:::-;16631:25;;16680:1;16677;16673:9;16665:17;;16704:1;16698:4;16695:11;16692:37;;;16709:18;;:::i;:::-;16692:37;16542:194;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1016000","executionCost":"infinite","totalCost":"infinite"},"external":{"checkUpkeep(bytes)":"infinite","enterRaffel()":"infinite","gertRecentWinner()":"2523","getEntryFee()":"infinite","getNumWords()":"410","getPlayer(uint256)":"5033","getRaffelState()":"2662","getRequestConfirmations()":"432","performUpKeep(bytes)":"infinite","rawFulfillRandomWords(uint256,uint256[])":"infinite"},"internal":{"chaecUpkeepLogic()":"infinite","fulfillRandomWords(uint256,uint256[] memory)":"infinite"}},"methodIdentifiers":{"checkUpkeep(bytes)":"6e04ff0d","enterRaffel()":"0ff19fd7","gertRecentWinner()":"0b6831e5","getEntryFee()":"e586a4f0","getNumWords()":"53a2c19a","getPlayer(uint256)":"e55ae4e8","getRaffelState()":"8a78da41","getRequestConfirmations()":"5f1b0fd8","performUpKeep(bytes)":"6c7c8f17","rawFulfillRandomWords(uint256,uint256[])":"1fe543e3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entryFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"gasLane\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"interval\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Raffel_NotOpen\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Raffel_TransferFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numPlayers\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"raffelState\",\"type\":\"uint256\"}],\"name\":\"Raffel_UpkeepNotNeeded\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"RaffelEntered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"RaffelWinnerPicked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"RequestedRaffelWinner\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enterRaffel\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gertRecentWinner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEntryFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumWords\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getPlayer\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRaffelState\",\"outputs\":[{\"internalType\":\"enum Raffel.RaffelState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfirmations\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpKeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Raffel.sol\":\"Raffel\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  // solhint-disable-next-line chainlink-solidity/prefix-immutable-variables-with-i\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  // solhint-disable-next-line chainlink-solidity/prefix-internal-functions-with-underscore\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x5a502a5ce16796565815b295bb2d18a0d26d6f23621f733918c971047c6091d7\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig() external view returns (uint16, uint32, bytes32[] memory);\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint64 subId\\n  ) external view returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint64 subId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x619d9d975540d65ef8d6332a67cbd0dda5b0f95b120b8da56695ed50c2f9fc30\",\"license\":\"MIT\"},\"contracts/Raffel.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.28;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol\\\";\\nimport  \\\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\\\";\\n\\nerror Raffel_NotEnoughEthSent();\\nerror Raffel_TransferFailed();\\nerror Raffel_NotOpen();\\nerror Raffel_UpkeepNotNeeded(\\n    uint256 currentBalance,\\n    uint256 numPlayers,\\n    uint256 raffelState\\n);\\n\\ncontract Raffel is VRFConsumerBaseV2{\\n// State variables\\n    uint256 private immutable i_entryFee;\\n    address payable[] private s_players;\\n    VRFCoordinatorV2Interface private immutable i_vrfCoordinator;\\n    bytes32 private immutable i_gasLane;\\n    uint64 private immutable i_subscriptionId;\\n    uint16 private constant requestConfirmations = 3;\\n    uint32 private immutable i_callbackGasLimit = 100000;\\n    uint32 private constant numWords = 1;\\n\\n// Lottery variables\\n    address private s_recentWinner;\\n    RaffelState private s_raffelState;\\n    uint private s_lastTimeStamp;\\n    uint private immutable i_interval;\\n\\n// Types\\n    enum RaffelState {\\n        OPEN,\\n        CALCULATING\\n    }\\n\\n// Events\\n    event RaffelEntered(address indexed player);\\n    event RequestedRaffelWinner(uint indexed requestId);\\n    event RaffelWinnerPicked(address indexed winner);\\n\\n    constructor(\\n        uint256 entryFee, \\n        address vrfCoordinator,\\n        bytes32 gasLane,\\n        uint64 subscriptionId,\\n        uint32 callbackGasLimit,\\n        uint interval\\n        ) \\n        \\n        VRFConsumerBaseV2(vrfCoordinator) {\\n        i_entryFee = entryFee;\\n        i_vrfCoordinator = VRFCoordinatorV2Interface(vrfCoordinator);\\n        i_gasLane = gasLane;\\n        i_subscriptionId = subscriptionId;\\n        i_callbackGasLimit = callbackGasLimit;\\n        s_raffelState = RaffelState.OPEN;\\n        s_lastTimeStamp = block.timestamp;\\n        i_interval = interval;\\n        \\n    }\\n    function enterRaffel() public payable{\\n        if(msg.value < i_entryFee) {\\n            revert Raffel_NotOpen();\\n        }\\n        if(s_raffelState != RaffelState.OPEN) {\\n            revert(\\\"Raffel is not open\\\");\\n        }\\n        s_players.push(payable(msg.sender));\\n        emit RaffelEntered(msg.sender);\\n    }\\n\\n    function chaecUpkeepLogic() internal view returns (bool upkeepNeeded) {\\n        bool isOpen = (RaffelState.OPEN == s_raffelState);\\n        bool timePassed = (block.timestamp - s_lastTimeStamp) > i_interval;\\n        bool hasPlayers = (s_players.length > 0);\\n        bool hasBalance = (address(this).balance > 0);\\n        upkeepNeeded = (isOpen && timePassed && hasPlayers && hasBalance);\\n    }\\n\\n    function checkUpkeep(\\n        bytes calldata /* checkData */\\n    )\\n        external\\n        \\n        view\\n        \\n        returns (bool upkeepNeeded, bytes memory /* performData */)\\n    {\\n      upkeepNeeded = chaecUpkeepLogic();\\n    }\\n\\n    function performUpKeep(bytes calldata) external     {\\n        \\n        if(!chaecUpkeepLogic()) {\\n            revert Raffel_UpkeepNotNeeded(address(this).balance, s_players.length,uint256(s_raffelState));\\n        }\\n        s_raffelState = RaffelState.CALCULATING;\\n       uint requestId=i_vrfCoordinator.requestRandomWords(\\n            i_gasLane,\\n            i_subscriptionId,\\n            requestConfirmations,\\n            i_callbackGasLimit,\\n            numWords\\n        );\\n    emit RequestedRaffelWinner(requestId);\\n    }\\n\\n    function fulfillRandomWords(uint256 requestId,uint256[] memory randomWords) internal override {\\n        \\n        uint indexodWinner = randomWords[0] % s_players.length;\\n        address payable recentWinner = s_players[indexodWinner];\\n        s_recentWinner=recentWinner;\\n        s_raffelState = RaffelState.OPEN;\\n        s_players = new address payable[](0); // Reset the players array for the next raffle\\n        s_lastTimeStamp = block.timestamp; // Reset the last timestamp for the next raffle\\n        (bool success, ) = recentWinner.call{value: address(this).balance}(\\\"\\\");\\n        require(success, \\\"Transfer failed\\\");\\n        if(!success) {\\n            revert Raffel_TransferFailed();\\n        }\\n\\n        emit RaffelWinnerPicked(recentWinner);\\n    }\\n\\n    function getEntryFee() external view returns (uint256) {\\n        return i_entryFee;\\n    }\\n\\n    function getPlayer(uint256 index) external view returns (address payable) {\\n        return s_players[index];\\n    }\\n\\n    function gertRecentWinner() public view returns (address){\\n        return s_recentWinner;\\n    }\\n\\n    function getRaffelState() public view returns (RaffelState) {\\n        return s_raffelState;\\n    }   \\n\\n    function getNumWords() public pure returns (uint32) {\\n        return numWords;\\n    }\\n\\n    function getRequestConfirmations() public pure returns (uint16) {\\n        return requestConfirmations;\\n    }\\n\\n}\",\"keccak256\":\"0xa44a5cf747aea8356dc28bc982a4c66148314d4836678c0c009b94cac0a1eef4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":198,"contract":"contracts/Raffel.sol:Raffel","label":"s_players","offset":0,"slot":"0","type":"t_array(t_address_payable)dyn_storage"},{"astId":216,"contract":"contracts/Raffel.sol:Raffel","label":"s_recentWinner","offset":0,"slot":"1","type":"t_address"},{"astId":219,"contract":"contracts/Raffel.sol:Raffel","label":"s_raffelState","offset":20,"slot":"1","type":"t_enum(RaffelState)226"},{"astId":221,"contract":"contracts/Raffel.sol:Raffel","label":"s_lastTimeStamp","offset":0,"slot":"2","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_address_payable":{"encoding":"inplace","label":"address payable","numberOfBytes":"20"},"t_array(t_address_payable)dyn_storage":{"base":"t_address_payable","encoding":"dynamic_array","label":"address payable[]","numberOfBytes":"32"},"t_enum(RaffelState)226":{"encoding":"inplace","label":"enum Raffel.RaffelState","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}